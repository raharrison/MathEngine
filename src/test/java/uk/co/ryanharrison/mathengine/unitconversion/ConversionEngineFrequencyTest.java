package uk.co.ryanharrison.mathengine.unitconversion;

import org.junit.Test;
import uk.co.ryanharrison.mathengine.unitconversion.units.Conversion;

import static org.junit.Assert.assertEquals;

public class ConversionEngineFrequencyTest extends ConversionEngineTest {

    @Test
    public void testFrequency() {
        assertEquals(2.86, engine.convertAsDouble(AMOUNT, "cycle per second", "cycle per second", PLACES), 0.0);
        assertEquals(3706560.0, engine.convertAsDouble(AMOUNT, "cycle per second", "degree per hour", PLACES), 0.0);
        assertEquals(61776.0, engine.convertAsDouble(AMOUNT, "cycle per second", "degree per minute", PLACES), 0.0);
        assertEquals(1029.6, engine.convertAsDouble(AMOUNT, "cycle per second", "degree per second", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "cycle per second", "gigahertz", PLACES), 0.0);
        assertEquals(2.86, engine.convertAsDouble(AMOUNT, "cycle per second", "hertz", PLACES), 0.0);
        assertEquals(0.00286, engine.convertAsDouble(AMOUNT, "cycle per second", "kilohertz", PLACES), 0.0);
        assertEquals(2.9e-06, engine.convertAsDouble(AMOUNT, "cycle per second", "megahertz", PLACES), 0.0);
        assertEquals(2860.0, engine.convertAsDouble(AMOUNT, "cycle per second", "millihertz", PLACES), 0.0);
        assertEquals(64691.67562, engine.convertAsDouble(AMOUNT, "cycle per second", "radian per hour", PLACES), 0.0);
        assertEquals(1078.1946032, engine.convertAsDouble(AMOUNT, "cycle per second", "radian per minute", PLACES), 0.0);
        assertEquals(17.96991, engine.convertAsDouble(AMOUNT, "cycle per second", "radian per second", PLACES), 0.0);
        assertEquals(10296.0, engine.convertAsDouble(AMOUNT, "cycle per second", "revolution per hour", PLACES), 0.0);
        assertEquals(171.6, engine.convertAsDouble(AMOUNT, "cycle per second", "revolution per minute", PLACES), 0.0);
        assertEquals(2.86, engine.convertAsDouble(AMOUNT, "cycle per second", "revolution per second", PLACES), 0.0);
        assertEquals(171.6, engine.convertAsDouble(AMOUNT, "cycle per second", "RPM", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "cycle per second", "terrahertz", PLACES), 0.0);
        assertEquals(2.2e-06, engine.convertAsDouble(AMOUNT, "degree per hour", "cycle per second", PLACES), 0.0);
        assertEquals(2.86, engine.convertAsDouble(AMOUNT, "degree per hour", "degree per hour", PLACES), 0.0);
        assertEquals(0.0476667, engine.convertAsDouble(AMOUNT, "degree per hour", "degree per minute", PLACES), 0.0);
        assertEquals(0.0007944, engine.convertAsDouble(AMOUNT, "degree per hour", "degree per second", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "degree per hour", "gigahertz", PLACES), 0.0);
        assertEquals(2.2e-06, engine.convertAsDouble(AMOUNT, "degree per hour", "hertz", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "degree per hour", "kilohertz", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "degree per hour", "megahertz", PLACES), 0.0);
        assertEquals(0.0022068, engine.convertAsDouble(AMOUNT, "degree per hour", "millihertz", PLACES), 0.0);
        assertEquals(0.0499164, engine.convertAsDouble(AMOUNT, "degree per hour", "radian per hour", PLACES), 0.0);
        assertEquals(0.0008319, engine.convertAsDouble(AMOUNT, "degree per hour", "radian per minute", PLACES), 0.0);
        assertEquals(1.39e-05, engine.convertAsDouble(AMOUNT, "degree per hour", "radian per second", PLACES), 0.0);
        assertEquals(0.0079444, engine.convertAsDouble(AMOUNT, "degree per hour", "revolution per hour", PLACES), 0.0);
        assertEquals(0.0001324, engine.convertAsDouble(AMOUNT, "degree per hour", "revolution per minute", PLACES), 0.0);
        assertEquals(2.2e-06, engine.convertAsDouble(AMOUNT, "degree per hour", "revolution per second", PLACES), 0.0);
        assertEquals(0.0001324, engine.convertAsDouble(AMOUNT, "degree per hour", "RPM", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "degree per hour", "terrahertz", PLACES), 0.0);
        assertEquals(0.0001324, engine.convertAsDouble(AMOUNT, "degree per minute", "cycle per second", PLACES), 0.0);
        assertEquals(171.6, engine.convertAsDouble(AMOUNT, "degree per minute", "degree per hour", PLACES), 0.0);
        assertEquals(2.86, engine.convertAsDouble(AMOUNT, "degree per minute", "degree per minute", PLACES), 0.0);
        assertEquals(0.0476667, engine.convertAsDouble(AMOUNT, "degree per minute", "degree per second", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "degree per minute", "gigahertz", PLACES), 0.0);
        assertEquals(0.0001324, engine.convertAsDouble(AMOUNT, "degree per minute", "hertz", PLACES), 0.0);
        assertEquals(1e-07, engine.convertAsDouble(AMOUNT, "degree per minute", "kilohertz", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "degree per minute", "megahertz", PLACES), 0.0);
        assertEquals(0.1324074, engine.convertAsDouble(AMOUNT, "degree per minute", "millihertz", PLACES), 0.0);
        assertEquals(2.994985, engine.convertAsDouble(AMOUNT, "degree per minute", "radian per hour", PLACES), 0.0);
        assertEquals(0.0499164, engine.convertAsDouble(AMOUNT, "degree per minute", "radian per minute", PLACES), 0.0);
        assertEquals(0.0008319, engine.convertAsDouble(AMOUNT, "degree per minute", "radian per second", PLACES), 0.0);
        assertEquals(0.4766667, engine.convertAsDouble(AMOUNT, "degree per minute", "revolution per hour", PLACES), 0.0);
        assertEquals(0.0079444, engine.convertAsDouble(AMOUNT, "degree per minute", "revolution per minute", PLACES), 0.0);
        assertEquals(0.0001324, engine.convertAsDouble(AMOUNT, "degree per minute", "revolution per second", PLACES), 0.0);
        assertEquals(0.0079444, engine.convertAsDouble(AMOUNT, "degree per minute", "RPM", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "degree per minute", "terrahertz", PLACES), 0.0);
        assertEquals(0.0079444, engine.convertAsDouble(AMOUNT, "degree per second", "cycle per second", PLACES), 0.0);
        assertEquals(10296.0, engine.convertAsDouble(AMOUNT, "degree per second", "degree per hour", PLACES), 0.0);
        assertEquals(171.6, engine.convertAsDouble(AMOUNT, "degree per second", "degree per minute", PLACES), 0.0);
        assertEquals(2.86, engine.convertAsDouble(AMOUNT, "degree per second", "degree per second", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "degree per second", "gigahertz", PLACES), 0.0);
        assertEquals(0.0079444, engine.convertAsDouble(AMOUNT, "degree per second", "hertz", PLACES), 0.0);
        assertEquals(7.9e-06, engine.convertAsDouble(AMOUNT, "degree per second", "kilohertz", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "degree per second", "megahertz", PLACES), 0.0);
        assertEquals(7.9444444, engine.convertAsDouble(AMOUNT, "degree per second", "millihertz", PLACES), 0.0);
        assertEquals(179.6990989, engine.convertAsDouble(AMOUNT, "degree per second", "radian per hour", PLACES), 0.0);
        assertEquals(2.994985, engine.convertAsDouble(AMOUNT, "degree per second", "radian per minute", PLACES), 0.0);
        assertEquals(0.0499164, engine.convertAsDouble(AMOUNT, "degree per second", "radian per second", PLACES), 0.0);
        assertEquals(28.6, engine.convertAsDouble(AMOUNT, "degree per second", "revolution per hour", PLACES), 0.0);
        assertEquals(0.4766667, engine.convertAsDouble(AMOUNT, "degree per second", "revolution per minute", PLACES), 0.0);
        assertEquals(0.0079444, engine.convertAsDouble(AMOUNT, "degree per second", "revolution per second", PLACES), 0.0);
        assertEquals(0.4766667, engine.convertAsDouble(AMOUNT, "degree per second", "RPM", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "degree per second", "terrahertz", PLACES), 0.0);
        assertEquals(2860000000.0, engine.convertAsDouble(AMOUNT, "gigahertz", "cycle per second", PLACES), 0.0);
        assertEquals(3706560000000000.0, engine.convertAsDouble(AMOUNT, "gigahertz", "degree per hour", PLACES), 0.0);
        assertEquals(61776000000000.0, engine.convertAsDouble(AMOUNT, "gigahertz", "degree per minute", PLACES), 0.0);
        assertEquals(1.0296E12, engine.convertAsDouble(AMOUNT, "gigahertz", "degree per second", PLACES), 0.0);
        assertEquals(2.86, engine.convertAsDouble(AMOUNT, "gigahertz", "gigahertz", PLACES), 0.0);
        assertEquals(2860000000.0, engine.convertAsDouble(AMOUNT, "gigahertz", "hertz", PLACES), 0.0);
        assertEquals(2860000.0, engine.convertAsDouble(AMOUNT, "gigahertz", "kilohertz", PLACES), 0.0);
        assertEquals(2860.0, engine.convertAsDouble(AMOUNT, "gigahertz", "megahertz", PLACES), 0.0);
        assertEquals(2860000000000.0, engine.convertAsDouble(AMOUNT, "gigahertz", "millihertz", PLACES), 0.0);
        assertEquals(6.469167562E13, engine.convertAsDouble(AMOUNT, "gigahertz", "radian per hour", PLACES), 0.0);
        assertEquals(1078194603200.0001, engine.convertAsDouble(AMOUNT, "gigahertz", "radian per minute", PLACES), 0.0);
        assertEquals(1.7969909958E10, engine.convertAsDouble(AMOUNT, "gigahertz", "radian per second", PLACES), 0.0);
        assertEquals(10296000000000.0, engine.convertAsDouble(AMOUNT, "gigahertz", "revolution per hour", PLACES), 0.0);
        assertEquals(1.716E11, engine.convertAsDouble(AMOUNT, "gigahertz", "revolution per minute", PLACES), 0.0);
        assertEquals(2860000000.0, engine.convertAsDouble(AMOUNT, "gigahertz", "revolution per second", PLACES), 0.0);
        assertEquals(1.716E11, engine.convertAsDouble(AMOUNT, "gigahertz", "RPM", PLACES), 0.0);
        assertEquals(0.00286, engine.convertAsDouble(AMOUNT, "gigahertz", "terrahertz", PLACES), 0.0);
        assertEquals(2.86, engine.convertAsDouble(AMOUNT, "hertz", "cycle per second", PLACES), 0.0);
        assertEquals(3706560.0, engine.convertAsDouble(AMOUNT, "hertz", "degree per hour", PLACES), 0.0);
        assertEquals(61776.0, engine.convertAsDouble(AMOUNT, "hertz", "degree per minute", PLACES), 0.0);
        assertEquals(1029.6, engine.convertAsDouble(AMOUNT, "hertz", "degree per second", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "hertz", "gigahertz", PLACES), 0.0);
        assertEquals(2.86, engine.convertAsDouble(AMOUNT, "hertz", "hertz", PLACES), 0.0);
        assertEquals(0.00286, engine.convertAsDouble(AMOUNT, "hertz", "kilohertz", PLACES), 0.0);
        assertEquals(2.9e-06, engine.convertAsDouble(AMOUNT, "hertz", "megahertz", PLACES), 0.0);
        assertEquals(2860.0, engine.convertAsDouble(AMOUNT, "hertz", "millihertz", PLACES), 0.0);
        assertEquals(64691.67562, engine.convertAsDouble(AMOUNT, "hertz", "radian per hour", PLACES), 0.0);
        assertEquals(1078.1946032, engine.convertAsDouble(AMOUNT, "hertz", "radian per minute", PLACES), 0.0);
        assertEquals(17.96991, engine.convertAsDouble(AMOUNT, "hertz", "radian per second", PLACES), 0.0);
        assertEquals(10296.0, engine.convertAsDouble(AMOUNT, "hertz", "revolution per hour", PLACES), 0.0);
        assertEquals(171.6, engine.convertAsDouble(AMOUNT, "hertz", "revolution per minute", PLACES), 0.0);
        assertEquals(2.86, engine.convertAsDouble(AMOUNT, "hertz", "revolution per second", PLACES), 0.0);
        assertEquals(171.6, engine.convertAsDouble(AMOUNT, "hertz", "RPM", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "hertz", "terrahertz", PLACES), 0.0);
        assertEquals(2860.0, engine.convertAsDouble(AMOUNT, "kilohertz", "cycle per second", PLACES), 0.0);
        assertEquals(3706560000.0, engine.convertAsDouble(AMOUNT, "kilohertz", "degree per hour", PLACES), 0.0);
        assertEquals(61776000.0, engine.convertAsDouble(AMOUNT, "kilohertz", "degree per minute", PLACES), 0.0);
        assertEquals(1029600.0, engine.convertAsDouble(AMOUNT, "kilohertz", "degree per second", PLACES), 0.0);
        assertEquals(2.9e-06, engine.convertAsDouble(AMOUNT, "kilohertz", "gigahertz", PLACES), 0.0);
        assertEquals(2860.0, engine.convertAsDouble(AMOUNT, "kilohertz", "hertz", PLACES), 0.0);
        assertEquals(2.86, engine.convertAsDouble(AMOUNT, "kilohertz", "kilohertz", PLACES), 0.0);
        assertEquals(0.00286, engine.convertAsDouble(AMOUNT, "kilohertz", "megahertz", PLACES), 0.0);
        assertEquals(2860000.0, engine.convertAsDouble(AMOUNT, "kilohertz", "millihertz", PLACES), 0.0);
        assertEquals(64691675.62, engine.convertAsDouble(AMOUNT, "kilohertz", "radian per hour", PLACES), 0.0);
        assertEquals(1078194.6032, engine.convertAsDouble(AMOUNT, "kilohertz", "radian per minute", PLACES), 0.0);
        assertEquals(17969.909958, engine.convertAsDouble(AMOUNT, "kilohertz", "radian per second", PLACES), 0.0);
        assertEquals(10296000.0, engine.convertAsDouble(AMOUNT, "kilohertz", "revolution per hour", PLACES), 0.0);
        assertEquals(171600.0, engine.convertAsDouble(AMOUNT, "kilohertz", "revolution per minute", PLACES), 0.0);
        assertEquals(2860.0, engine.convertAsDouble(AMOUNT, "kilohertz", "revolution per second", PLACES), 0.0);
        assertEquals(171600.0, engine.convertAsDouble(AMOUNT, "kilohertz", "RPM", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "kilohertz", "terrahertz", PLACES), 0.0);
        assertEquals(2860000.0, engine.convertAsDouble(AMOUNT, "megahertz", "cycle per second", PLACES), 0.0);
        assertEquals(3706560000000.0, engine.convertAsDouble(AMOUNT, "megahertz", "degree per hour", PLACES), 0.0);
        assertEquals(61776000000.0, engine.convertAsDouble(AMOUNT, "megahertz", "degree per minute", PLACES), 0.0);
        assertEquals(1.0296E9, engine.convertAsDouble(AMOUNT, "megahertz", "degree per second", PLACES), 0.0);
        assertEquals(0.00286, engine.convertAsDouble(AMOUNT, "megahertz", "gigahertz", PLACES), 0.0);
        assertEquals(2860000.0, engine.convertAsDouble(AMOUNT, "megahertz", "hertz", PLACES), 0.0);
        assertEquals(2860.0, engine.convertAsDouble(AMOUNT, "megahertz", "kilohertz", PLACES), 0.0);
        assertEquals(2.86, engine.convertAsDouble(AMOUNT, "megahertz", "megahertz", PLACES), 0.0);
        assertEquals(2860000000.0, engine.convertAsDouble(AMOUNT, "megahertz", "millihertz", PLACES), 0.0);
        assertEquals(6.469167562E10, engine.convertAsDouble(AMOUNT, "megahertz", "radian per hour", PLACES), 0.0);
        assertEquals(1078194603.2, engine.convertAsDouble(AMOUNT, "megahertz", "radian per minute", PLACES), 0.0);
        assertEquals(17969909.958, engine.convertAsDouble(AMOUNT, "megahertz", "radian per second", PLACES), 0.0);
        assertEquals(10296000000.0, engine.convertAsDouble(AMOUNT, "megahertz", "revolution per hour", PLACES), 0.0);
        assertEquals(171600000.0, engine.convertAsDouble(AMOUNT, "megahertz", "revolution per minute", PLACES), 0.0);
        assertEquals(2860000.0, engine.convertAsDouble(AMOUNT, "megahertz", "revolution per second", PLACES), 0.0);
        assertEquals(171600000.0, engine.convertAsDouble(AMOUNT, "megahertz", "RPM", PLACES), 0.0);
        assertEquals(2.9e-06, engine.convertAsDouble(AMOUNT, "megahertz", "terrahertz", PLACES), 0.0);
        assertEquals(0.00286, engine.convertAsDouble(AMOUNT, "millihertz", "cycle per second", PLACES), 0.0);
        assertEquals(3706.56, engine.convertAsDouble(AMOUNT, "millihertz", "degree per hour", PLACES), 0.0);
        assertEquals(61.776, engine.convertAsDouble(AMOUNT, "millihertz", "degree per minute", PLACES), 0.0);
        assertEquals(1.0296, engine.convertAsDouble(AMOUNT, "millihertz", "degree per second", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "millihertz", "gigahertz", PLACES), 0.0);
        assertEquals(0.00286, engine.convertAsDouble(AMOUNT, "millihertz", "hertz", PLACES), 0.0);
        assertEquals(2.9e-06, engine.convertAsDouble(AMOUNT, "millihertz", "kilohertz", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "millihertz", "megahertz", PLACES), 0.0);
        assertEquals(2.86, engine.convertAsDouble(AMOUNT, "millihertz", "millihertz", PLACES), 0.0);
        assertEquals(64.6916756, engine.convertAsDouble(AMOUNT, "millihertz", "radian per hour", PLACES), 0.0);
        assertEquals(1.0781946, engine.convertAsDouble(AMOUNT, "millihertz", "radian per minute", PLACES), 0.0);
        assertEquals(0.0179699, engine.convertAsDouble(AMOUNT, "millihertz", "radian per second", PLACES), 0.0);
        assertEquals(10.296, engine.convertAsDouble(AMOUNT, "millihertz", "revolution per hour", PLACES), 0.0);
        assertEquals(0.1716, engine.convertAsDouble(AMOUNT, "millihertz", "revolution per minute", PLACES), 0.0);
        assertEquals(0.00286, engine.convertAsDouble(AMOUNT, "millihertz", "revolution per second", PLACES), 0.0);
        assertEquals(0.1716, engine.convertAsDouble(AMOUNT, "millihertz", "RPM", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "millihertz", "terrahertz", PLACES), 0.0);
        assertEquals(0.0001264, engine.convertAsDouble(AMOUNT, "radian per hour", "cycle per second", PLACES), 0.0);
        assertEquals(163.8659302, engine.convertAsDouble(AMOUNT, "radian per hour", "degree per hour", PLACES), 0.0);
        assertEquals(2.7310988, engine.convertAsDouble(AMOUNT, "radian per hour", "degree per minute", PLACES), 0.0);
        assertEquals(0.0455183, engine.convertAsDouble(AMOUNT, "radian per hour", "degree per second", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "radian per hour", "gigahertz", PLACES), 0.0);
        assertEquals(0.0001264, engine.convertAsDouble(AMOUNT, "radian per hour", "hertz", PLACES), 0.0);
        assertEquals(1e-07, engine.convertAsDouble(AMOUNT, "radian per hour", "kilohertz", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "radian per hour", "megahertz", PLACES), 0.0);
        assertEquals(0.1264398, engine.convertAsDouble(AMOUNT, "radian per hour", "millihertz", PLACES), 0.0);
        assertEquals(2.86, engine.convertAsDouble(AMOUNT, "radian per hour", "radian per hour", PLACES), 0.0);
        assertEquals(0.0476667, engine.convertAsDouble(AMOUNT, "radian per hour", "radian per minute", PLACES), 0.0);
        assertEquals(0.0007944, engine.convertAsDouble(AMOUNT, "radian per hour", "radian per second", PLACES), 0.0);
        assertEquals(0.4551831, engine.convertAsDouble(AMOUNT, "radian per hour", "revolution per hour", PLACES), 0.0);
        assertEquals(0.0075864, engine.convertAsDouble(AMOUNT, "radian per hour", "revolution per minute", PLACES), 0.0);
        assertEquals(0.0001264, engine.convertAsDouble(AMOUNT, "radian per hour", "revolution per second", PLACES), 0.0);
        assertEquals(0.0075864, engine.convertAsDouble(AMOUNT, "radian per hour", "RPM", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "radian per hour", "terrahertz", PLACES), 0.0);
        assertEquals(0.0075864, engine.convertAsDouble(AMOUNT, "radian per minute", "cycle per second", PLACES), 0.0);
        assertEquals(9831.9557235, engine.convertAsDouble(AMOUNT, "radian per minute", "degree per hour", PLACES), 0.0);
        assertEquals(163.8659287, engine.convertAsDouble(AMOUNT, "radian per minute", "degree per minute", PLACES), 0.0);
        assertEquals(2.7310988, engine.convertAsDouble(AMOUNT, "radian per minute", "degree per second", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "radian per minute", "gigahertz", PLACES), 0.0);
        assertEquals(0.0075864, engine.convertAsDouble(AMOUNT, "radian per minute", "hertz", PLACES), 0.0);
        assertEquals(7.6e-06, engine.convertAsDouble(AMOUNT, "radian per minute", "kilohertz", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "radian per minute", "megahertz", PLACES), 0.0);
        assertEquals(7.5863856, engine.convertAsDouble(AMOUNT, "radian per minute", "millihertz", PLACES), 0.0);
        assertEquals(171.5999985, engine.convertAsDouble(AMOUNT, "radian per minute", "radian per hour", PLACES), 0.0);
        assertEquals(2.86, engine.convertAsDouble(AMOUNT, "radian per minute", "radian per minute", PLACES), 0.0);
        assertEquals(0.0476667, engine.convertAsDouble(AMOUNT, "radian per minute", "radian per second", PLACES), 0.0);
        assertEquals(27.3109881, engine.convertAsDouble(AMOUNT, "radian per minute", "revolution per hour", PLACES), 0.0);
        assertEquals(0.4551831, engine.convertAsDouble(AMOUNT, "radian per minute", "revolution per minute", PLACES), 0.0);
        assertEquals(0.0075864, engine.convertAsDouble(AMOUNT, "radian per minute", "revolution per second", PLACES), 0.0);
        assertEquals(0.4551831, engine.convertAsDouble(AMOUNT, "radian per minute", "RPM", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "radian per minute", "terrahertz", PLACES), 0.0);
        assertEquals(0.4551831, engine.convertAsDouble(AMOUNT, "radian per second", "cycle per second", PLACES), 0.0);
        assertEquals(589917.3465408, engine.convertAsDouble(AMOUNT, "radian per second", "degree per hour", PLACES), 0.0);
        assertEquals(9831.9557757, engine.convertAsDouble(AMOUNT, "radian per second", "degree per minute", PLACES), 0.0);
        assertEquals(163.8659296, engine.convertAsDouble(AMOUNT, "radian per second", "degree per second", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "radian per second", "gigahertz", PLACES), 0.0);
        assertEquals(0.4551831, engine.convertAsDouble(AMOUNT, "radian per second", "hertz", PLACES), 0.0);
        assertEquals(0.0004552, engine.convertAsDouble(AMOUNT, "radian per second", "kilohertz", PLACES), 0.0);
        assertEquals(5e-07, engine.convertAsDouble(AMOUNT, "radian per second", "megahertz", PLACES), 0.0);
        assertEquals(455.1831378, engine.convertAsDouble(AMOUNT, "radian per second", "millihertz", PLACES), 0.0);
        assertEquals(10295.9999636, engine.convertAsDouble(AMOUNT, "radian per second", "radian per hour", PLACES), 0.0);
        assertEquals(171.6000009, engine.convertAsDouble(AMOUNT, "radian per second", "radian per minute", PLACES), 0.0);
        assertEquals(2.86, engine.convertAsDouble(AMOUNT, "radian per second", "radian per second", PLACES), 0.0);
        assertEquals(1638.6592959, engine.convertAsDouble(AMOUNT, "radian per second", "revolution per hour", PLACES), 0.0);
        assertEquals(27.3109883, engine.convertAsDouble(AMOUNT, "radian per second", "revolution per minute", PLACES), 0.0);
        assertEquals(0.4551831, engine.convertAsDouble(AMOUNT, "radian per second", "revolution per second", PLACES), 0.0);
        assertEquals(27.3109883, engine.convertAsDouble(AMOUNT, "radian per second", "RPM", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "radian per second", "terrahertz", PLACES), 0.0);
        assertEquals(0.0007944, engine.convertAsDouble(AMOUNT, "revolution per hour", "cycle per second", PLACES), 0.0);
        assertEquals(1029.6, engine.convertAsDouble(AMOUNT, "revolution per hour", "degree per hour", PLACES), 0.0);
        assertEquals(17.16, engine.convertAsDouble(AMOUNT, "revolution per hour", "degree per minute", PLACES), 0.0);
        assertEquals(0.286, engine.convertAsDouble(AMOUNT, "revolution per hour", "degree per second", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "revolution per hour", "gigahertz", PLACES), 0.0);
        assertEquals(0.0007944, engine.convertAsDouble(AMOUNT, "revolution per hour", "hertz", PLACES), 0.0);
        assertEquals(8e-07, engine.convertAsDouble(AMOUNT, "revolution per hour", "kilohertz", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "revolution per hour", "megahertz", PLACES), 0.0);
        assertEquals(0.7944444, engine.convertAsDouble(AMOUNT, "revolution per hour", "millihertz", PLACES), 0.0);
        assertEquals(17.9699099, engine.convertAsDouble(AMOUNT, "revolution per hour", "radian per hour", PLACES), 0.0);
        assertEquals(0.2994985, engine.convertAsDouble(AMOUNT, "revolution per hour", "radian per minute", PLACES), 0.0);
        assertEquals(0.0049916, engine.convertAsDouble(AMOUNT, "revolution per hour", "radian per second", PLACES), 0.0);
        assertEquals(2.86, engine.convertAsDouble(AMOUNT, "revolution per hour", "revolution per hour", PLACES), 0.0);
        assertEquals(0.0476667, engine.convertAsDouble(AMOUNT, "revolution per hour", "revolution per minute", PLACES), 0.0);
        assertEquals(0.0007944, engine.convertAsDouble(AMOUNT, "revolution per hour", "revolution per second", PLACES), 0.0);
        assertEquals(0.0476667, engine.convertAsDouble(AMOUNT, "revolution per hour", "RPM", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "revolution per hour", "terrahertz", PLACES), 0.0);
        assertEquals(0.0476667, engine.convertAsDouble(AMOUNT, "revolution per minute", "cycle per second", PLACES), 0.0);
        assertEquals(61776.0, engine.convertAsDouble(AMOUNT, "revolution per minute", "degree per hour", PLACES), 0.0);
        assertEquals(1029.6, engine.convertAsDouble(AMOUNT, "revolution per minute", "degree per minute", PLACES), 0.0);
        assertEquals(17.16, engine.convertAsDouble(AMOUNT, "revolution per minute", "degree per second", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "revolution per minute", "gigahertz", PLACES), 0.0);
        assertEquals(0.0476667, engine.convertAsDouble(AMOUNT, "revolution per minute", "hertz", PLACES), 0.0);
        assertEquals(4.77e-05, engine.convertAsDouble(AMOUNT, "revolution per minute", "kilohertz", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "revolution per minute", "megahertz", PLACES), 0.0);
        assertEquals(47.6666667, engine.convertAsDouble(AMOUNT, "revolution per minute", "millihertz", PLACES), 0.0);
        assertEquals(1078.1945937, engine.convertAsDouble(AMOUNT, "revolution per minute", "radian per hour", PLACES), 0.0);
        assertEquals(17.9699101, engine.convertAsDouble(AMOUNT, "revolution per minute", "radian per minute", PLACES), 0.0);
        assertEquals(0.2994985, engine.convertAsDouble(AMOUNT, "revolution per minute", "radian per second", PLACES), 0.0);
        assertEquals(171.6, engine.convertAsDouble(AMOUNT, "revolution per minute", "revolution per hour", PLACES), 0.0);
        assertEquals(2.86, engine.convertAsDouble(AMOUNT, "revolution per minute", "revolution per minute", PLACES), 0.0);
        assertEquals(0.0476667, engine.convertAsDouble(AMOUNT, "revolution per minute", "revolution per second", PLACES), 0.0);
        assertEquals(2.86, engine.convertAsDouble(AMOUNT, "revolution per minute", "RPM", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "revolution per minute", "terrahertz", PLACES), 0.0);
        assertEquals(2.86, engine.convertAsDouble(AMOUNT, "revolution per second", "cycle per second", PLACES), 0.0);
        assertEquals(3706560.0, engine.convertAsDouble(AMOUNT, "revolution per second", "degree per hour", PLACES), 0.0);
        assertEquals(61776.0, engine.convertAsDouble(AMOUNT, "revolution per second", "degree per minute", PLACES), 0.0);
        assertEquals(1029.6, engine.convertAsDouble(AMOUNT, "revolution per second", "degree per second", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "revolution per second", "gigahertz", PLACES), 0.0);
        assertEquals(2.86, engine.convertAsDouble(AMOUNT, "revolution per second", "hertz", PLACES), 0.0);
        assertEquals(0.00286, engine.convertAsDouble(AMOUNT, "revolution per second", "kilohertz", PLACES), 0.0);
        assertEquals(2.9e-06, engine.convertAsDouble(AMOUNT, "revolution per second", "megahertz", PLACES), 0.0);
        assertEquals(2860.0, engine.convertAsDouble(AMOUNT, "revolution per second", "millihertz", PLACES), 0.0);
        assertEquals(64691.67562, engine.convertAsDouble(AMOUNT, "revolution per second", "radian per hour", PLACES), 0.0);
        assertEquals(1078.1946032, engine.convertAsDouble(AMOUNT, "revolution per second", "radian per minute", PLACES), 0.0);
        assertEquals(17.96991, engine.convertAsDouble(AMOUNT, "revolution per second", "radian per second", PLACES), 0.0);
        assertEquals(10296.0, engine.convertAsDouble(AMOUNT, "revolution per second", "revolution per hour", PLACES), 0.0);
        assertEquals(171.6, engine.convertAsDouble(AMOUNT, "revolution per second", "revolution per minute", PLACES), 0.0);
        assertEquals(2.86, engine.convertAsDouble(AMOUNT, "revolution per second", "revolution per second", PLACES), 0.0);
        assertEquals(171.6, engine.convertAsDouble(AMOUNT, "revolution per second", "RPM", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "revolution per second", "terrahertz", PLACES), 0.0);
        assertEquals(0.0476667, engine.convertAsDouble(AMOUNT, "RPM", "cycle per second", PLACES), 0.0);
        assertEquals(61776.0, engine.convertAsDouble(AMOUNT, "RPM", "degree per hour", PLACES), 0.0);
        assertEquals(1029.6, engine.convertAsDouble(AMOUNT, "RPM", "degree per minute", PLACES), 0.0);
        assertEquals(17.16, engine.convertAsDouble(AMOUNT, "RPM", "degree per second", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "RPM", "gigahertz", PLACES), 0.0);
        assertEquals(0.0476667, engine.convertAsDouble(AMOUNT, "RPM", "hertz", PLACES), 0.0);
        assertEquals(4.77e-05, engine.convertAsDouble(AMOUNT, "RPM", "kilohertz", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "RPM", "megahertz", PLACES), 0.0);
        assertEquals(47.6666667, engine.convertAsDouble(AMOUNT, "RPM", "millihertz", PLACES), 0.0);
        assertEquals(1078.1945937, engine.convertAsDouble(AMOUNT, "RPM", "radian per hour", PLACES), 0.0);
        assertEquals(17.9699101, engine.convertAsDouble(AMOUNT, "RPM", "radian per minute", PLACES), 0.0);
        assertEquals(0.2994985, engine.convertAsDouble(AMOUNT, "RPM", "radian per second", PLACES), 0.0);
        assertEquals(171.6, engine.convertAsDouble(AMOUNT, "RPM", "revolution per hour", PLACES), 0.0);
        assertEquals(2.86, engine.convertAsDouble(AMOUNT, "RPM", "revolution per minute", PLACES), 0.0);
        assertEquals(0.0476667, engine.convertAsDouble(AMOUNT, "RPM", "revolution per second", PLACES), 0.0);
        assertEquals(2.86, engine.convertAsDouble(AMOUNT, "RPM", "RPM", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "RPM", "terrahertz", PLACES), 0.0);
        assertEquals(2860000000000.0, engine.convertAsDouble(AMOUNT, "terrahertz", "cycle per second", PLACES), 0.0);
        assertEquals(3.70656e+18, engine.convertAsDouble(AMOUNT, "terrahertz", "degree per hour", PLACES), 0.0);
        assertEquals(6.1776e+16, engine.convertAsDouble(AMOUNT, "terrahertz", "degree per minute", PLACES), 0.0);
        assertEquals(1.0296E15, engine.convertAsDouble(AMOUNT, "terrahertz", "degree per second", PLACES), 0.0);
        assertEquals(2860.0, engine.convertAsDouble(AMOUNT, "terrahertz", "gigahertz", PLACES), 0.0);
        assertEquals(2860000000000.0, engine.convertAsDouble(AMOUNT, "terrahertz", "hertz", PLACES), 0.0);
        assertEquals(2.86E9, engine.convertAsDouble(AMOUNT, "terrahertz", "kilohertz", PLACES), 0.0);
        assertEquals(2860000.0, engine.convertAsDouble(AMOUNT, "terrahertz", "megahertz", PLACES), 0.0);
        assertEquals(2860000000000000.0, engine.convertAsDouble(AMOUNT, "terrahertz", "millihertz", PLACES), 0.0);
        assertEquals(6.469167562E16, engine.convertAsDouble(AMOUNT, "terrahertz", "radian per hour", PLACES), 0.0);
        assertEquals(1078194603200000.1, engine.convertAsDouble(AMOUNT, "terrahertz", "radian per minute", PLACES), 0.0);
        assertEquals(1.7969909958E13, engine.convertAsDouble(AMOUNT, "terrahertz", "radian per second", PLACES), 0.0);
        assertEquals(1.0296e+16, engine.convertAsDouble(AMOUNT, "terrahertz", "revolution per hour", PLACES), 0.0);
        assertEquals(171600000000000.0, engine.convertAsDouble(AMOUNT, "terrahertz", "revolution per minute", PLACES), 0.0);
        assertEquals(2860000000000.0, engine.convertAsDouble(AMOUNT, "terrahertz", "revolution per second", PLACES), 0.0);
        assertEquals(171600000000000.0, engine.convertAsDouble(AMOUNT, "terrahertz", "RPM", PLACES), 0.0);
        assertEquals(2.86, engine.convertAsDouble(AMOUNT, "terrahertz", "terrahertz", PLACES), 0.0);
    }

    @Test
    public void testAliases() {
        assertEquals(2.86E-12, engine.convertAsDouble(AMOUNT, "hz", "thz"), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "deg/hour", "khz", PLACES), 0.0);
        assertEquals(1.716E8, engine.convertAsDouble(AMOUNT, "mhz", "rpm", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "rad/minute", "ghz", PLACES), 0.0);
    }

    @Test
    public void testUnitGroup() {
        Conversion conversion = engine.convert(AMOUNT, "hertz", "rpm");
        assertEquals("frequency", conversion.getUnitGroup().getName());
    }

    @Test(expected = IllegalArgumentException.class)
    public void testInvalidConversion() {
        engine.convertAsDouble(AMOUNT, "hertz", "lux");
    }
}