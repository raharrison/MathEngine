package uk.co.ryanharrison.mathengine.unitconversion;

import org.junit.jupiter.api.Test;
import uk.co.ryanharrison.mathengine.unitconversion.units.Conversion;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertThrows;

public class ConversionEngineLuminanceTest extends ConversionEngineTest {

    @Test
    public void testLuminance() {
        assertEquals(2.86, engine.convertAsDouble(AMOUNT, "apostilb", "apostilb", PLACES), 0.0);
        assertEquals(2.86, engine.convertAsDouble(AMOUNT, "apostilb", "blondel", PLACES), 0.0);
        assertEquals(9.1e-05, engine.convertAsDouble(AMOUNT, "apostilb", "candela per square centimeter", PLACES), 0.0);
        assertEquals(0.0845758, engine.convertAsDouble(AMOUNT, "apostilb", "candela per square foot", PLACES), 0.0);
        assertEquals(0.0005873, engine.convertAsDouble(AMOUNT, "apostilb", "candela per square inch", PLACES), 0.0);
        assertEquals(0.9103663, engine.convertAsDouble(AMOUNT, "apostilb", "candela per square meter", PLACES), 0.0);
        assertEquals(0.2657027, engine.convertAsDouble(AMOUNT, "apostilb", "Footlambert", PLACES), 0.0);
        assertEquals(1.0E-7, engine.convertAsDouble(AMOUNT, "apostilb", "kilocandela per square centimeter", PLACES), 0.0);
        assertEquals(8.46e-05, engine.convertAsDouble(AMOUNT, "apostilb", "kilocandela per square foot", PLACES), 0.0);
        assertEquals(6e-07, engine.convertAsDouble(AMOUNT, "apostilb", "kilocandela per square inch", PLACES), 0.0);
        assertEquals(0.0009104, engine.convertAsDouble(AMOUNT, "apostilb", "kilocandela per square meter", PLACES), 0.0);
        assertEquals(0.000286, engine.convertAsDouble(AMOUNT, "apostilb", "lambert", PLACES), 0.0);
        assertEquals(0.286, engine.convertAsDouble(AMOUNT, "apostilb", "millilambert", PLACES), 0.0);
        assertEquals(0.9103663, engine.convertAsDouble(AMOUNT, "apostilb", "nit", PLACES), 0.0);
        assertEquals(9.1e-05, engine.convertAsDouble(AMOUNT, "apostilb", "stilb", PLACES), 0.0);
        assertEquals(2.86, engine.convertAsDouble(AMOUNT, "blondel", "apostilb", PLACES), 0.0);
        assertEquals(2.86, engine.convertAsDouble(AMOUNT, "blondel", "blondel", PLACES), 0.0);
        assertEquals(9.1e-05, engine.convertAsDouble(AMOUNT, "blondel", "candela per square centimeter", PLACES), 0.0);
        assertEquals(0.0845758, engine.convertAsDouble(AMOUNT, "blondel", "candela per square foot", PLACES), 0.0);
        assertEquals(0.0005873, engine.convertAsDouble(AMOUNT, "blondel", "candela per square inch", PLACES), 0.0);
        assertEquals(0.9103663, engine.convertAsDouble(AMOUNT, "blondel", "candela per square meter", PLACES), 0.0);
        assertEquals(0.2657027, engine.convertAsDouble(AMOUNT, "blondel", "Footlambert", PLACES), 0.0);
        assertEquals(1.0E-7, engine.convertAsDouble(AMOUNT, "blondel", "kilocandela per square centimeter", PLACES), 0.0);
        assertEquals(8.46e-05, engine.convertAsDouble(AMOUNT, "blondel", "kilocandela per square foot", PLACES), 0.0);
        assertEquals(6e-07, engine.convertAsDouble(AMOUNT, "blondel", "kilocandela per square inch", PLACES), 0.0);
        assertEquals(0.0009104, engine.convertAsDouble(AMOUNT, "blondel", "kilocandela per square meter", PLACES), 0.0);
        assertEquals(0.000286, engine.convertAsDouble(AMOUNT, "blondel", "lambert", PLACES), 0.0);
        assertEquals(0.286, engine.convertAsDouble(AMOUNT, "blondel", "millilambert", PLACES), 0.0);
        assertEquals(0.9103663, engine.convertAsDouble(AMOUNT, "blondel", "nit", PLACES), 0.0);
        assertEquals(9.1e-05, engine.convertAsDouble(AMOUNT, "blondel", "stilb", PLACES), 0.0);
        assertEquals(89849.5488155, engine.convertAsDouble(AMOUNT, "candela per square centimeter", "apostilb", PLACES), 0.0);
        assertEquals(89849.5488155, engine.convertAsDouble(AMOUNT, "candela per square centimeter", "blondel", PLACES), 0.0);
        assertEquals(2.86, engine.convertAsDouble(AMOUNT, "candela per square centimeter", "candela per square centimeter", PLACES), 0.0);
        assertEquals(2657.0269439, engine.convertAsDouble(AMOUNT, "candela per square centimeter", "candela per square foot", PLACES), 0.0);
        assertEquals(18.451576, engine.convertAsDouble(AMOUNT, "candela per square centimeter", "candela per square inch", PLACES), 0.0);
        assertEquals(28600.0, engine.convertAsDouble(AMOUNT, "candela per square centimeter", "candela per square meter", PLACES), 0.0);
        assertEquals(8347.2963277, engine.convertAsDouble(AMOUNT, "candela per square centimeter", "Footlambert", PLACES), 0.0);
        assertEquals(0.00286, engine.convertAsDouble(AMOUNT, "candela per square centimeter", "kilocandela per square centimeter", PLACES), 0.0);
        assertEquals(2.6570269, engine.convertAsDouble(AMOUNT, "candela per square centimeter", "kilocandela per square foot", PLACES), 0.0);
        assertEquals(0.0184516, engine.convertAsDouble(AMOUNT, "candela per square centimeter", "kilocandela per square inch", PLACES), 0.0);
        assertEquals(28.6, engine.convertAsDouble(AMOUNT, "candela per square centimeter", "kilocandela per square meter", PLACES), 0.0);
        assertEquals(8.984955, engine.convertAsDouble(AMOUNT, "candela per square centimeter", "lambert", PLACES), 0.0);
        assertEquals(8984.9549894, engine.convertAsDouble(AMOUNT, "candela per square centimeter", "millilambert", PLACES), 0.0);
        assertEquals(28600.0, engine.convertAsDouble(AMOUNT, "candela per square centimeter", "nit", PLACES), 0.0);
        assertEquals(2.86, engine.convertAsDouble(AMOUNT, "candela per square centimeter", "stilb", PLACES), 0.0);
        assertEquals(96.7132494, engine.convertAsDouble(AMOUNT, "candela per square foot", "apostilb", PLACES), 0.0);
        assertEquals(96.7132494, engine.convertAsDouble(AMOUNT, "candela per square foot", "blondel", PLACES), 0.0);
        assertEquals(0.0030785, engine.convertAsDouble(AMOUNT, "candela per square foot", "candela per square centimeter", PLACES), 0.0);
        assertEquals(2.86, engine.convertAsDouble(AMOUNT, "candela per square foot", "candela per square foot", PLACES), 0.0);
        assertEquals(0.0198611, engine.convertAsDouble(AMOUNT, "candela per square foot", "candela per square inch", PLACES), 0.0);
        assertEquals(30.7847838, engine.convertAsDouble(AMOUNT, "candela per square foot", "candela per square meter", PLACES), 0.0);
        assertEquals(8.984955, engine.convertAsDouble(AMOUNT, "candela per square foot", "Footlambert", PLACES), 0.0);
        assertEquals(3.1e-06, engine.convertAsDouble(AMOUNT, "candela per square foot", "kilocandela per square centimeter", PLACES), 0.0);
        assertEquals(0.00286, engine.convertAsDouble(AMOUNT, "candela per square foot", "kilocandela per square foot", PLACES), 0.0);
        assertEquals(1.99e-05, engine.convertAsDouble(AMOUNT, "candela per square foot", "kilocandela per square inch", PLACES), 0.0);
        assertEquals(0.0307848, engine.convertAsDouble(AMOUNT, "candela per square foot", "kilocandela per square meter", PLACES), 0.0);
        assertEquals(0.0096713, engine.convertAsDouble(AMOUNT, "candela per square foot", "lambert", PLACES), 0.0);
        assertEquals(9.6713251, engine.convertAsDouble(AMOUNT, "candela per square foot", "millilambert", PLACES), 0.0);
        assertEquals(30.7847838, engine.convertAsDouble(AMOUNT, "candela per square foot", "nit", PLACES), 0.0);
        assertEquals(0.0030785, engine.convertAsDouble(AMOUNT, "candela per square foot", "stilb", PLACES), 0.0);
        assertEquals(13926.7079198, engine.convertAsDouble(AMOUNT, "candela per square inch", "apostilb", PLACES), 0.0);
        assertEquals(13926.7079198, engine.convertAsDouble(AMOUNT, "candela per square inch", "blondel", PLACES), 0.0);
        assertEquals(0.4433009, engine.convertAsDouble(AMOUNT, "candela per square inch", "candela per square centimeter", PLACES), 0.0);
        assertEquals(411.84, engine.convertAsDouble(AMOUNT, "candela per square inch", "candela per square foot", PLACES), 0.0);
        assertEquals(2.86, engine.convertAsDouble(AMOUNT, "candela per square inch", "candela per square inch", PLACES), 0.0);
        assertEquals(4433.008866, engine.convertAsDouble(AMOUNT, "candela per square inch", "candela per square meter", PLACES), 0.0);
        assertEquals(1293.8335185, engine.convertAsDouble(AMOUNT, "candela per square inch", "Footlambert", PLACES), 0.0);
        assertEquals(0.0004433, engine.convertAsDouble(AMOUNT, "candela per square inch", "kilocandela per square centimeter", PLACES), 0.0);
        assertEquals(0.41184, engine.convertAsDouble(AMOUNT, "candela per square inch", "kilocandela per square foot", PLACES), 0.0);
        assertEquals(0.00286, engine.convertAsDouble(AMOUNT, "candela per square inch", "kilocandela per square inch", PLACES), 0.0);
        assertEquals(4.4330089, engine.convertAsDouble(AMOUNT, "candela per square inch", "kilocandela per square meter", PLACES), 0.0);
        assertEquals(1.3926708, engine.convertAsDouble(AMOUNT, "candela per square inch", "lambert", PLACES), 0.0);
        assertEquals(1392.6708087, engine.convertAsDouble(AMOUNT, "candela per square inch", "millilambert", PLACES), 0.0);
        assertEquals(4433.008866, engine.convertAsDouble(AMOUNT, "candela per square inch", "nit", PLACES), 0.0);
        assertEquals(0.4433009, engine.convertAsDouble(AMOUNT, "candela per square inch", "stilb", PLACES), 0.0);
        assertEquals(8.9849549, engine.convertAsDouble(AMOUNT, "candela per square meter", "apostilb", PLACES), 0.0);
        assertEquals(8.9849549, engine.convertAsDouble(AMOUNT, "candela per square meter", "blondel", PLACES), 0.0);
        assertEquals(0.000286, engine.convertAsDouble(AMOUNT, "candela per square meter", "candela per square centimeter", PLACES), 0.0);
        assertEquals(0.2657027, engine.convertAsDouble(AMOUNT, "candela per square meter", "candela per square foot", PLACES), 0.0);
        assertEquals(0.0018452, engine.convertAsDouble(AMOUNT, "candela per square meter", "candela per square inch", PLACES), 0.0);
        assertEquals(2.86, engine.convertAsDouble(AMOUNT, "candela per square meter", "candela per square meter", PLACES), 0.0);
        assertEquals(0.8347296, engine.convertAsDouble(AMOUNT, "candela per square meter", "Footlambert", PLACES), 0.0);
        assertEquals(3.0E-7, engine.convertAsDouble(AMOUNT, "candela per square meter", "kilocandela per square centimeter", PLACES), 0.0);
        assertEquals(0.0002657, engine.convertAsDouble(AMOUNT, "candela per square meter", "kilocandela per square foot", PLACES), 0.0);
        assertEquals(1.8e-06, engine.convertAsDouble(AMOUNT, "candela per square meter", "kilocandela per square inch", PLACES), 0.0);
        assertEquals(0.00286, engine.convertAsDouble(AMOUNT, "candela per square meter", "kilocandela per square meter", PLACES), 0.0);
        assertEquals(0.0008985, engine.convertAsDouble(AMOUNT, "candela per square meter", "lambert", PLACES), 0.0);
        assertEquals(0.8984955, engine.convertAsDouble(AMOUNT, "candela per square meter", "millilambert", PLACES), 0.0);
        assertEquals(2.86, engine.convertAsDouble(AMOUNT, "candela per square meter", "nit", PLACES), 0.0);
        assertEquals(0.000286, engine.convertAsDouble(AMOUNT, "candela per square meter", "stilb", PLACES), 0.0);
        assertEquals(30.7847834, engine.convertAsDouble(AMOUNT, "Footlambert", "apostilb", PLACES), 0.0);
        assertEquals(30.7847834, engine.convertAsDouble(AMOUNT, "Footlambert", "blondel", PLACES), 0.0);
        assertEquals(0.0009799, engine.convertAsDouble(AMOUNT, "Footlambert", "candela per square centimeter", PLACES), 0.0);
        assertEquals(0.9103663, engine.convertAsDouble(AMOUNT, "Footlambert", "candela per square foot", PLACES), 0.0);
        assertEquals(0.006322, engine.convertAsDouble(AMOUNT, "Footlambert", "candela per square inch", PLACES), 0.0);
        assertEquals(9.799101, engine.convertAsDouble(AMOUNT, "Footlambert", "candela per square meter", PLACES), 0.0);
        assertEquals(2.86, engine.convertAsDouble(AMOUNT, "Footlambert", "Footlambert", PLACES), 0.0);
        assertEquals(1.0E-6, engine.convertAsDouble(AMOUNT, "Footlambert", "kilocandela per square centimeter", PLACES), 0.0);
        assertEquals(0.0009104, engine.convertAsDouble(AMOUNT, "Footlambert", "kilocandela per square foot", PLACES), 0.0);
        assertEquals(6.3e-06, engine.convertAsDouble(AMOUNT, "Footlambert", "kilocandela per square inch", PLACES), 0.0);
        assertEquals(0.0097991, engine.convertAsDouble(AMOUNT, "Footlambert", "kilocandela per square meter", PLACES), 0.0);
        assertEquals(0.0030785, engine.convertAsDouble(AMOUNT, "Footlambert", "lambert", PLACES), 0.0);
        assertEquals(3.0784784, engine.convertAsDouble(AMOUNT, "Footlambert", "millilambert", PLACES), 0.0);
        assertEquals(9.799101, engine.convertAsDouble(AMOUNT, "Footlambert", "nit", PLACES), 0.0);
        assertEquals(0.0009799, engine.convertAsDouble(AMOUNT, "Footlambert", "stilb", PLACES), 0.0);
        assertEquals(89849548.8154641, engine.convertAsDouble(AMOUNT, "kilocandela per square centimeter", "apostilb", PLACES), 0.0);
        assertEquals(89849548.8154641, engine.convertAsDouble(AMOUNT, "kilocandela per square centimeter", "blondel", PLACES), 0.0);
        assertEquals(2860.0, engine.convertAsDouble(AMOUNT, "kilocandela per square centimeter", "candela per square centimeter", PLACES), 0.0);
        assertEquals(2657026.9439283, engine.convertAsDouble(AMOUNT, "kilocandela per square centimeter", "candela per square foot", PLACES), 0.0);
        assertEquals(18451.5760001, engine.convertAsDouble(AMOUNT, "kilocandela per square centimeter", "candela per square inch", PLACES), 0.0);
        assertEquals(28600000.0, engine.convertAsDouble(AMOUNT, "kilocandela per square centimeter", "candela per square meter", PLACES), 0.0);
        assertEquals(8347296.3277468, engine.convertAsDouble(AMOUNT, "kilocandela per square centimeter", "Footlambert", PLACES), 0.0);
        assertEquals(2.86, engine.convertAsDouble(AMOUNT, "kilocandela per square centimeter", "kilocandela per square centimeter", PLACES), 0.0);
        assertEquals(2657.0269439, engine.convertAsDouble(AMOUNT, "kilocandela per square centimeter", "kilocandela per square foot", PLACES), 0.0);
        assertEquals(18.451576, engine.convertAsDouble(AMOUNT, "kilocandela per square centimeter", "kilocandela per square inch", PLACES), 0.0);
        assertEquals(28600.0, engine.convertAsDouble(AMOUNT, "kilocandela per square centimeter", "kilocandela per square meter", PLACES), 0.0);
        assertEquals(8984.9549894, engine.convertAsDouble(AMOUNT, "kilocandela per square centimeter", "lambert", PLACES), 0.0);
        assertEquals(8984954.9893738, engine.convertAsDouble(AMOUNT, "kilocandela per square centimeter", "millilambert", PLACES), 0.0);
        assertEquals(28600000.0, engine.convertAsDouble(AMOUNT, "kilocandela per square centimeter", "nit", PLACES), 0.0);
        assertEquals(2860.0, engine.convertAsDouble(AMOUNT, "kilocandela per square centimeter", "stilb", PLACES), 0.0);
        assertEquals(96713.2494458, engine.convertAsDouble(AMOUNT, "kilocandela per square foot", "apostilb", PLACES), 0.0);
        assertEquals(96713.2494458, engine.convertAsDouble(AMOUNT, "kilocandela per square foot", "blondel", PLACES), 0.0);
        assertEquals(3.0784784, engine.convertAsDouble(AMOUNT, "kilocandela per square foot", "candela per square centimeter", PLACES), 0.0);
        assertEquals(2860.0, engine.convertAsDouble(AMOUNT, "kilocandela per square foot", "candela per square foot", PLACES), 0.0);
        assertEquals(19.8611111, engine.convertAsDouble(AMOUNT, "kilocandela per square foot", "candela per square inch", PLACES), 0.0);
        assertEquals(30784.7837926, engine.convertAsDouble(AMOUNT, "kilocandela per square foot", "candela per square meter", PLACES), 0.0);
        assertEquals(8984.9549896, engine.convertAsDouble(AMOUNT, "kilocandela per square foot", "Footlambert", PLACES), 0.0);
        assertEquals(0.0030785, engine.convertAsDouble(AMOUNT, "kilocandela per square foot", "kilocandela per square centimeter", PLACES), 0.0);
        assertEquals(2.86, engine.convertAsDouble(AMOUNT, "kilocandela per square foot", "kilocandela per square foot", PLACES), 0.0);
        assertEquals(0.0198611, engine.convertAsDouble(AMOUNT, "kilocandela per square foot", "kilocandela per square inch", PLACES), 0.0);
        assertEquals(30.7847838, engine.convertAsDouble(AMOUNT, "kilocandela per square foot", "kilocandela per square meter", PLACES), 0.0);
        assertEquals(9.6713251, engine.convertAsDouble(AMOUNT, "kilocandela per square foot", "lambert", PLACES), 0.0);
        assertEquals(9671.3250606, engine.convertAsDouble(AMOUNT, "kilocandela per square foot", "millilambert", PLACES), 0.0);
        assertEquals(30784.7837926, engine.convertAsDouble(AMOUNT, "kilocandela per square foot", "nit", PLACES), 0.0);
        assertEquals(3.0784784, engine.convertAsDouble(AMOUNT, "kilocandela per square foot", "stilb", PLACES), 0.0);
        assertEquals(1.39267079197571E7, engine.convertAsDouble(AMOUNT, "kilocandela per square inch", "apostilb", PLACES), 0.0);
        assertEquals(1.39267079197571E7, engine.convertAsDouble(AMOUNT, "kilocandela per square inch", "blondel", PLACES), 0.0);
        assertEquals(443.3008866, engine.convertAsDouble(AMOUNT, "kilocandela per square inch", "candela per square centimeter", PLACES), 0.0);
        assertEquals(411839.9999872, engine.convertAsDouble(AMOUNT, "kilocandela per square inch", "candela per square foot", PLACES), 0.0);
        assertEquals(2860.0, engine.convertAsDouble(AMOUNT, "kilocandela per square inch", "candela per square inch", PLACES), 0.0);
        assertEquals(4433008.866, engine.convertAsDouble(AMOUNT, "kilocandela per square inch", "candela per square meter", PLACES), 0.0);
        assertEquals(1293833.5184626, engine.convertAsDouble(AMOUNT, "kilocandela per square inch", "Footlambert", PLACES), 0.0);
        assertEquals(0.4433009, engine.convertAsDouble(AMOUNT, "kilocandela per square inch", "kilocandela per square centimeter", PLACES), 0.0);
        assertEquals(411.84, engine.convertAsDouble(AMOUNT, "kilocandela per square inch", "kilocandela per square foot", PLACES), 0.0);
        assertEquals(2.86, engine.convertAsDouble(AMOUNT, "kilocandela per square inch", "kilocandela per square inch", PLACES), 0.0);
        assertEquals(4433.008866, engine.convertAsDouble(AMOUNT, "kilocandela per square inch", "kilocandela per square meter", PLACES), 0.0);
        assertEquals(1392.6708087, engine.convertAsDouble(AMOUNT, "kilocandela per square inch", "lambert", PLACES), 0.0);
        assertEquals(1392670.808689, engine.convertAsDouble(AMOUNT, "kilocandela per square inch", "millilambert", PLACES), 0.0);
        assertEquals(4433008.866, engine.convertAsDouble(AMOUNT, "kilocandela per square inch", "nit", PLACES), 0.0);
        assertEquals(443.3008866, engine.convertAsDouble(AMOUNT, "kilocandela per square inch", "stilb", PLACES), 0.0);
        assertEquals(8984.9548815, engine.convertAsDouble(AMOUNT, "kilocandela per square meter", "apostilb", PLACES), 0.0);
        assertEquals(8984.9548815, engine.convertAsDouble(AMOUNT, "kilocandela per square meter", "blondel", PLACES), 0.0);
        assertEquals(0.286, engine.convertAsDouble(AMOUNT, "kilocandela per square meter", "candela per square centimeter", PLACES), 0.0);
        assertEquals(265.7026944, engine.convertAsDouble(AMOUNT, "kilocandela per square meter", "candela per square foot", PLACES), 0.0);
        assertEquals(1.8451576, engine.convertAsDouble(AMOUNT, "kilocandela per square meter", "candela per square inch", PLACES), 0.0);
        assertEquals(2860.0, engine.convertAsDouble(AMOUNT, "kilocandela per square meter", "candela per square meter", PLACES), 0.0);
        assertEquals(834.7296328, engine.convertAsDouble(AMOUNT, "kilocandela per square meter", "Footlambert", PLACES), 0.0);
        assertEquals(0.000286, engine.convertAsDouble(AMOUNT, "kilocandela per square meter", "kilocandela per square centimeter", PLACES), 0.0);
        assertEquals(0.2657027, engine.convertAsDouble(AMOUNT, "kilocandela per square meter", "kilocandela per square foot", PLACES), 0.0);
        assertEquals(0.0018452, engine.convertAsDouble(AMOUNT, "kilocandela per square meter", "kilocandela per square inch", PLACES), 0.0);
        assertEquals(2.86, engine.convertAsDouble(AMOUNT, "kilocandela per square meter", "kilocandela per square meter", PLACES), 0.0);
        assertEquals(0.8984955, engine.convertAsDouble(AMOUNT, "kilocandela per square meter", "lambert", PLACES), 0.0);
        assertEquals(898.4954989, engine.convertAsDouble(AMOUNT, "kilocandela per square meter", "millilambert", PLACES), 0.0);
        assertEquals(2860.0, engine.convertAsDouble(AMOUNT, "kilocandela per square meter", "nit", PLACES), 0.0);
        assertEquals(0.286, engine.convertAsDouble(AMOUNT, "kilocandela per square meter", "stilb", PLACES), 0.0);
        assertEquals(28599.9996568, engine.convertAsDouble(AMOUNT, "lambert", "apostilb", PLACES), 0.0);
        assertEquals(28599.9996568, engine.convertAsDouble(AMOUNT, "lambert", "blondel", PLACES), 0.0);
        assertEquals(0.9103663, engine.convertAsDouble(AMOUNT, "lambert", "candela per square centimeter", PLACES), 0.0);
        assertEquals(845.7579441, engine.convertAsDouble(AMOUNT, "lambert", "candela per square foot", PLACES), 0.0);
        assertEquals(5.8733191, engine.convertAsDouble(AMOUNT, "lambert", "candela per square inch", PLACES), 0.0);
        assertEquals(9103.6627447, engine.convertAsDouble(AMOUNT, "lambert", "candela per square meter", PLACES), 0.0);
        assertEquals(2657.026944, engine.convertAsDouble(AMOUNT, "lambert", "Footlambert", PLACES), 0.0);
        assertEquals(0.0009104, engine.convertAsDouble(AMOUNT, "lambert", "kilocandela per square centimeter", PLACES), 0.0);
        assertEquals(0.8457579, engine.convertAsDouble(AMOUNT, "lambert", "kilocandela per square foot", PLACES), 0.0);
        assertEquals(0.0058733, engine.convertAsDouble(AMOUNT, "lambert", "kilocandela per square inch", PLACES), 0.0);
        assertEquals(9.1036627, engine.convertAsDouble(AMOUNT, "lambert", "kilocandela per square meter", PLACES), 0.0);
        assertEquals(2.86, engine.convertAsDouble(AMOUNT, "lambert", "lambert", PLACES), 0.0);
        assertEquals(2860.0, engine.convertAsDouble(AMOUNT, "lambert", "millilambert", PLACES), 0.0);
        assertEquals(9103.6627447, engine.convertAsDouble(AMOUNT, "lambert", "nit", PLACES), 0.0);
        assertEquals(0.9103663, engine.convertAsDouble(AMOUNT, "lambert", "stilb", PLACES), 0.0);
        assertEquals(28.5999997, engine.convertAsDouble(AMOUNT, "millilambert", "apostilb", PLACES), 0.0);
        assertEquals(28.5999997, engine.convertAsDouble(AMOUNT, "millilambert", "blondel", PLACES), 0.0);
        assertEquals(0.0009104, engine.convertAsDouble(AMOUNT, "millilambert", "candela per square centimeter", PLACES), 0.0);
        assertEquals(0.8457579, engine.convertAsDouble(AMOUNT, "millilambert", "candela per square foot", PLACES), 0.0);
        assertEquals(0.0058733, engine.convertAsDouble(AMOUNT, "millilambert", "candela per square inch", PLACES), 0.0);
        assertEquals(9.1036627, engine.convertAsDouble(AMOUNT, "millilambert", "candela per square meter", PLACES), 0.0);
        assertEquals(2.6570269, engine.convertAsDouble(AMOUNT, "millilambert", "Footlambert", PLACES), 0.0);
        assertEquals(9e-07, engine.convertAsDouble(AMOUNT, "millilambert", "kilocandela per square centimeter", PLACES), 0.0);
        assertEquals(0.0008458, engine.convertAsDouble(AMOUNT, "millilambert", "kilocandela per square foot", PLACES), 0.0);
        assertEquals(5.9e-06, engine.convertAsDouble(AMOUNT, "millilambert", "kilocandela per square inch", PLACES), 0.0);
        assertEquals(0.0091037, engine.convertAsDouble(AMOUNT, "millilambert", "kilocandela per square meter", PLACES), 0.0);
        assertEquals(0.00286, engine.convertAsDouble(AMOUNT, "millilambert", "lambert", PLACES), 0.0);
        assertEquals(2.86, engine.convertAsDouble(AMOUNT, "millilambert", "millilambert", PLACES), 0.0);
        assertEquals(9.1036627, engine.convertAsDouble(AMOUNT, "millilambert", "nit", PLACES), 0.0);
        assertEquals(0.0009104, engine.convertAsDouble(AMOUNT, "millilambert", "stilb", PLACES), 0.0);
        assertEquals(8.9849549, engine.convertAsDouble(AMOUNT, "nit", "apostilb", PLACES), 0.0);
        assertEquals(8.9849549, engine.convertAsDouble(AMOUNT, "nit", "blondel", PLACES), 0.0);
        assertEquals(0.000286, engine.convertAsDouble(AMOUNT, "nit", "candela per square centimeter", PLACES), 0.0);
        assertEquals(0.2657027, engine.convertAsDouble(AMOUNT, "nit", "candela per square foot", PLACES), 0.0);
        assertEquals(0.0018452, engine.convertAsDouble(AMOUNT, "nit", "candela per square inch", PLACES), 0.0);
        assertEquals(2.86, engine.convertAsDouble(AMOUNT, "nit", "candela per square meter", PLACES), 0.0);
        assertEquals(0.8347296, engine.convertAsDouble(AMOUNT, "nit", "Footlambert", PLACES), 0.0);
        assertEquals(3e-07, engine.convertAsDouble(AMOUNT, "nit", "kilocandela per square centimeter", PLACES), 0.0);
        assertEquals(0.0002657, engine.convertAsDouble(AMOUNT, "nit", "kilocandela per square foot", PLACES), 0.0);
        assertEquals(1.8e-06, engine.convertAsDouble(AMOUNT, "nit", "kilocandela per square inch", PLACES), 0.0);
        assertEquals(0.00286, engine.convertAsDouble(AMOUNT, "nit", "kilocandela per square meter", PLACES), 0.0);
        assertEquals(0.0008985, engine.convertAsDouble(AMOUNT, "nit", "lambert", PLACES), 0.0);
        assertEquals(0.8984955, engine.convertAsDouble(AMOUNT, "nit", "millilambert", PLACES), 0.0);
        assertEquals(2.86, engine.convertAsDouble(AMOUNT, "nit", "nit", PLACES), 0.0);
        assertEquals(0.000286, engine.convertAsDouble(AMOUNT, "nit", "stilb", PLACES), 0.0);
        assertEquals(89849.5488155, engine.convertAsDouble(AMOUNT, "stilb", "apostilb", PLACES), 0.0);
        assertEquals(89849.5488155, engine.convertAsDouble(AMOUNT, "stilb", "blondel", PLACES), 0.0);
        assertEquals(2.86, engine.convertAsDouble(AMOUNT, "stilb", "candela per square centimeter", PLACES), 0.0);
        assertEquals(2657.0269439, engine.convertAsDouble(AMOUNT, "stilb", "candela per square foot", PLACES), 0.0);
        assertEquals(18.451576, engine.convertAsDouble(AMOUNT, "stilb", "candela per square inch", PLACES), 0.0);
        assertEquals(28600.0, engine.convertAsDouble(AMOUNT, "stilb", "candela per square meter", PLACES), 0.0);
        assertEquals(8347.2963277, engine.convertAsDouble(AMOUNT, "stilb", "Footlambert", PLACES), 0.0);
        assertEquals(0.00286, engine.convertAsDouble(AMOUNT, "stilb", "kilocandela per square centimeter", PLACES), 0.0);
        assertEquals(2.6570269, engine.convertAsDouble(AMOUNT, "stilb", "kilocandela per square foot", PLACES), 0.0);
        assertEquals(0.0184516, engine.convertAsDouble(AMOUNT, "stilb", "kilocandela per square inch", PLACES), 0.0);
        assertEquals(28.6, engine.convertAsDouble(AMOUNT, "stilb", "kilocandela per square meter", PLACES), 0.0);
        assertEquals(8.984955, engine.convertAsDouble(AMOUNT, "stilb", "lambert", PLACES), 0.0);
        assertEquals(8984.9549894, engine.convertAsDouble(AMOUNT, "stilb", "millilambert", PLACES), 0.0);
        assertEquals(28600.0, engine.convertAsDouble(AMOUNT, "stilb", "nit", PLACES), 0.0);
        assertEquals(2.86, engine.convertAsDouble(AMOUNT, "stilb", "stilb", PLACES), 0.0);
    }

    @Test
    public void testAliases() {
        assertEquals(28600.0, engine.convertAsDouble(AMOUNT, "cd/cm2", "cd/m2", PLACES), 0.0);
    }

    @Test
    public void testUnitGroup() {
        Conversion conversion = engine.convert(AMOUNT, "nit", "stilb");
        assertEquals("luminance", conversion.getUnitGroup().getName());
    }

    @Test
    public void testInvalidConversion() {
        assertThrows(IllegalArgumentException.class, () -> {
            engine.convertAsDouble(AMOUNT, "lambert", "lux");
        });
    }
}