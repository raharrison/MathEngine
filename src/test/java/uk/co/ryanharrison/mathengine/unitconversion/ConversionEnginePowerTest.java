package uk.co.ryanharrison.mathengine.unitconversion;

import org.junit.jupiter.api.Test;
import uk.co.ryanharrison.mathengine.unitconversion.units.Conversion;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertThrows;

public class ConversionEnginePowerTest extends ConversionEngineTest {

    @Test
    public void testPower() {
        assertEquals(2.86, engine.convertAsDouble(AMOUNT, "attowatt", "attowatt", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "attowatt", "Btu/hour", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "attowatt", "Btu/minute", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "attowatt", "Btu/second", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "attowatt", "calorie/hour", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "attowatt", "calorie/minute", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "attowatt", "calorie/second", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "attowatt", "centiwatt", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "attowatt", "cheval vapeur", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "attowatt", "clusec", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "attowatt", "deciwatt", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "attowatt", "dekawatt", PLACES), 0.0);
        assertEquals(1e-07, engine.convertAsDouble(AMOUNT, "attowatt", "dyne centimeter/hour", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "attowatt", "dyne centimeter/minute", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "attowatt", "dyne centimeter/second", PLACES), 0.0);
        assertEquals(1e-07, engine.convertAsDouble(AMOUNT, "attowatt", "erg/hour", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "attowatt", "erg/minute", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "attowatt", "erg/second", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "attowatt", "exawatt", PLACES), 0.0);
        assertEquals(0.00286, engine.convertAsDouble(AMOUNT, "attowatt", "femtowatt", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "attowatt", "foot pound force/hour", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "attowatt", "foot pound force/minute", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "attowatt", "foot pound force/second", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "attowatt", "foot poundal/hour", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "attowatt", "foot poundal/minute", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "attowatt", "foot poundal/second", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "attowatt", "gigawatt", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "attowatt", "gram force centimeter/hour", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "attowatt", "gram force centimeter/minute", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "attowatt", "gram force centimeter/second", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "attowatt", "hectowatt", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "attowatt", "horsepower", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "attowatt", "inch ounce force revolution/minute", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "attowatt", "joule/hour", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "attowatt", "joule/minute", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "attowatt", "joule/second", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "attowatt", "kilocalorie/hour", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "attowatt", "kilocalorie/minute", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "attowatt", "kilocalorie/second", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "attowatt", "kilogram force meter/hour", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "attowatt", "kilogram force meter/minute", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "attowatt", "kilogram force meter/second", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "attowatt", "kilopond meter/hour", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "attowatt", "kilopond meter/minute", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "attowatt", "kilopond meter/second", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "attowatt", "kilowatt", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "attowatt", "megawatt", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "attowatt", "microwatt", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "attowatt", "million Btu/hour", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "attowatt", "milliwatt", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "attowatt", "nanowatt", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "attowatt", "newton meter/hour", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "attowatt", "newton meter/minute", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "attowatt", "newton meter/second", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "attowatt", "petawatt", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "attowatt", "pferdestarke", PLACES), 0.0);
        assertEquals(2.9e-06, engine.convertAsDouble(AMOUNT, "attowatt", "picowatt", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "attowatt", "poncelet", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "attowatt", "pound square foot/cubic second", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "attowatt", "terawatt", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "attowatt", "ton of refrigeration", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "attowatt", "watt", PLACES), 0.0);
        assertEquals(2860000.0, engine.convertAsDouble(AMOUNT, "attowatt", "yoctowatt", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "attowatt", "yottawatt", PLACES), 0.0);
        assertEquals(2860.0, engine.convertAsDouble(AMOUNT, "attowatt", "zeptowatt", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "attowatt", "zettawatt", PLACES), 0.0);
        assertEquals(8.381832601999999e+17, engine.convertAsDouble(AMOUNT, "Btu/hour", "attowatt", PLACES), 0.0);
        assertEquals(2.86, engine.convertAsDouble(AMOUNT, "Btu/hour", "Btu/hour", PLACES), 0.0);
        assertEquals(0.0476667, engine.convertAsDouble(AMOUNT, "Btu/hour", "Btu/minute", PLACES), 0.0);
        assertEquals(0.0007944, engine.convertAsDouble(AMOUNT, "Btu/hour", "Btu/second", PLACES), 0.0);
        assertEquals(720.7078764, engine.convertAsDouble(AMOUNT, "Btu/hour", "calorie/hour", PLACES), 0.0);
        assertEquals(12.0117979, engine.convertAsDouble(AMOUNT, "Btu/hour", "calorie/minute", PLACES), 0.0);
        assertEquals(0.2001966, engine.convertAsDouble(AMOUNT, "Btu/hour", "calorie/second", PLACES), 0.0);
        assertEquals(83.818326, engine.convertAsDouble(AMOUNT, "Btu/hour", "centiwatt", PLACES), 0.0);
        assertEquals(0.0011396, engine.convertAsDouble(AMOUNT, "Btu/hour", "cheval vapeur", PLACES), 0.0);
        assertEquals(628689.1391145, engine.convertAsDouble(AMOUNT, "Btu/hour", "clusec", PLACES), 0.0);
        assertEquals(8.3818326, engine.convertAsDouble(AMOUNT, "Btu/hour", "deciwatt", PLACES), 0.0);
        assertEquals(0.0838183, engine.convertAsDouble(AMOUNT, "Btu/hour", "dekawatt", PLACES), 0.0);
        assertEquals(3.01745973672E10, engine.convertAsDouble(AMOUNT, "Btu/hour", "dyne centimeter/hour", PLACES), 0.0);
        assertEquals(502909956.12, engine.convertAsDouble(AMOUNT, "Btu/hour", "dyne centimeter/minute", PLACES), 0.0);
        assertEquals(8381832.602, engine.convertAsDouble(AMOUNT, "Btu/hour", "dyne centimeter/second", PLACES), 0.0);
        assertEquals(3.01745973672E10, engine.convertAsDouble(AMOUNT, "Btu/hour", "erg/hour", PLACES), 0.0);
        assertEquals(502909956.12, engine.convertAsDouble(AMOUNT, "Btu/hour", "erg/minute", PLACES), 0.0);
        assertEquals(8381832.602, engine.convertAsDouble(AMOUNT, "Btu/hour", "erg/second", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "Btu/hour", "exawatt", PLACES), 0.0);
        assertEquals(838183260199999.9, engine.convertAsDouble(AMOUNT, "Btu/hour", "femtowatt", PLACES), 0.0);
        assertEquals(2225.5641681, engine.convertAsDouble(AMOUNT, "Btu/hour", "foot pound force/hour", PLACES), 0.0);
        assertEquals(37.0927361, engine.convertAsDouble(AMOUNT, "Btu/hour", "foot pound force/minute", PLACES), 0.0);
        assertEquals(0.6182123, engine.convertAsDouble(AMOUNT, "Btu/hour", "foot pound force/second", PLACES), 0.0);
        assertEquals(71605.407217, engine.convertAsDouble(AMOUNT, "Btu/hour", "foot poundal/hour", PLACES), 0.0);
        assertEquals(1193.4234536, engine.convertAsDouble(AMOUNT, "Btu/hour", "foot poundal/minute", PLACES), 0.0);
        assertEquals(19.8903909, engine.convertAsDouble(AMOUNT, "Btu/hour", "foot poundal/second", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "Btu/hour", "gigawatt", PLACES), 0.0);
        assertEquals(30769526.1554149, engine.convertAsDouble(AMOUNT, "Btu/hour", "gram force centimeter/hour", PLACES), 0.0);
        assertEquals(512825.4359236, engine.convertAsDouble(AMOUNT, "Btu/hour", "gram force centimeter/minute", PLACES), 0.0);
        assertEquals(8547.0905987, engine.convertAsDouble(AMOUNT, "Btu/hour", "gram force centimeter/second", PLACES), 0.0);
        assertEquals(0.0083818, engine.convertAsDouble(AMOUNT, "Btu/hour", "hectowatt", PLACES), 0.0);
        assertEquals(0.001124, engine.convertAsDouble(AMOUNT, "Btu/hour", "horsepower", PLACES), 0.0);
        assertEquals(1133.4704779, engine.convertAsDouble(AMOUNT, "Btu/hour", "inch ounce force revolution/minute", PLACES), 0.0);
        assertEquals(3017.4597367, engine.convertAsDouble(AMOUNT, "Btu/hour", "joule/hour", PLACES), 0.0);
        assertEquals(50.2909956, engine.convertAsDouble(AMOUNT, "Btu/hour", "joule/minute", PLACES), 0.0);
        assertEquals(0.8381833, engine.convertAsDouble(AMOUNT, "Btu/hour", "joule/second", PLACES), 0.0);
        assertEquals(0.7207079, engine.convertAsDouble(AMOUNT, "Btu/hour", "kilocalorie/hour", PLACES), 0.0);
        assertEquals(0.0120118, engine.convertAsDouble(AMOUNT, "Btu/hour", "kilocalorie/minute", PLACES), 0.0);
        assertEquals(0.0002002, engine.convertAsDouble(AMOUNT, "Btu/hour", "kilocalorie/second", PLACES), 0.0);
        assertEquals(307.6952616, engine.convertAsDouble(AMOUNT, "Btu/hour", "kilogram force meter/hour", PLACES), 0.0);
        assertEquals(5.1282544, engine.convertAsDouble(AMOUNT, "Btu/hour", "kilogram force meter/minute", PLACES), 0.0);
        assertEquals(0.0854709, engine.convertAsDouble(AMOUNT, "Btu/hour", "kilogram force meter/second", PLACES), 0.0);
        assertEquals(307.6952616, engine.convertAsDouble(AMOUNT, "Btu/hour", "kilopond meter/hour", PLACES), 0.0);
        assertEquals(5.1282544, engine.convertAsDouble(AMOUNT, "Btu/hour", "kilopond meter/minute", PLACES), 0.0);
        assertEquals(0.0854709, engine.convertAsDouble(AMOUNT, "Btu/hour", "kilopond meter/second", PLACES), 0.0);
        assertEquals(0.0008382, engine.convertAsDouble(AMOUNT, "Btu/hour", "kilowatt", PLACES), 0.0);
        assertEquals(8e-07, engine.convertAsDouble(AMOUNT, "Btu/hour", "megawatt", PLACES), 0.0);
        assertEquals(838183.2602, engine.convertAsDouble(AMOUNT, "Btu/hour", "microwatt", PLACES), 0.0);
        assertEquals(2.9e-06, engine.convertAsDouble(AMOUNT, "Btu/hour", "million Btu/hour", PLACES), 0.0);
        assertEquals(838.1832602, engine.convertAsDouble(AMOUNT, "Btu/hour", "milliwatt", PLACES), 0.0);
        assertEquals(838183260.1999998, engine.convertAsDouble(AMOUNT, "Btu/hour", "nanowatt", PLACES), 0.0);
        assertEquals(3017.4597367, engine.convertAsDouble(AMOUNT, "Btu/hour", "newton meter/hour", PLACES), 0.0);
        assertEquals(50.2909956, engine.convertAsDouble(AMOUNT, "Btu/hour", "newton meter/minute", PLACES), 0.0);
        assertEquals(0.8381833, engine.convertAsDouble(AMOUNT, "Btu/hour", "newton meter/second", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "Btu/hour", "petawatt", PLACES), 0.0);
        assertEquals(0.0011396, engine.convertAsDouble(AMOUNT, "Btu/hour", "pferdestarke", PLACES), 0.0);
        assertEquals(8.381832601999999E11, engine.convertAsDouble(AMOUNT, "Btu/hour", "picowatt", PLACES), 0.0);
        assertEquals(0.0008547, engine.convertAsDouble(AMOUNT, "Btu/hour", "poncelet", PLACES), 0.0);
        assertEquals(19.8903909, engine.convertAsDouble(AMOUNT, "Btu/hour", "pound square foot/cubic second", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "Btu/hour", "terawatt", PLACES), 0.0);
        assertEquals(0.0002383, engine.convertAsDouble(AMOUNT, "Btu/hour", "ton of refrigeration", PLACES), 0.0);
        assertEquals(0.8381833, engine.convertAsDouble(AMOUNT, "Btu/hour", "watt", PLACES), 0.0);
        assertEquals(8.381832602e+23, engine.convertAsDouble(AMOUNT, "Btu/hour", "yoctowatt", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "Btu/hour", "yottawatt", PLACES), 0.0);
        assertEquals(8.381832602e+20, engine.convertAsDouble(AMOUNT, "Btu/hour", "zeptowatt", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "Btu/hour", "zettawatt", PLACES), 0.0);
        assertEquals(5.029099561199999e+19, engine.convertAsDouble(AMOUNT, "Btu/minute", "attowatt", PLACES), 0.0);
        assertEquals(171.6, engine.convertAsDouble(AMOUNT, "Btu/minute", "Btu/hour", PLACES), 0.0);
        assertEquals(2.86, engine.convertAsDouble(AMOUNT, "Btu/minute", "Btu/minute", PLACES), 0.0);
        assertEquals(0.0476667, engine.convertAsDouble(AMOUNT, "Btu/minute", "Btu/second", PLACES), 0.0);
        assertEquals(43242.4725813, engine.convertAsDouble(AMOUNT, "Btu/minute", "calorie/hour", PLACES), 0.0);
        assertEquals(720.7078764, engine.convertAsDouble(AMOUNT, "Btu/minute", "calorie/minute", PLACES), 0.0);
        assertEquals(12.0117979, engine.convertAsDouble(AMOUNT, "Btu/minute", "calorie/second", PLACES), 0.0);
        assertEquals(5029.0995612, engine.convertAsDouble(AMOUNT, "Btu/minute", "centiwatt", PLACES), 0.0);
        assertEquals(0.0683767, engine.convertAsDouble(AMOUNT, "Btu/minute", "cheval vapeur", PLACES), 0.0);
        assertEquals(37721348.3468678, engine.convertAsDouble(AMOUNT, "Btu/minute", "clusec", PLACES), 0.0);
        assertEquals(502.9099561, engine.convertAsDouble(AMOUNT, "Btu/minute", "deciwatt", PLACES), 0.0);
        assertEquals(5.0290996, engine.convertAsDouble(AMOUNT, "Btu/minute", "dekawatt", PLACES), 0.0);
        assertEquals(1.810475842032E12, engine.convertAsDouble(AMOUNT, "Btu/minute", "dyne centimeter/hour", PLACES), 0.0);
        assertEquals(30174597367.2, engine.convertAsDouble(AMOUNT, "Btu/minute", "dyne centimeter/minute", PLACES), 0.0);
        assertEquals(502909956.12, engine.convertAsDouble(AMOUNT, "Btu/minute", "dyne centimeter/second", PLACES), 0.0);
        assertEquals(1.810475842032E12, engine.convertAsDouble(AMOUNT, "Btu/minute", "erg/hour", PLACES), 0.0);
        assertEquals(30174597367.2, engine.convertAsDouble(AMOUNT, "Btu/minute", "erg/minute", PLACES), 0.0);
        assertEquals(502909956.12, engine.convertAsDouble(AMOUNT, "Btu/minute", "erg/second", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "Btu/minute", "exawatt", PLACES), 0.0);
        assertEquals(5.029099561199999e+16, engine.convertAsDouble(AMOUNT, "Btu/minute", "femtowatt", PLACES), 0.0);
        assertEquals(133533.8500865, engine.convertAsDouble(AMOUNT, "Btu/minute", "foot pound force/hour", PLACES), 0.0);
        assertEquals(2225.5641681, engine.convertAsDouble(AMOUNT, "Btu/minute", "foot pound force/minute", PLACES), 0.0);
        assertEquals(37.0927361, engine.convertAsDouble(AMOUNT, "Btu/minute", "foot pound force/second", PLACES), 0.0);
        assertEquals(4296324.4330212, engine.convertAsDouble(AMOUNT, "Btu/minute", "foot poundal/hour", PLACES), 0.0);
        assertEquals(71605.407217, engine.convertAsDouble(AMOUNT, "Btu/minute", "foot poundal/minute", PLACES), 0.0);
        assertEquals(1193.4234536, engine.convertAsDouble(AMOUNT, "Btu/minute", "foot poundal/second", PLACES), 0.0);
        assertEquals(1e-07, engine.convertAsDouble(AMOUNT, "Btu/minute", "gigawatt", PLACES), 0.0);
        assertEquals(1846171569.3248968, engine.convertAsDouble(AMOUNT, "Btu/minute", "gram force centimeter/hour", PLACES), 0.0);
        assertEquals(30769526.1554149, engine.convertAsDouble(AMOUNT, "Btu/minute", "gram force centimeter/minute", PLACES), 0.0);
        assertEquals(512825.4359236, engine.convertAsDouble(AMOUNT, "Btu/minute", "gram force centimeter/second", PLACES), 0.0);
        assertEquals(0.50291, engine.convertAsDouble(AMOUNT, "Btu/minute", "hectowatt", PLACES), 0.0);
        assertEquals(0.0674413, engine.convertAsDouble(AMOUNT, "Btu/minute", "horsepower", PLACES), 0.0);
        assertEquals(68008.2286732, engine.convertAsDouble(AMOUNT, "Btu/minute", "inch ounce force revolution/minute", PLACES), 0.0);
        assertEquals(181047.5842032, engine.convertAsDouble(AMOUNT, "Btu/minute", "joule/hour", PLACES), 0.0);
        assertEquals(3017.4597367, engine.convertAsDouble(AMOUNT, "Btu/minute", "joule/minute", PLACES), 0.0);
        assertEquals(50.2909956, engine.convertAsDouble(AMOUNT, "Btu/minute", "joule/second", PLACES), 0.0);
        assertEquals(43.2424726, engine.convertAsDouble(AMOUNT, "Btu/minute", "kilocalorie/hour", PLACES), 0.0);
        assertEquals(0.7207079, engine.convertAsDouble(AMOUNT, "Btu/minute", "kilocalorie/minute", PLACES), 0.0);
        assertEquals(0.0120118, engine.convertAsDouble(AMOUNT, "Btu/minute", "kilocalorie/second", PLACES), 0.0);
        assertEquals(18461.7156932, engine.convertAsDouble(AMOUNT, "Btu/minute", "kilogram force meter/hour", PLACES), 0.0);
        assertEquals(307.6952616, engine.convertAsDouble(AMOUNT, "Btu/minute", "kilogram force meter/minute", PLACES), 0.0);
        assertEquals(5.1282544, engine.convertAsDouble(AMOUNT, "Btu/minute", "kilogram force meter/second", PLACES), 0.0);
        assertEquals(18461.7156932, engine.convertAsDouble(AMOUNT, "Btu/minute", "kilopond meter/hour", PLACES), 0.0);
        assertEquals(307.6952616, engine.convertAsDouble(AMOUNT, "Btu/minute", "kilopond meter/minute", PLACES), 0.0);
        assertEquals(5.1282544, engine.convertAsDouble(AMOUNT, "Btu/minute", "kilopond meter/second", PLACES), 0.0);
        assertEquals(0.050291, engine.convertAsDouble(AMOUNT, "Btu/minute", "kilowatt", PLACES), 0.0);
        assertEquals(5.03e-05, engine.convertAsDouble(AMOUNT, "Btu/minute", "megawatt", PLACES), 0.0);
        assertEquals(50290995.612, engine.convertAsDouble(AMOUNT, "Btu/minute", "microwatt", PLACES), 0.0);
        assertEquals(0.0001716, engine.convertAsDouble(AMOUNT, "Btu/minute", "million Btu/hour", PLACES), 0.0);
        assertEquals(50290.995612, engine.convertAsDouble(AMOUNT, "Btu/minute", "milliwatt", PLACES), 0.0);
        assertEquals(50290995611.99999, engine.convertAsDouble(AMOUNT, "Btu/minute", "nanowatt", PLACES), 0.0);
        assertEquals(181047.5842032, engine.convertAsDouble(AMOUNT, "Btu/minute", "newton meter/hour", PLACES), 0.0);
        assertEquals(3017.4597367, engine.convertAsDouble(AMOUNT, "Btu/minute", "newton meter/minute", PLACES), 0.0);
        assertEquals(50.2909956, engine.convertAsDouble(AMOUNT, "Btu/minute", "newton meter/second", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "Btu/minute", "petawatt", PLACES), 0.0);
        assertEquals(0.0683767, engine.convertAsDouble(AMOUNT, "Btu/minute", "pferdestarke", PLACES), 0.0);
        assertEquals(50290995612000.0, engine.convertAsDouble(AMOUNT, "Btu/minute", "picowatt", PLACES), 0.0);
        assertEquals(0.0512825, engine.convertAsDouble(AMOUNT, "Btu/minute", "poncelet", PLACES), 0.0);
        assertEquals(1193.4234536, engine.convertAsDouble(AMOUNT, "Btu/minute", "pound square foot/cubic second", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "Btu/minute", "terawatt", PLACES), 0.0);
        assertEquals(0.0143, engine.convertAsDouble(AMOUNT, "Btu/minute", "ton of refrigeration", PLACES), 0.0);
        assertEquals(50.2909956, engine.convertAsDouble(AMOUNT, "Btu/minute", "watt", PLACES), 0.0);
        assertEquals(5.0290995612E25, engine.convertAsDouble(AMOUNT, "Btu/minute", "yoctowatt", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "Btu/minute", "yottawatt", PLACES), 0.0);
        assertEquals(5.0290995612e+22, engine.convertAsDouble(AMOUNT, "Btu/minute", "zeptowatt", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "Btu/minute", "zettawatt", PLACES), 0.0);
        assertEquals(3.01745973672E21, engine.convertAsDouble(AMOUNT, "Btu/second", "attowatt", PLACES), 0.0);
        assertEquals(10296.0, engine.convertAsDouble(AMOUNT, "Btu/second", "Btu/hour", PLACES), 0.0);
        assertEquals(171.6, engine.convertAsDouble(AMOUNT, "Btu/second", "Btu/minute", PLACES), 0.0);
        assertEquals(2.86, engine.convertAsDouble(AMOUNT, "Btu/second", "Btu/second", PLACES), 0.0);
        assertEquals(2594548.3548753, engine.convertAsDouble(AMOUNT, "Btu/second", "calorie/hour", PLACES), 0.0);
        assertEquals(43242.4725813, engine.convertAsDouble(AMOUNT, "Btu/second", "calorie/minute", PLACES), 0.0);
        assertEquals(720.7078764, engine.convertAsDouble(AMOUNT, "Btu/second", "calorie/second", PLACES), 0.0);
        assertEquals(301745.973672, engine.convertAsDouble(AMOUNT, "Btu/second", "centiwatt", PLACES), 0.0);
        assertEquals(4.1026035, engine.convertAsDouble(AMOUNT, "Btu/second", "cheval vapeur", PLACES), 0.0);
        assertEquals(2.2632809008120694E9, engine.convertAsDouble(AMOUNT, "Btu/second", "clusec", PLACES), 0.0);
        assertEquals(30174.5973672, engine.convertAsDouble(AMOUNT, "Btu/second", "deciwatt", PLACES), 0.0);
        assertEquals(301.7459737, engine.convertAsDouble(AMOUNT, "Btu/second", "dekawatt", PLACES), 0.0);
        assertEquals(108628550521920.02, engine.convertAsDouble(AMOUNT, "Btu/second", "dyne centimeter/hour", PLACES), 0.0);
        assertEquals(1.8104758420320002E12, engine.convertAsDouble(AMOUNT, "Btu/second", "dyne centimeter/minute", PLACES), 0.0);
        assertEquals(3.01745973672E10, engine.convertAsDouble(AMOUNT, "Btu/second", "dyne centimeter/second", PLACES), 0.0);
        assertEquals(108628550521920.02, engine.convertAsDouble(AMOUNT, "Btu/second", "erg/hour", PLACES), 0.0);
        assertEquals(1.8104758420320002E12, engine.convertAsDouble(AMOUNT, "Btu/second", "erg/minute", PLACES), 0.0);
        assertEquals(3.01745973672E10, engine.convertAsDouble(AMOUNT, "Btu/second", "erg/second", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "Btu/second", "exawatt", PLACES), 0.0);
        assertEquals(3.0174597367199995e+18, engine.convertAsDouble(AMOUNT, "Btu/second", "femtowatt", PLACES), 0.0);
        assertEquals(8012031.0051903, engine.convertAsDouble(AMOUNT, "Btu/second", "foot pound force/hour", PLACES), 0.0);
        assertEquals(133533.8500865, engine.convertAsDouble(AMOUNT, "Btu/second", "foot pound force/minute", PLACES), 0.0);
        assertEquals(2225.5641681, engine.convertAsDouble(AMOUNT, "Btu/second", "foot pound force/second", PLACES), 0.0);
        assertEquals(257779465.9812706, engine.convertAsDouble(AMOUNT, "Btu/second", "foot poundal/hour", PLACES), 0.0);
        assertEquals(4296324.4330212, engine.convertAsDouble(AMOUNT, "Btu/second", "foot poundal/minute", PLACES), 0.0);
        assertEquals(71605.407217, engine.convertAsDouble(AMOUNT, "Btu/second", "foot poundal/second", PLACES), 0.0);
        assertEquals(3e-06, engine.convertAsDouble(AMOUNT, "Btu/second", "gigawatt", PLACES), 0.0);
        assertEquals(110770294159.4938, engine.convertAsDouble(AMOUNT, "Btu/second", "gram force centimeter/hour", PLACES), 0.0);
        assertEquals(1846171569.3248968, engine.convertAsDouble(AMOUNT, "Btu/second", "gram force centimeter/minute", PLACES), 0.0);
        assertEquals(30769526.1554149, engine.convertAsDouble(AMOUNT, "Btu/second", "gram force centimeter/second", PLACES), 0.0);
        assertEquals(30.1745974, engine.convertAsDouble(AMOUNT, "Btu/second", "hectowatt", PLACES), 0.0);
        assertEquals(4.0464802, engine.convertAsDouble(AMOUNT, "Btu/second", "horsepower", PLACES), 0.0);
        assertEquals(4080493.7203913, engine.convertAsDouble(AMOUNT, "Btu/second", "inch ounce force revolution/minute", PLACES), 0.0);
        assertEquals(10862855.052192, engine.convertAsDouble(AMOUNT, "Btu/second", "joule/hour", PLACES), 0.0);
        assertEquals(181047.5842032, engine.convertAsDouble(AMOUNT, "Btu/second", "joule/minute", PLACES), 0.0);
        assertEquals(3017.4597367, engine.convertAsDouble(AMOUNT, "Btu/second", "joule/second", PLACES), 0.0);
        assertEquals(2594.5483549, engine.convertAsDouble(AMOUNT, "Btu/second", "kilocalorie/hour", PLACES), 0.0);
        assertEquals(43.2424726, engine.convertAsDouble(AMOUNT, "Btu/second", "kilocalorie/minute", PLACES), 0.0);
        assertEquals(0.7207079, engine.convertAsDouble(AMOUNT, "Btu/second", "kilocalorie/second", PLACES), 0.0);
        assertEquals(1107702.9415949, engine.convertAsDouble(AMOUNT, "Btu/second", "kilogram force meter/hour", PLACES), 0.0);
        assertEquals(18461.7156932, engine.convertAsDouble(AMOUNT, "Btu/second", "kilogram force meter/minute", PLACES), 0.0);
        assertEquals(307.6952616, engine.convertAsDouble(AMOUNT, "Btu/second", "kilogram force meter/second", PLACES), 0.0);
        assertEquals(1107702.9415949, engine.convertAsDouble(AMOUNT, "Btu/second", "kilopond meter/hour", PLACES), 0.0);
        assertEquals(18461.7156932, engine.convertAsDouble(AMOUNT, "Btu/second", "kilopond meter/minute", PLACES), 0.0);
        assertEquals(307.6952616, engine.convertAsDouble(AMOUNT, "Btu/second", "kilopond meter/second", PLACES), 0.0);
        assertEquals(3.0174597, engine.convertAsDouble(AMOUNT, "Btu/second", "kilowatt", PLACES), 0.0);
        assertEquals(0.0030175, engine.convertAsDouble(AMOUNT, "Btu/second", "megawatt", PLACES), 0.0);
        assertEquals(3.0174597367200003E9, engine.convertAsDouble(AMOUNT, "Btu/second", "microwatt", PLACES), 0.0);
        assertEquals(0.010296, engine.convertAsDouble(AMOUNT, "Btu/second", "million Btu/hour", PLACES), 0.0);
        assertEquals(3017459.73672, engine.convertAsDouble(AMOUNT, "Btu/second", "milliwatt", PLACES), 0.0);
        assertEquals(3017459736719.9995, engine.convertAsDouble(AMOUNT, "Btu/second", "nanowatt", PLACES), 0.0);
        assertEquals(10862855.052192, engine.convertAsDouble(AMOUNT, "Btu/second", "newton meter/hour", PLACES), 0.0);
        assertEquals(181047.5842032, engine.convertAsDouble(AMOUNT, "Btu/second", "newton meter/minute", PLACES), 0.0);
        assertEquals(3017.4597367, engine.convertAsDouble(AMOUNT, "Btu/second", "newton meter/second", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "Btu/second", "petawatt", PLACES), 0.0);
        assertEquals(4.1026035, engine.convertAsDouble(AMOUNT, "Btu/second", "pferdestarke", PLACES), 0.0);
        assertEquals(3017459736720000.0, engine.convertAsDouble(AMOUNT, "Btu/second", "picowatt", PLACES), 0.0);
        assertEquals(3.0769526, engine.convertAsDouble(AMOUNT, "Btu/second", "poncelet", PLACES), 0.0);
        assertEquals(71605.407217, engine.convertAsDouble(AMOUNT, "Btu/second", "pound square foot/cubic second", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "Btu/second", "terawatt", PLACES), 0.0);
        assertEquals(0.858, engine.convertAsDouble(AMOUNT, "Btu/second", "ton of refrigeration", PLACES), 0.0);
        assertEquals(3017.4597367, engine.convertAsDouble(AMOUNT, "Btu/second", "watt", PLACES), 0.0);
        assertEquals(3.01745973672e+27, engine.convertAsDouble(AMOUNT, "Btu/second", "yoctowatt", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "Btu/second", "yottawatt", PLACES), 0.0);
        assertEquals(3.01745973672E24, engine.convertAsDouble(AMOUNT, "Btu/second", "zeptowatt", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "Btu/second", "zettawatt", PLACES), 0.0);
        assertEquals(3326179999999999.5, engine.convertAsDouble(AMOUNT, "calorie/hour", "attowatt", PLACES), 0.0);
        assertEquals(0.0113494, engine.convertAsDouble(AMOUNT, "calorie/hour", "Btu/hour", PLACES), 0.0);
        assertEquals(0.0001892, engine.convertAsDouble(AMOUNT, "calorie/hour", "Btu/minute", PLACES), 0.0);
        assertEquals(3.2e-06, engine.convertAsDouble(AMOUNT, "calorie/hour", "Btu/second", PLACES), 0.0);
        assertEquals(2.86, engine.convertAsDouble(AMOUNT, "calorie/hour", "calorie/hour", PLACES), 0.0);
        assertEquals(0.0476667, engine.convertAsDouble(AMOUNT, "calorie/hour", "calorie/minute", PLACES), 0.0);
        assertEquals(0.0007944, engine.convertAsDouble(AMOUNT, "calorie/hour", "calorie/second", PLACES), 0.0);
        assertEquals(0.332618, engine.convertAsDouble(AMOUNT, "calorie/hour", "centiwatt", PLACES), 0.0);
        assertEquals(4.5e-06, engine.convertAsDouble(AMOUNT, "calorie/hour", "cheval vapeur", PLACES), 0.0);
        assertEquals(2494.8401382, engine.convertAsDouble(AMOUNT, "calorie/hour", "clusec", PLACES), 0.0);
        assertEquals(0.0332618, engine.convertAsDouble(AMOUNT, "calorie/hour", "deciwatt", PLACES), 0.0);
        assertEquals(0.0003326, engine.convertAsDouble(AMOUNT, "calorie/hour", "dekawatt", PLACES), 0.0);
        assertEquals(119742480.0, engine.convertAsDouble(AMOUNT, "calorie/hour", "dyne centimeter/hour", PLACES), 0.0);
        assertEquals(1995708.0, engine.convertAsDouble(AMOUNT, "calorie/hour", "dyne centimeter/minute", PLACES), 0.0);
        assertEquals(33261.8, engine.convertAsDouble(AMOUNT, "calorie/hour", "dyne centimeter/second", PLACES), 0.0);
        assertEquals(119742480.0, engine.convertAsDouble(AMOUNT, "calorie/hour", "erg/hour", PLACES), 0.0);
        assertEquals(1995708.0, engine.convertAsDouble(AMOUNT, "calorie/hour", "erg/minute", PLACES), 0.0);
        assertEquals(33261.8, engine.convertAsDouble(AMOUNT, "calorie/hour", "erg/second", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "calorie/hour", "exawatt", PLACES), 0.0);
        assertEquals(3326179999999.9995, engine.convertAsDouble(AMOUNT, "calorie/hour", "femtowatt", PLACES), 0.0);
        assertEquals(8.8317524, engine.convertAsDouble(AMOUNT, "calorie/hour", "foot pound force/hour", PLACES), 0.0);
        assertEquals(0.1471959, engine.convertAsDouble(AMOUNT, "calorie/hour", "foot pound force/minute", PLACES), 0.0);
        assertEquals(0.0024533, engine.convertAsDouble(AMOUNT, "calorie/hour", "foot pound force/second", PLACES), 0.0);
        assertEquals(284.1532212, engine.convertAsDouble(AMOUNT, "calorie/hour", "foot poundal/hour", PLACES), 0.0);
        assertEquals(4.735887, engine.convertAsDouble(AMOUNT, "calorie/hour", "foot poundal/minute", PLACES), 0.0);
        assertEquals(0.0789315, engine.convertAsDouble(AMOUNT, "calorie/hour", "foot poundal/second", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "calorie/hour", "gigawatt", PLACES), 0.0);
        assertEquals(122103.3482382, engine.convertAsDouble(AMOUNT, "calorie/hour", "gram force centimeter/hour", PLACES), 0.0);
        assertEquals(2035.055804, engine.convertAsDouble(AMOUNT, "calorie/hour", "gram force centimeter/minute", PLACES), 0.0);
        assertEquals(33.9175967, engine.convertAsDouble(AMOUNT, "calorie/hour", "gram force centimeter/second", PLACES), 0.0);
        assertEquals(3.33e-05, engine.convertAsDouble(AMOUNT, "calorie/hour", "hectowatt", PLACES), 0.0);
        assertEquals(4.5e-06, engine.convertAsDouble(AMOUNT, "calorie/hour", "horsepower", PLACES), 0.0);
        assertEquals(4.4979744, engine.convertAsDouble(AMOUNT, "calorie/hour", "inch ounce force revolution/minute", PLACES), 0.0);
        assertEquals(11.974248, engine.convertAsDouble(AMOUNT, "calorie/hour", "joule/hour", PLACES), 0.0);
        assertEquals(0.1995708, engine.convertAsDouble(AMOUNT, "calorie/hour", "joule/minute", PLACES), 0.0);
        assertEquals(0.0033262, engine.convertAsDouble(AMOUNT, "calorie/hour", "joule/second", PLACES), 0.0);
        assertEquals(0.00286, engine.convertAsDouble(AMOUNT, "calorie/hour", "kilocalorie/hour", PLACES), 0.0);
        assertEquals(4.77e-05, engine.convertAsDouble(AMOUNT, "calorie/hour", "kilocalorie/minute", PLACES), 0.0);
        assertEquals(8e-07, engine.convertAsDouble(AMOUNT, "calorie/hour", "kilocalorie/second", PLACES), 0.0);
        assertEquals(1.2210335, engine.convertAsDouble(AMOUNT, "calorie/hour", "kilogram force meter/hour", PLACES), 0.0);
        assertEquals(0.0203506, engine.convertAsDouble(AMOUNT, "calorie/hour", "kilogram force meter/minute", PLACES), 0.0);
        assertEquals(0.0003392, engine.convertAsDouble(AMOUNT, "calorie/hour", "kilogram force meter/second", PLACES), 0.0);
        assertEquals(1.2210335, engine.convertAsDouble(AMOUNT, "calorie/hour", "kilopond meter/hour", PLACES), 0.0);
        assertEquals(0.0203506, engine.convertAsDouble(AMOUNT, "calorie/hour", "kilopond meter/minute", PLACES), 0.0);
        assertEquals(0.0003392, engine.convertAsDouble(AMOUNT, "calorie/hour", "kilopond meter/second", PLACES), 0.0);
        assertEquals(3.3e-06, engine.convertAsDouble(AMOUNT, "calorie/hour", "kilowatt", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "calorie/hour", "megawatt", PLACES), 0.0);
        assertEquals(3326.18, engine.convertAsDouble(AMOUNT, "calorie/hour", "microwatt", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "calorie/hour", "million Btu/hour", PLACES), 0.0);
        assertEquals(3.32618, engine.convertAsDouble(AMOUNT, "calorie/hour", "milliwatt", PLACES), 0.0);
        assertEquals(3326180.0, engine.convertAsDouble(AMOUNT, "calorie/hour", "nanowatt", PLACES), 0.0);
        assertEquals(11.974248, engine.convertAsDouble(AMOUNT, "calorie/hour", "newton meter/hour", PLACES), 0.0);
        assertEquals(0.1995708, engine.convertAsDouble(AMOUNT, "calorie/hour", "newton meter/minute", PLACES), 0.0);
        assertEquals(0.0033262, engine.convertAsDouble(AMOUNT, "calorie/hour", "newton meter/second", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "calorie/hour", "petawatt", PLACES), 0.0);
        assertEquals(4.5e-06, engine.convertAsDouble(AMOUNT, "calorie/hour", "pferdestarke", PLACES), 0.0);
        assertEquals(3326180000.0, engine.convertAsDouble(AMOUNT, "calorie/hour", "picowatt", PLACES), 0.0);
        assertEquals(3.4e-06, engine.convertAsDouble(AMOUNT, "calorie/hour", "poncelet", PLACES), 0.0);
        assertEquals(0.0789315, engine.convertAsDouble(AMOUNT, "calorie/hour", "pound square foot/cubic second", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "calorie/hour", "terawatt", PLACES), 0.0);
        assertEquals(9e-07, engine.convertAsDouble(AMOUNT, "calorie/hour", "ton of refrigeration", PLACES), 0.0);
        assertEquals(0.0033262, engine.convertAsDouble(AMOUNT, "calorie/hour", "watt", PLACES), 0.0);
        assertEquals(3.32618e+21, engine.convertAsDouble(AMOUNT, "calorie/hour", "yoctowatt", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "calorie/hour", "yottawatt", PLACES), 0.0);
        assertEquals(3.32618e+18, engine.convertAsDouble(AMOUNT, "calorie/hour", "zeptowatt", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "calorie/hour", "zettawatt", PLACES), 0.0);
        assertEquals(1.9957079999999994e+17, engine.convertAsDouble(AMOUNT, "calorie/minute", "attowatt", PLACES), 0.0);
        assertEquals(0.6809638, engine.convertAsDouble(AMOUNT, "calorie/minute", "Btu/hour", PLACES), 0.0);
        assertEquals(0.0113494, engine.convertAsDouble(AMOUNT, "calorie/minute", "Btu/minute", PLACES), 0.0);
        assertEquals(0.0001892, engine.convertAsDouble(AMOUNT, "calorie/minute", "Btu/second", PLACES), 0.0);
        assertEquals(171.6, engine.convertAsDouble(AMOUNT, "calorie/minute", "calorie/hour", PLACES), 0.0);
        assertEquals(2.86, engine.convertAsDouble(AMOUNT, "calorie/minute", "calorie/minute", PLACES), 0.0);
        assertEquals(0.0476667, engine.convertAsDouble(AMOUNT, "calorie/minute", "calorie/second", PLACES), 0.0);
        assertEquals(19.95708, engine.convertAsDouble(AMOUNT, "calorie/minute", "centiwatt", PLACES), 0.0);
        assertEquals(0.0002713, engine.convertAsDouble(AMOUNT, "calorie/minute", "cheval vapeur", PLACES), 0.0);
        assertEquals(149690.4082938, engine.convertAsDouble(AMOUNT, "calorie/minute", "clusec", PLACES), 0.0);
        assertEquals(1.995708, engine.convertAsDouble(AMOUNT, "calorie/minute", "deciwatt", PLACES), 0.0);
        assertEquals(0.0199571, engine.convertAsDouble(AMOUNT, "calorie/minute", "dekawatt", PLACES), 0.0);
        assertEquals(7.1845488E9, engine.convertAsDouble(AMOUNT, "calorie/minute", "dyne centimeter/hour", PLACES), 0.0);
        assertEquals(119742480.0, engine.convertAsDouble(AMOUNT, "calorie/minute", "dyne centimeter/minute", PLACES), 0.0);
        assertEquals(1995708.0, engine.convertAsDouble(AMOUNT, "calorie/minute", "dyne centimeter/second", PLACES), 0.0);
        assertEquals(7.1845488E9, engine.convertAsDouble(AMOUNT, "calorie/minute", "erg/hour", PLACES), 0.0);
        assertEquals(119742480.0, engine.convertAsDouble(AMOUNT, "calorie/minute", "erg/minute", PLACES), 0.0);
        assertEquals(1995708.0, engine.convertAsDouble(AMOUNT, "calorie/minute", "erg/second", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "calorie/minute", "exawatt", PLACES), 0.0);
        assertEquals(199570799999999.94, engine.convertAsDouble(AMOUNT, "calorie/minute", "femtowatt", PLACES), 0.0);
        assertEquals(529.9051443, engine.convertAsDouble(AMOUNT, "calorie/minute", "foot pound force/hour", PLACES), 0.0);
        assertEquals(8.8317524, engine.convertAsDouble(AMOUNT, "calorie/minute", "foot pound force/minute", PLACES), 0.0);
        assertEquals(0.1471959, engine.convertAsDouble(AMOUNT, "calorie/minute", "foot pound force/second", PLACES), 0.0);
        assertEquals(17049.1932745, engine.convertAsDouble(AMOUNT, "calorie/minute", "foot poundal/hour", PLACES), 0.0);
        assertEquals(284.1532212, engine.convertAsDouble(AMOUNT, "calorie/minute", "foot poundal/minute", PLACES), 0.0);
        assertEquals(4.735887, engine.convertAsDouble(AMOUNT, "calorie/minute", "foot poundal/second", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "calorie/minute", "gigawatt", PLACES), 0.0);
        assertEquals(7326200.8942911, engine.convertAsDouble(AMOUNT, "calorie/minute", "gram force centimeter/hour", PLACES), 0.0);
        assertEquals(122103.3482382, engine.convertAsDouble(AMOUNT, "calorie/minute", "gram force centimeter/minute", PLACES), 0.0);
        assertEquals(2035.055804, engine.convertAsDouble(AMOUNT, "calorie/minute", "gram force centimeter/second", PLACES), 0.0);
        assertEquals(0.0019957, engine.convertAsDouble(AMOUNT, "calorie/minute", "hectowatt", PLACES), 0.0);
        assertEquals(0.0002676, engine.convertAsDouble(AMOUNT, "calorie/minute", "horsepower", PLACES), 0.0);
        assertEquals(269.8784631, engine.convertAsDouble(AMOUNT, "calorie/minute", "inch ounce force revolution/minute", PLACES), 0.0);
        assertEquals(718.45488, engine.convertAsDouble(AMOUNT, "calorie/minute", "joule/hour", PLACES), 0.0);
        assertEquals(11.974248, engine.convertAsDouble(AMOUNT, "calorie/minute", "joule/minute", PLACES), 0.0);
        assertEquals(0.1995708, engine.convertAsDouble(AMOUNT, "calorie/minute", "joule/second", PLACES), 0.0);
        assertEquals(0.1716, engine.convertAsDouble(AMOUNT, "calorie/minute", "kilocalorie/hour", PLACES), 0.0);
        assertEquals(0.00286, engine.convertAsDouble(AMOUNT, "calorie/minute", "kilocalorie/minute", PLACES), 0.0);
        assertEquals(4.77e-05, engine.convertAsDouble(AMOUNT, "calorie/minute", "kilocalorie/second", PLACES), 0.0);
        assertEquals(73.2620089, engine.convertAsDouble(AMOUNT, "calorie/minute", "kilogram force meter/hour", PLACES), 0.0);
        assertEquals(1.2210335, engine.convertAsDouble(AMOUNT, "calorie/minute", "kilogram force meter/minute", PLACES), 0.0);
        assertEquals(0.0203506, engine.convertAsDouble(AMOUNT, "calorie/minute", "kilogram force meter/second", PLACES), 0.0);
        assertEquals(73.2620089, engine.convertAsDouble(AMOUNT, "calorie/minute", "kilopond meter/hour", PLACES), 0.0);
        assertEquals(1.2210335, engine.convertAsDouble(AMOUNT, "calorie/minute", "kilopond meter/minute", PLACES), 0.0);
        assertEquals(0.0203506, engine.convertAsDouble(AMOUNT, "calorie/minute", "kilopond meter/second", PLACES), 0.0);
        assertEquals(0.0001996, engine.convertAsDouble(AMOUNT, "calorie/minute", "kilowatt", PLACES), 0.0);
        assertEquals(2e-07, engine.convertAsDouble(AMOUNT, "calorie/minute", "megawatt", PLACES), 0.0);
        assertEquals(199570.8, engine.convertAsDouble(AMOUNT, "calorie/minute", "microwatt", PLACES), 0.0);
        assertEquals(7e-07, engine.convertAsDouble(AMOUNT, "calorie/minute", "million Btu/hour", PLACES), 0.0);
        assertEquals(199.5708, engine.convertAsDouble(AMOUNT, "calorie/minute", "milliwatt", PLACES), 0.0);
        assertEquals(199570799.9999999, engine.convertAsDouble(AMOUNT, "calorie/minute", "nanowatt", PLACES), 0.0);
        assertEquals(718.45488, engine.convertAsDouble(AMOUNT, "calorie/minute", "newton meter/hour", PLACES), 0.0);
        assertEquals(11.974248, engine.convertAsDouble(AMOUNT, "calorie/minute", "newton meter/minute", PLACES), 0.0);
        assertEquals(0.1995708, engine.convertAsDouble(AMOUNT, "calorie/minute", "newton meter/second", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "calorie/minute", "petawatt", PLACES), 0.0);
        assertEquals(0.0002713, engine.convertAsDouble(AMOUNT, "calorie/minute", "pferdestarke", PLACES), 0.0);
        assertEquals(1.9957079999999997E11, engine.convertAsDouble(AMOUNT, "calorie/minute", "picowatt", PLACES), 0.0);
        assertEquals(0.0002035, engine.convertAsDouble(AMOUNT, "calorie/minute", "poncelet", PLACES), 0.0);
        assertEquals(4.735887, engine.convertAsDouble(AMOUNT, "calorie/minute", "pound square foot/cubic second", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "calorie/minute", "terawatt", PLACES), 0.0);
        assertEquals(5.67e-05, engine.convertAsDouble(AMOUNT, "calorie/minute", "ton of refrigeration", PLACES), 0.0);
        assertEquals(0.1995708, engine.convertAsDouble(AMOUNT, "calorie/minute", "watt", PLACES), 0.0);
        assertEquals(1.9957079999999998e+23, engine.convertAsDouble(AMOUNT, "calorie/minute", "yoctowatt", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "calorie/minute", "yottawatt", PLACES), 0.0);
        assertEquals(1.9957079999999997E20, engine.convertAsDouble(AMOUNT, "calorie/minute", "zeptowatt", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "calorie/minute", "zettawatt", PLACES), 0.0);
        assertEquals(1.1974247999999998e+19, engine.convertAsDouble(AMOUNT, "calorie/second", "attowatt", PLACES), 0.0);
        assertEquals(40.8578302, engine.convertAsDouble(AMOUNT, "calorie/second", "Btu/hour", PLACES), 0.0);
        assertEquals(0.6809638, engine.convertAsDouble(AMOUNT, "calorie/second", "Btu/minute", PLACES), 0.0);
        assertEquals(0.0113494, engine.convertAsDouble(AMOUNT, "calorie/second", "Btu/second", PLACES), 0.0);
        assertEquals(10296.0, engine.convertAsDouble(AMOUNT, "calorie/second", "calorie/hour", PLACES), 0.0);
        assertEquals(171.6, engine.convertAsDouble(AMOUNT, "calorie/second", "calorie/minute", PLACES), 0.0);
        assertEquals(2.86, engine.convertAsDouble(AMOUNT, "calorie/second", "calorie/second", PLACES), 0.0);
        assertEquals(1197.4248, engine.convertAsDouble(AMOUNT, "calorie/second", "centiwatt", PLACES), 0.0);
        assertEquals(0.0162804, engine.convertAsDouble(AMOUNT, "calorie/second", "cheval vapeur", PLACES), 0.0);
        assertEquals(8981424.4976293, engine.convertAsDouble(AMOUNT, "calorie/second", "clusec", PLACES), 0.0);
        assertEquals(119.74248, engine.convertAsDouble(AMOUNT, "calorie/second", "deciwatt", PLACES), 0.0);
        assertEquals(1.1974248, engine.convertAsDouble(AMOUNT, "calorie/second", "dekawatt", PLACES), 0.0);
        assertEquals(431072928000.00006, engine.convertAsDouble(AMOUNT, "calorie/second", "dyne centimeter/hour", PLACES), 0.0);
        assertEquals(7184548800.0, engine.convertAsDouble(AMOUNT, "calorie/second", "dyne centimeter/minute", PLACES), 0.0);
        assertEquals(119742480.0, engine.convertAsDouble(AMOUNT, "calorie/second", "dyne centimeter/second", PLACES), 0.0);
        assertEquals(431072928000.00006, engine.convertAsDouble(AMOUNT, "calorie/second", "erg/hour", PLACES), 0.0);
        assertEquals(7184548800.0, engine.convertAsDouble(AMOUNT, "calorie/second", "erg/minute", PLACES), 0.0);
        assertEquals(119742480.0, engine.convertAsDouble(AMOUNT, "calorie/second", "erg/second", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "calorie/second", "exawatt", PLACES), 0.0);
        assertEquals(1.1974247999999998e+16, engine.convertAsDouble(AMOUNT, "calorie/second", "femtowatt", PLACES), 0.0);
        assertEquals(31794.3086605, engine.convertAsDouble(AMOUNT, "calorie/second", "foot pound force/hour", PLACES), 0.0);
        assertEquals(529.9051443, engine.convertAsDouble(AMOUNT, "calorie/second", "foot pound force/minute", PLACES), 0.0);
        assertEquals(8.8317524, engine.convertAsDouble(AMOUNT, "calorie/second", "foot pound force/second", PLACES), 0.0);
        assertEquals(1022951.5964719, engine.convertAsDouble(AMOUNT, "calorie/second", "foot poundal/hour", PLACES), 0.0);
        assertEquals(17049.1932745, engine.convertAsDouble(AMOUNT, "calorie/second", "foot poundal/minute", PLACES), 0.0);
        assertEquals(284.1532212, engine.convertAsDouble(AMOUNT, "calorie/second", "foot poundal/second", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "calorie/second", "gigawatt", PLACES), 0.0);
        assertEquals(439572053.6574671, engine.convertAsDouble(AMOUNT, "calorie/second", "gram force centimeter/hour", PLACES), 0.0);
        assertEquals(7326200.8942911, engine.convertAsDouble(AMOUNT, "calorie/second", "gram force centimeter/minute", PLACES), 0.0);
        assertEquals(122103.3482382, engine.convertAsDouble(AMOUNT, "calorie/second", "gram force centimeter/second", PLACES), 0.0);
        assertEquals(0.1197425, engine.convertAsDouble(AMOUNT, "calorie/second", "hectowatt", PLACES), 0.0);
        assertEquals(0.0160577, engine.convertAsDouble(AMOUNT, "calorie/second", "horsepower", PLACES), 0.0);
        assertEquals(16192.7077852, engine.convertAsDouble(AMOUNT, "calorie/second", "inch ounce force revolution/minute", PLACES), 0.0);
        assertEquals(43107.2928, engine.convertAsDouble(AMOUNT, "calorie/second", "joule/hour", PLACES), 0.0);
        assertEquals(718.45488, engine.convertAsDouble(AMOUNT, "calorie/second", "joule/minute", PLACES), 0.0);
        assertEquals(11.974248, engine.convertAsDouble(AMOUNT, "calorie/second", "joule/second", PLACES), 0.0);
        assertEquals(10.296, engine.convertAsDouble(AMOUNT, "calorie/second", "kilocalorie/hour", PLACES), 0.0);
        assertEquals(0.1716, engine.convertAsDouble(AMOUNT, "calorie/second", "kilocalorie/minute", PLACES), 0.0);
        assertEquals(0.00286, engine.convertAsDouble(AMOUNT, "calorie/second", "kilocalorie/second", PLACES), 0.0);
        assertEquals(4395.7205366, engine.convertAsDouble(AMOUNT, "calorie/second", "kilogram force meter/hour", PLACES), 0.0);
        assertEquals(73.2620089, engine.convertAsDouble(AMOUNT, "calorie/second", "kilogram force meter/minute", PLACES), 0.0);
        assertEquals(1.2210335, engine.convertAsDouble(AMOUNT, "calorie/second", "kilogram force meter/second", PLACES), 0.0);
        assertEquals(4395.7205366, engine.convertAsDouble(AMOUNT, "calorie/second", "kilopond meter/hour", PLACES), 0.0);
        assertEquals(73.2620089, engine.convertAsDouble(AMOUNT, "calorie/second", "kilopond meter/minute", PLACES), 0.0);
        assertEquals(1.2210335, engine.convertAsDouble(AMOUNT, "calorie/second", "kilopond meter/second", PLACES), 0.0);
        assertEquals(0.0119742, engine.convertAsDouble(AMOUNT, "calorie/second", "kilowatt", PLACES), 0.0);
        assertEquals(1.2e-05, engine.convertAsDouble(AMOUNT, "calorie/second", "megawatt", PLACES), 0.0);
        assertEquals(11974248.0, engine.convertAsDouble(AMOUNT, "calorie/second", "microwatt", PLACES), 0.0);
        assertEquals(4.09e-05, engine.convertAsDouble(AMOUNT, "calorie/second", "million Btu/hour", PLACES), 0.0);
        assertEquals(11974.248, engine.convertAsDouble(AMOUNT, "calorie/second", "milliwatt", PLACES), 0.0);
        assertEquals(11974247999.999998, engine.convertAsDouble(AMOUNT, "calorie/second", "nanowatt", PLACES), 0.0);
        assertEquals(43107.2928, engine.convertAsDouble(AMOUNT, "calorie/second", "newton meter/hour", PLACES), 0.0);
        assertEquals(718.45488, engine.convertAsDouble(AMOUNT, "calorie/second", "newton meter/minute", PLACES), 0.0);
        assertEquals(11.974248, engine.convertAsDouble(AMOUNT, "calorie/second", "newton meter/second", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "calorie/second", "petawatt", PLACES), 0.0);
        assertEquals(0.0162804, engine.convertAsDouble(AMOUNT, "calorie/second", "pferdestarke", PLACES), 0.0);
        assertEquals(11974248000000.0, engine.convertAsDouble(AMOUNT, "calorie/second", "picowatt", PLACES), 0.0);
        assertEquals(0.0122103, engine.convertAsDouble(AMOUNT, "calorie/second", "poncelet", PLACES), 0.0);
        assertEquals(284.1532212, engine.convertAsDouble(AMOUNT, "calorie/second", "pound square foot/cubic second", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "calorie/second", "terawatt", PLACES), 0.0);
        assertEquals(0.0034048, engine.convertAsDouble(AMOUNT, "calorie/second", "ton of refrigeration", PLACES), 0.0);
        assertEquals(11.974248, engine.convertAsDouble(AMOUNT, "calorie/second", "watt", PLACES), 0.0);
        assertEquals(1.1974248e+25, engine.convertAsDouble(AMOUNT, "calorie/second", "yoctowatt", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "calorie/second", "yottawatt", PLACES), 0.0);
        assertEquals(1.1974248e+22, engine.convertAsDouble(AMOUNT, "calorie/second", "zeptowatt", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "calorie/second", "zettawatt", PLACES), 0.0);
        assertEquals(2.86E16, engine.convertAsDouble(AMOUNT, "centiwatt", "attowatt", PLACES), 0.0);
        assertEquals(0.0975873, engine.convertAsDouble(AMOUNT, "centiwatt", "Btu/hour", PLACES), 0.0);
        assertEquals(0.0016265, engine.convertAsDouble(AMOUNT, "centiwatt", "Btu/minute", PLACES), 0.0);
        assertEquals(2.71e-05, engine.convertAsDouble(AMOUNT, "centiwatt", "Btu/second", PLACES), 0.0);
        assertEquals(24.5915735, engine.convertAsDouble(AMOUNT, "centiwatt", "calorie/hour", PLACES), 0.0);
        assertEquals(0.4098596, engine.convertAsDouble(AMOUNT, "centiwatt", "calorie/minute", PLACES), 0.0);
        assertEquals(0.006831, engine.convertAsDouble(AMOUNT, "centiwatt", "calorie/second", PLACES), 0.0);
        assertEquals(2.86, engine.convertAsDouble(AMOUNT, "centiwatt", "centiwatt", PLACES), 0.0);
        assertEquals(3.89e-05, engine.convertAsDouble(AMOUNT, "centiwatt", "cheval vapeur", PLACES), 0.0);
        assertEquals(21451.7638713, engine.convertAsDouble(AMOUNT, "centiwatt", "clusec", PLACES), 0.0);
        assertEquals(0.286, engine.convertAsDouble(AMOUNT, "centiwatt", "deciwatt", PLACES), 0.0);
        assertEquals(0.00286, engine.convertAsDouble(AMOUNT, "centiwatt", "dekawatt", PLACES), 0.0);
        assertEquals(1.0296000000000002E9, engine.convertAsDouble(AMOUNT, "centiwatt", "dyne centimeter/hour", PLACES), 0.0);
        assertEquals(17160000.0, engine.convertAsDouble(AMOUNT, "centiwatt", "dyne centimeter/minute", PLACES), 0.0);
        assertEquals(286000.0, engine.convertAsDouble(AMOUNT, "centiwatt", "dyne centimeter/second", PLACES), 0.0);
        assertEquals(1.0296000000000002E9, engine.convertAsDouble(AMOUNT, "centiwatt", "erg/hour", PLACES), 0.0);
        assertEquals(17160000.0, engine.convertAsDouble(AMOUNT, "centiwatt", "erg/minute", PLACES), 0.0);
        assertEquals(286000.0, engine.convertAsDouble(AMOUNT, "centiwatt", "erg/second", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "centiwatt", "exawatt", PLACES), 0.0);
        assertEquals(2.86E13, engine.convertAsDouble(AMOUNT, "centiwatt", "femtowatt", PLACES), 0.0);
        assertEquals(75.9394016, engine.convertAsDouble(AMOUNT, "centiwatt", "foot pound force/hour", PLACES), 0.0);
        assertEquals(1.2656567, engine.convertAsDouble(AMOUNT, "centiwatt", "foot pound force/minute", PLACES), 0.0);
        assertEquals(0.0210943, engine.convertAsDouble(AMOUNT, "centiwatt", "foot pound force/second", PLACES), 0.0);
        assertEquals(2443.2779127, engine.convertAsDouble(AMOUNT, "centiwatt", "foot poundal/hour", PLACES), 0.0);
        assertEquals(40.7212985, engine.convertAsDouble(AMOUNT, "centiwatt", "foot poundal/minute", PLACES), 0.0);
        assertEquals(0.6786883, engine.convertAsDouble(AMOUNT, "centiwatt", "foot poundal/second", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "centiwatt", "gigawatt", PLACES), 0.0);
        assertEquals(1049899.8128821, engine.convertAsDouble(AMOUNT, "centiwatt", "gram force centimeter/hour", PLACES), 0.0);
        assertEquals(17498.3302147, engine.convertAsDouble(AMOUNT, "centiwatt", "gram force centimeter/minute", PLACES), 0.0);
        assertEquals(291.6388369, engine.convertAsDouble(AMOUNT, "centiwatt", "gram force centimeter/second", PLACES), 0.0);
        assertEquals(0.000286, engine.convertAsDouble(AMOUNT, "centiwatt", "hectowatt", PLACES), 0.0);
        assertEquals(3.84e-05, engine.convertAsDouble(AMOUNT, "centiwatt", "horsepower", PLACES), 0.0);
        assertEquals(38.6756181, engine.convertAsDouble(AMOUNT, "centiwatt", "inch ounce force revolution/minute", PLACES), 0.0);
        assertEquals(102.96, engine.convertAsDouble(AMOUNT, "centiwatt", "joule/hour", PLACES), 0.0);
        assertEquals(1.716, engine.convertAsDouble(AMOUNT, "centiwatt", "joule/minute", PLACES), 0.0);
        assertEquals(0.0286, engine.convertAsDouble(AMOUNT, "centiwatt", "joule/second", PLACES), 0.0);
        assertEquals(0.0245916, engine.convertAsDouble(AMOUNT, "centiwatt", "kilocalorie/hour", PLACES), 0.0);
        assertEquals(0.0004099, engine.convertAsDouble(AMOUNT, "centiwatt", "kilocalorie/minute", PLACES), 0.0);
        assertEquals(6.8e-06, engine.convertAsDouble(AMOUNT, "centiwatt", "kilocalorie/second", PLACES), 0.0);
        assertEquals(10.4989981, engine.convertAsDouble(AMOUNT, "centiwatt", "kilogram force meter/hour", PLACES), 0.0);
        assertEquals(0.1749833, engine.convertAsDouble(AMOUNT, "centiwatt", "kilogram force meter/minute", PLACES), 0.0);
        assertEquals(0.0029164, engine.convertAsDouble(AMOUNT, "centiwatt", "kilogram force meter/second", PLACES), 0.0);
        assertEquals(10.4989981, engine.convertAsDouble(AMOUNT, "centiwatt", "kilopond meter/hour", PLACES), 0.0);
        assertEquals(0.1749833, engine.convertAsDouble(AMOUNT, "centiwatt", "kilopond meter/minute", PLACES), 0.0);
        assertEquals(0.0029164, engine.convertAsDouble(AMOUNT, "centiwatt", "kilopond meter/second", PLACES), 0.0);
        assertEquals(2.86e-05, engine.convertAsDouble(AMOUNT, "centiwatt", "kilowatt", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "centiwatt", "megawatt", PLACES), 0.0);
        assertEquals(28600.0, engine.convertAsDouble(AMOUNT, "centiwatt", "microwatt", PLACES), 0.0);
        assertEquals(1e-07, engine.convertAsDouble(AMOUNT, "centiwatt", "million Btu/hour", PLACES), 0.0);
        assertEquals(28.6, engine.convertAsDouble(AMOUNT, "centiwatt", "milliwatt", PLACES), 0.0);
        assertEquals(28600000.0, engine.convertAsDouble(AMOUNT, "centiwatt", "nanowatt", PLACES), 0.0);
        assertEquals(102.96, engine.convertAsDouble(AMOUNT, "centiwatt", "newton meter/hour", PLACES), 0.0);
        assertEquals(1.716, engine.convertAsDouble(AMOUNT, "centiwatt", "newton meter/minute", PLACES), 0.0);
        assertEquals(0.0286, engine.convertAsDouble(AMOUNT, "centiwatt", "newton meter/second", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "centiwatt", "petawatt", PLACES), 0.0);
        assertEquals(3.89e-05, engine.convertAsDouble(AMOUNT, "centiwatt", "pferdestarke", PLACES), 0.0);
        assertEquals(28600000000.0, engine.convertAsDouble(AMOUNT, "centiwatt", "picowatt", PLACES), 0.0);
        assertEquals(2.92e-05, engine.convertAsDouble(AMOUNT, "centiwatt", "poncelet", PLACES), 0.0);
        assertEquals(0.6786883, engine.convertAsDouble(AMOUNT, "centiwatt", "pound square foot/cubic second", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "centiwatt", "terawatt", PLACES), 0.0);
        assertEquals(8.1e-06, engine.convertAsDouble(AMOUNT, "centiwatt", "ton of refrigeration", PLACES), 0.0);
        assertEquals(0.0286, engine.convertAsDouble(AMOUNT, "centiwatt", "watt", PLACES), 0.0);
        assertEquals(2.86e+22, engine.convertAsDouble(AMOUNT, "centiwatt", "yoctowatt", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "centiwatt", "yottawatt", PLACES), 0.0);
        assertEquals(2.8600000000000004E19, engine.convertAsDouble(AMOUNT, "centiwatt", "zeptowatt", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "centiwatt", "zettawatt", PLACES), 0.0);
        assertEquals(2.1035264249999998E21, engine.convertAsDouble(AMOUNT, "cheval vapeur", "attowatt", PLACES), 0.0);
        assertEquals(7177.5300953, engine.convertAsDouble(AMOUNT, "cheval vapeur", "Btu/hour", PLACES), 0.0);
        assertEquals(119.6255016, engine.convertAsDouble(AMOUNT, "cheval vapeur", "Btu/minute", PLACES), 0.0);
        assertEquals(1.9937584, engine.convertAsDouble(AMOUNT, "cheval vapeur", "Btu/second", PLACES), 0.0);
        assertEquals(1808707.1582115, engine.convertAsDouble(AMOUNT, "cheval vapeur", "calorie/hour", PLACES), 0.0);
        assertEquals(30145.1193035, engine.convertAsDouble(AMOUNT, "cheval vapeur", "calorie/minute", PLACES), 0.0);
        assertEquals(502.4186551, engine.convertAsDouble(AMOUNT, "cheval vapeur", "calorie/second", PLACES), 0.0);
        assertEquals(210352.6425, engine.convertAsDouble(AMOUNT, "cheval vapeur", "centiwatt", PLACES), 0.0);
        assertEquals(2.86, engine.convertAsDouble(AMOUNT, "cheval vapeur", "cheval vapeur", PLACES), 0.0);
        assertEquals(1577774551.2624774, engine.convertAsDouble(AMOUNT, "cheval vapeur", "clusec", PLACES), 0.0);
        assertEquals(21035.26425, engine.convertAsDouble(AMOUNT, "cheval vapeur", "deciwatt", PLACES), 0.0);
        assertEquals(210.3526425, engine.convertAsDouble(AMOUNT, "cheval vapeur", "dekawatt", PLACES), 0.0);
        assertEquals(75726951300000.02, engine.convertAsDouble(AMOUNT, "cheval vapeur", "dyne centimeter/hour", PLACES), 0.0);
        assertEquals(1.2621158550000002E12, engine.convertAsDouble(AMOUNT, "cheval vapeur", "dyne centimeter/minute", PLACES), 0.0);
        assertEquals(21035264250.0, engine.convertAsDouble(AMOUNT, "cheval vapeur", "dyne centimeter/second", PLACES), 0.0);
        assertEquals(75726951300000.02, engine.convertAsDouble(AMOUNT, "cheval vapeur", "erg/hour", PLACES), 0.0);
        assertEquals(1.2621158550000002E12, engine.convertAsDouble(AMOUNT, "cheval vapeur", "erg/minute", PLACES), 0.0);
        assertEquals(21035264250.0, engine.convertAsDouble(AMOUNT, "cheval vapeur", "erg/second", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "cheval vapeur", "exawatt", PLACES), 0.0);
        assertEquals(2.10352642499999974E18, engine.convertAsDouble(AMOUNT, "cheval vapeur", "femtowatt", PLACES), 0.0);
        assertEquals(5585333.495007, engine.convertAsDouble(AMOUNT, "cheval vapeur", "foot pound force/hour", PLACES), 0.0);
        assertEquals(93088.8915834, engine.convertAsDouble(AMOUNT, "cheval vapeur", "foot pound force/minute", PLACES), 0.0);
        assertEquals(1551.4815264, engine.convertAsDouble(AMOUNT, "cheval vapeur", "foot pound force/second", PLACES), 0.0);
        assertEquals(179702785.0662943, engine.convertAsDouble(AMOUNT, "cheval vapeur", "foot poundal/hour", PLACES), 0.0);
        assertEquals(2995046.4177716, engine.convertAsDouble(AMOUNT, "cheval vapeur", "foot poundal/minute", PLACES), 0.0);
        assertEquals(49917.4402962, engine.convertAsDouble(AMOUNT, "cheval vapeur", "foot poundal/second", PLACES), 0.0);
        assertEquals(2.1e-06, engine.convertAsDouble(AMOUNT, "cheval vapeur", "gigawatt", PLACES), 0.0);
        assertEquals(77220000000.0, engine.convertAsDouble(AMOUNT, "cheval vapeur", "gram force centimeter/hour", PLACES), 0.0);
        assertEquals(1.2869999999999998E9, engine.convertAsDouble(AMOUNT, "cheval vapeur", "gram force centimeter/minute", PLACES), 0.0);
        assertEquals(21450000.0, engine.convertAsDouble(AMOUNT, "cheval vapeur", "gram force centimeter/second", PLACES), 0.0);
        assertEquals(21.0352643, engine.convertAsDouble(AMOUNT, "cheval vapeur", "hectowatt", PLACES), 0.0);
        assertEquals(2.8208754, engine.convertAsDouble(AMOUNT, "cheval vapeur", "horsepower", PLACES), 0.0);
        assertEquals(2844586.8766488, engine.convertAsDouble(AMOUNT, "cheval vapeur", "inch ounce force revolution/minute", PLACES), 0.0);
        assertEquals(7572695.13, engine.convertAsDouble(AMOUNT, "cheval vapeur", "joule/hour", PLACES), 0.0);
        assertEquals(126211.5855, engine.convertAsDouble(AMOUNT, "cheval vapeur", "joule/minute", PLACES), 0.0);
        assertEquals(2103.526425, engine.convertAsDouble(AMOUNT, "cheval vapeur", "joule/second", PLACES), 0.0);
        assertEquals(1808.7071582, engine.convertAsDouble(AMOUNT, "cheval vapeur", "kilocalorie/hour", PLACES), 0.0);
        assertEquals(30.1451193, engine.convertAsDouble(AMOUNT, "cheval vapeur", "kilocalorie/minute", PLACES), 0.0);
        assertEquals(0.5024187, engine.convertAsDouble(AMOUNT, "cheval vapeur", "kilocalorie/second", PLACES), 0.0);
        assertEquals(772200.0, engine.convertAsDouble(AMOUNT, "cheval vapeur", "kilogram force meter/hour", PLACES), 0.0);
        assertEquals(12870.0, engine.convertAsDouble(AMOUNT, "cheval vapeur", "kilogram force meter/minute", PLACES), 0.0);
        assertEquals(214.5, engine.convertAsDouble(AMOUNT, "cheval vapeur", "kilogram force meter/second", PLACES), 0.0);
        assertEquals(772200.0, engine.convertAsDouble(AMOUNT, "cheval vapeur", "kilopond meter/hour", PLACES), 0.0);
        assertEquals(12870.0, engine.convertAsDouble(AMOUNT, "cheval vapeur", "kilopond meter/minute", PLACES), 0.0);
        assertEquals(214.5, engine.convertAsDouble(AMOUNT, "cheval vapeur", "kilopond meter/second", PLACES), 0.0);
        assertEquals(2.1035264, engine.convertAsDouble(AMOUNT, "cheval vapeur", "kilowatt", PLACES), 0.0);
        assertEquals(0.0021035, engine.convertAsDouble(AMOUNT, "cheval vapeur", "megawatt", PLACES), 0.0);
        assertEquals(2103526425.0, engine.convertAsDouble(AMOUNT, "cheval vapeur", "microwatt", PLACES), 0.0);
        assertEquals(0.0071775, engine.convertAsDouble(AMOUNT, "cheval vapeur", "million Btu/hour", PLACES), 0.0);
        assertEquals(2103526.425, engine.convertAsDouble(AMOUNT, "cheval vapeur", "milliwatt", PLACES), 0.0);
        assertEquals(2.103526425E12, engine.convertAsDouble(AMOUNT, "cheval vapeur", "nanowatt", PLACES), 0.0);
        assertEquals(7572695.13, engine.convertAsDouble(AMOUNT, "cheval vapeur", "newton meter/hour", PLACES), 0.0);
        assertEquals(126211.5855, engine.convertAsDouble(AMOUNT, "cheval vapeur", "newton meter/minute", PLACES), 0.0);
        assertEquals(2103.526425, engine.convertAsDouble(AMOUNT, "cheval vapeur", "newton meter/second", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "cheval vapeur", "petawatt", PLACES), 0.0);
        assertEquals(2.86, engine.convertAsDouble(AMOUNT, "cheval vapeur", "pferdestarke", PLACES), 0.0);
        assertEquals(2103526425000000.0, engine.convertAsDouble(AMOUNT, "cheval vapeur", "picowatt", PLACES), 0.0);
        assertEquals(2.145, engine.convertAsDouble(AMOUNT, "cheval vapeur", "poncelet", PLACES), 0.0);
        assertEquals(49917.4402962, engine.convertAsDouble(AMOUNT, "cheval vapeur", "pound square foot/cubic second", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "cheval vapeur", "terawatt", PLACES), 0.0);
        assertEquals(0.5981275, engine.convertAsDouble(AMOUNT, "cheval vapeur", "ton of refrigeration", PLACES), 0.0);
        assertEquals(2103.526425, engine.convertAsDouble(AMOUNT, "cheval vapeur", "watt", PLACES), 0.0);
        assertEquals(2.1035264249999998e+27, engine.convertAsDouble(AMOUNT, "cheval vapeur", "yoctowatt", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "cheval vapeur", "yottawatt", PLACES), 0.0);
        assertEquals(2.1035264250000002E24, engine.convertAsDouble(AMOUNT, "cheval vapeur", "zeptowatt", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "cheval vapeur", "zettawatt", PLACES), 0.0);
        assertEquals(3813019781999.9995, engine.convertAsDouble(AMOUNT, "clusec", "attowatt", PLACES), 0.0);
        assertEquals(1.3e-05, engine.convertAsDouble(AMOUNT, "clusec", "Btu/hour", PLACES), 0.0);
        assertEquals(2e-07, engine.convertAsDouble(AMOUNT, "clusec", "Btu/minute", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "clusec", "Btu/second", PLACES), 0.0);
        assertEquals(0.0032786, engine.convertAsDouble(AMOUNT, "clusec", "calorie/hour", PLACES), 0.0);
        assertEquals(5.46e-05, engine.convertAsDouble(AMOUNT, "clusec", "calorie/minute", PLACES), 0.0);
        assertEquals(9e-07, engine.convertAsDouble(AMOUNT, "clusec", "calorie/second", PLACES), 0.0);
        assertEquals(0.0003813, engine.convertAsDouble(AMOUNT, "clusec", "centiwatt", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "clusec", "cheval vapeur", PLACES), 0.0);
        assertEquals(2.86, engine.convertAsDouble(AMOUNT, "clusec", "clusec", PLACES), 0.0);
        assertEquals(3.81e-05, engine.convertAsDouble(AMOUNT, "clusec", "deciwatt", PLACES), 0.0);
        assertEquals(4e-07, engine.convertAsDouble(AMOUNT, "clusec", "dekawatt", PLACES), 0.0);
        assertEquals(137268.712152, engine.convertAsDouble(AMOUNT, "clusec", "dyne centimeter/hour", PLACES), 0.0);
        assertEquals(2287.8118692, engine.convertAsDouble(AMOUNT, "clusec", "dyne centimeter/minute", PLACES), 0.0);
        assertEquals(38.1301978, engine.convertAsDouble(AMOUNT, "clusec", "dyne centimeter/second", PLACES), 0.0);
        assertEquals(137268.712152, engine.convertAsDouble(AMOUNT, "clusec", "erg/hour", PLACES), 0.0);
        assertEquals(2287.8118692, engine.convertAsDouble(AMOUNT, "clusec", "erg/minute", PLACES), 0.0);
        assertEquals(38.1301978, engine.convertAsDouble(AMOUNT, "clusec", "erg/second", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "clusec", "exawatt", PLACES), 0.0);
        assertEquals(3813019781.9999995, engine.convertAsDouble(AMOUNT, "clusec", "femtowatt", PLACES), 0.0);
        assertEquals(0.0101244, engine.convertAsDouble(AMOUNT, "clusec", "foot pound force/hour", PLACES), 0.0);
        assertEquals(0.0001687, engine.convertAsDouble(AMOUNT, "clusec", "foot pound force/minute", PLACES), 0.0);
        assertEquals(2.8e-06, engine.convertAsDouble(AMOUNT, "clusec", "foot pound force/second", PLACES), 0.0);
        assertEquals(0.3257436, engine.convertAsDouble(AMOUNT, "clusec", "foot poundal/hour", PLACES), 0.0);
        assertEquals(0.0054291, engine.convertAsDouble(AMOUNT, "clusec", "foot poundal/minute", PLACES), 0.0);
        assertEquals(9.05e-05, engine.convertAsDouble(AMOUNT, "clusec", "foot poundal/second", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "clusec", "gigawatt", PLACES), 0.0);
        assertEquals(139.9751313, engine.convertAsDouble(AMOUNT, "clusec", "gram force centimeter/hour", PLACES), 0.0);
        assertEquals(2.3329189, engine.convertAsDouble(AMOUNT, "clusec", "gram force centimeter/minute", PLACES), 0.0);
        assertEquals(0.038882, engine.convertAsDouble(AMOUNT, "clusec", "gram force centimeter/second", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "clusec", "hectowatt", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "clusec", "horsepower", PLACES), 0.0);
        assertEquals(0.0051563, engine.convertAsDouble(AMOUNT, "clusec", "inch ounce force revolution/minute", PLACES), 0.0);
        assertEquals(0.0137269, engine.convertAsDouble(AMOUNT, "clusec", "joule/hour", PLACES), 0.0);
        assertEquals(0.0002288, engine.convertAsDouble(AMOUNT, "clusec", "joule/minute", PLACES), 0.0);
        assertEquals(3.8e-06, engine.convertAsDouble(AMOUNT, "clusec", "joule/second", PLACES), 0.0);
        assertEquals(3.3e-06, engine.convertAsDouble(AMOUNT, "clusec", "kilocalorie/hour", PLACES), 0.0);
        assertEquals(1e-07, engine.convertAsDouble(AMOUNT, "clusec", "kilocalorie/minute", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "clusec", "kilocalorie/second", PLACES), 0.0);
        assertEquals(0.0013998, engine.convertAsDouble(AMOUNT, "clusec", "kilogram force meter/hour", PLACES), 0.0);
        assertEquals(2.33e-05, engine.convertAsDouble(AMOUNT, "clusec", "kilogram force meter/minute", PLACES), 0.0);
        assertEquals(4e-07, engine.convertAsDouble(AMOUNT, "clusec", "kilogram force meter/second", PLACES), 0.0);
        assertEquals(0.0013998, engine.convertAsDouble(AMOUNT, "clusec", "kilopond meter/hour", PLACES), 0.0);
        assertEquals(2.33e-05, engine.convertAsDouble(AMOUNT, "clusec", "kilopond meter/minute", PLACES), 0.0);
        assertEquals(4e-07, engine.convertAsDouble(AMOUNT, "clusec", "kilopond meter/second", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "clusec", "kilowatt", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "clusec", "megawatt", PLACES), 0.0);
        assertEquals(3.8130198, engine.convertAsDouble(AMOUNT, "clusec", "microwatt", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "clusec", "million Btu/hour", PLACES), 0.0);
        assertEquals(0.003813, engine.convertAsDouble(AMOUNT, "clusec", "milliwatt", PLACES), 0.0);
        assertEquals(3813.019782, engine.convertAsDouble(AMOUNT, "clusec", "nanowatt", PLACES), 0.0);
        assertEquals(0.0137269, engine.convertAsDouble(AMOUNT, "clusec", "newton meter/hour", PLACES), 0.0);
        assertEquals(0.0002288, engine.convertAsDouble(AMOUNT, "clusec", "newton meter/minute", PLACES), 0.0);
        assertEquals(3.8e-06, engine.convertAsDouble(AMOUNT, "clusec", "newton meter/second", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "clusec", "petawatt", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "clusec", "pferdestarke", PLACES), 0.0);
        assertEquals(3813019.782, engine.convertAsDouble(AMOUNT, "clusec", "picowatt", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "clusec", "poncelet", PLACES), 0.0);
        assertEquals(9.05e-05, engine.convertAsDouble(AMOUNT, "clusec", "pound square foot/cubic second", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "clusec", "terawatt", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "clusec", "ton of refrigeration", PLACES), 0.0);
        assertEquals(3.8e-06, engine.convertAsDouble(AMOUNT, "clusec", "watt", PLACES), 0.0);
        assertEquals(3.813019782e+18, engine.convertAsDouble(AMOUNT, "clusec", "yoctowatt", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "clusec", "yottawatt", PLACES), 0.0);
        assertEquals(3813019782000000.0, engine.convertAsDouble(AMOUNT, "clusec", "zeptowatt", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "clusec", "zettawatt", PLACES), 0.0);
        assertEquals(2.8599999999999997e+17, engine.convertAsDouble(AMOUNT, "deciwatt", "attowatt", PLACES), 0.0);
        assertEquals(0.9758725, engine.convertAsDouble(AMOUNT, "deciwatt", "Btu/hour", PLACES), 0.0);
        assertEquals(0.0162645, engine.convertAsDouble(AMOUNT, "deciwatt", "Btu/minute", PLACES), 0.0);
        assertEquals(0.0002711, engine.convertAsDouble(AMOUNT, "deciwatt", "Btu/second", PLACES), 0.0);
        assertEquals(245.9157352, engine.convertAsDouble(AMOUNT, "deciwatt", "calorie/hour", PLACES), 0.0);
        assertEquals(4.0985956, engine.convertAsDouble(AMOUNT, "deciwatt", "calorie/minute", PLACES), 0.0);
        assertEquals(0.0683099, engine.convertAsDouble(AMOUNT, "deciwatt", "calorie/second", PLACES), 0.0);
        assertEquals(28.6, engine.convertAsDouble(AMOUNT, "deciwatt", "centiwatt", PLACES), 0.0);
        assertEquals(0.0003889, engine.convertAsDouble(AMOUNT, "deciwatt", "cheval vapeur", PLACES), 0.0);
        assertEquals(214517.6387128, engine.convertAsDouble(AMOUNT, "deciwatt", "clusec", PLACES), 0.0);
        assertEquals(2.86, engine.convertAsDouble(AMOUNT, "deciwatt", "deciwatt", PLACES), 0.0);
        assertEquals(0.0286, engine.convertAsDouble(AMOUNT, "deciwatt", "dekawatt", PLACES), 0.0);
        assertEquals(10296000000.000002, engine.convertAsDouble(AMOUNT, "deciwatt", "dyne centimeter/hour", PLACES), 0.0);
        assertEquals(171600000.0, engine.convertAsDouble(AMOUNT, "deciwatt", "dyne centimeter/minute", PLACES), 0.0);
        assertEquals(2860000.0, engine.convertAsDouble(AMOUNT, "deciwatt", "dyne centimeter/second", PLACES), 0.0);
        assertEquals(10296000000.000002, engine.convertAsDouble(AMOUNT, "deciwatt", "erg/hour", PLACES), 0.0);
        assertEquals(171600000.0, engine.convertAsDouble(AMOUNT, "deciwatt", "erg/minute", PLACES), 0.0);
        assertEquals(2860000.0, engine.convertAsDouble(AMOUNT, "deciwatt", "erg/second", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "deciwatt", "exawatt", PLACES), 0.0);
        assertEquals(285999999999999.94, engine.convertAsDouble(AMOUNT, "deciwatt", "femtowatt", PLACES), 0.0);
        assertEquals(759.394016, engine.convertAsDouble(AMOUNT, "deciwatt", "foot pound force/hour", PLACES), 0.0);
        assertEquals(12.6565669, engine.convertAsDouble(AMOUNT, "deciwatt", "foot pound force/minute", PLACES), 0.0);
        assertEquals(0.2109428, engine.convertAsDouble(AMOUNT, "deciwatt", "foot pound force/second", PLACES), 0.0);
        assertEquals(24432.7791266, engine.convertAsDouble(AMOUNT, "deciwatt", "foot poundal/hour", PLACES), 0.0);
        assertEquals(407.2129854, engine.convertAsDouble(AMOUNT, "deciwatt", "foot poundal/minute", PLACES), 0.0);
        assertEquals(6.7868831, engine.convertAsDouble(AMOUNT, "deciwatt", "foot poundal/second", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "deciwatt", "gigawatt", PLACES), 0.0);
        assertEquals(10498998.1288207, engine.convertAsDouble(AMOUNT, "deciwatt", "gram force centimeter/hour", PLACES), 0.0);
        assertEquals(174983.302147, engine.convertAsDouble(AMOUNT, "deciwatt", "gram force centimeter/minute", PLACES), 0.0);
        assertEquals(2916.3883691, engine.convertAsDouble(AMOUNT, "deciwatt", "gram force centimeter/second", PLACES), 0.0);
        assertEquals(0.00286, engine.convertAsDouble(AMOUNT, "deciwatt", "hectowatt", PLACES), 0.0);
        assertEquals(0.0003835, engine.convertAsDouble(AMOUNT, "deciwatt", "horsepower", PLACES), 0.0);
        assertEquals(386.756181, engine.convertAsDouble(AMOUNT, "deciwatt", "inch ounce force revolution/minute", PLACES), 0.0);
        assertEquals(1029.6, engine.convertAsDouble(AMOUNT, "deciwatt", "joule/hour", PLACES), 0.0);
        assertEquals(17.16, engine.convertAsDouble(AMOUNT, "deciwatt", "joule/minute", PLACES), 0.0);
        assertEquals(0.286, engine.convertAsDouble(AMOUNT, "deciwatt", "joule/second", PLACES), 0.0);
        assertEquals(0.2459157, engine.convertAsDouble(AMOUNT, "deciwatt", "kilocalorie/hour", PLACES), 0.0);
        assertEquals(0.0040986, engine.convertAsDouble(AMOUNT, "deciwatt", "kilocalorie/minute", PLACES), 0.0);
        assertEquals(6.83e-05, engine.convertAsDouble(AMOUNT, "deciwatt", "kilocalorie/second", PLACES), 0.0);
        assertEquals(104.9899813, engine.convertAsDouble(AMOUNT, "deciwatt", "kilogram force meter/hour", PLACES), 0.0);
        assertEquals(1.749833, engine.convertAsDouble(AMOUNT, "deciwatt", "kilogram force meter/minute", PLACES), 0.0);
        assertEquals(0.0291639, engine.convertAsDouble(AMOUNT, "deciwatt", "kilogram force meter/second", PLACES), 0.0);
        assertEquals(104.9899813, engine.convertAsDouble(AMOUNT, "deciwatt", "kilopond meter/hour", PLACES), 0.0);
        assertEquals(1.749833, engine.convertAsDouble(AMOUNT, "deciwatt", "kilopond meter/minute", PLACES), 0.0);
        assertEquals(0.0291639, engine.convertAsDouble(AMOUNT, "deciwatt", "kilopond meter/second", PLACES), 0.0);
        assertEquals(0.000286, engine.convertAsDouble(AMOUNT, "deciwatt", "kilowatt", PLACES), 0.0);
        assertEquals(3e-07, engine.convertAsDouble(AMOUNT, "deciwatt", "megawatt", PLACES), 0.0);
        assertEquals(286000.0, engine.convertAsDouble(AMOUNT, "deciwatt", "microwatt", PLACES), 0.0);
        assertEquals(1e-06, engine.convertAsDouble(AMOUNT, "deciwatt", "million Btu/hour", PLACES), 0.0);
        assertEquals(286.0, engine.convertAsDouble(AMOUNT, "deciwatt", "milliwatt", PLACES), 0.0);
        assertEquals(285999999.9999999, engine.convertAsDouble(AMOUNT, "deciwatt", "nanowatt", PLACES), 0.0);
        assertEquals(1029.6, engine.convertAsDouble(AMOUNT, "deciwatt", "newton meter/hour", PLACES), 0.0);
        assertEquals(17.16, engine.convertAsDouble(AMOUNT, "deciwatt", "newton meter/minute", PLACES), 0.0);
        assertEquals(0.286, engine.convertAsDouble(AMOUNT, "deciwatt", "newton meter/second", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "deciwatt", "petawatt", PLACES), 0.0);
        assertEquals(0.0003889, engine.convertAsDouble(AMOUNT, "deciwatt", "pferdestarke", PLACES), 0.0);
        assertEquals(286000000000.0, engine.convertAsDouble(AMOUNT, "deciwatt", "picowatt", PLACES), 0.0);
        assertEquals(0.0002916, engine.convertAsDouble(AMOUNT, "deciwatt", "poncelet", PLACES), 0.0);
        assertEquals(6.7868831, engine.convertAsDouble(AMOUNT, "deciwatt", "pound square foot/cubic second", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "deciwatt", "terawatt", PLACES), 0.0);
        assertEquals(8.13e-05, engine.convertAsDouble(AMOUNT, "deciwatt", "ton of refrigeration", PLACES), 0.0);
        assertEquals(0.286, engine.convertAsDouble(AMOUNT, "deciwatt", "watt", PLACES), 0.0);
        assertEquals(2.86E23, engine.convertAsDouble(AMOUNT, "deciwatt", "yoctowatt", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "deciwatt", "yottawatt", PLACES), 0.0);
        assertEquals(2.86e+20, engine.convertAsDouble(AMOUNT, "deciwatt", "zeptowatt", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "deciwatt", "zettawatt", PLACES), 0.0);
        assertEquals(2.8599999999999996e+19, engine.convertAsDouble(AMOUNT, "dekawatt", "attowatt", PLACES), 0.0);
        assertEquals(97.5872508, engine.convertAsDouble(AMOUNT, "dekawatt", "Btu/hour", PLACES), 0.0);
        assertEquals(1.6264542, engine.convertAsDouble(AMOUNT, "dekawatt", "Btu/minute", PLACES), 0.0);
        assertEquals(0.0271076, engine.convertAsDouble(AMOUNT, "dekawatt", "Btu/second", PLACES), 0.0);
        assertEquals(24591.5735168, engine.convertAsDouble(AMOUNT, "dekawatt", "calorie/hour", PLACES), 0.0);
        assertEquals(409.8595586, engine.convertAsDouble(AMOUNT, "dekawatt", "calorie/minute", PLACES), 0.0);
        assertEquals(6.8309926, engine.convertAsDouble(AMOUNT, "dekawatt", "calorie/second", PLACES), 0.0);
        assertEquals(2860.0, engine.convertAsDouble(AMOUNT, "dekawatt", "centiwatt", PLACES), 0.0);
        assertEquals(0.0388852, engine.convertAsDouble(AMOUNT, "dekawatt", "cheval vapeur", PLACES), 0.0);
        assertEquals(21451763.8712843, engine.convertAsDouble(AMOUNT, "dekawatt", "clusec", PLACES), 0.0);
        assertEquals(286.0, engine.convertAsDouble(AMOUNT, "dekawatt", "deciwatt", PLACES), 0.0);
        assertEquals(2.86, engine.convertAsDouble(AMOUNT, "dekawatt", "dekawatt", PLACES), 0.0);
        assertEquals(1029600000000.0001, engine.convertAsDouble(AMOUNT, "dekawatt", "dyne centimeter/hour", PLACES), 0.0);
        assertEquals(17160000000.0, engine.convertAsDouble(AMOUNT, "dekawatt", "dyne centimeter/minute", PLACES), 0.0);
        assertEquals(286000000.0, engine.convertAsDouble(AMOUNT, "dekawatt", "dyne centimeter/second", PLACES), 0.0);
        assertEquals(1029600000000.0001, engine.convertAsDouble(AMOUNT, "dekawatt", "erg/hour", PLACES), 0.0);
        assertEquals(17160000000.0, engine.convertAsDouble(AMOUNT, "dekawatt", "erg/minute", PLACES), 0.0);
        assertEquals(286000000.0, engine.convertAsDouble(AMOUNT, "dekawatt", "erg/second", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "dekawatt", "exawatt", PLACES), 0.0);
        assertEquals(2.8599999999999996e+16, engine.convertAsDouble(AMOUNT, "dekawatt", "femtowatt", PLACES), 0.0);
        assertEquals(75939.4015966, engine.convertAsDouble(AMOUNT, "dekawatt", "foot pound force/hour", PLACES), 0.0);
        assertEquals(1265.6566933, engine.convertAsDouble(AMOUNT, "dekawatt", "foot pound force/minute", PLACES), 0.0);
        assertEquals(21.0942782, engine.convertAsDouble(AMOUNT, "dekawatt", "foot pound force/second", PLACES), 0.0);
        assertEquals(2443277.9126585, engine.convertAsDouble(AMOUNT, "dekawatt", "foot poundal/hour", PLACES), 0.0);
        assertEquals(40721.2985443, engine.convertAsDouble(AMOUNT, "dekawatt", "foot poundal/minute", PLACES), 0.0);
        assertEquals(678.6883091, engine.convertAsDouble(AMOUNT, "dekawatt", "foot poundal/second", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "dekawatt", "gigawatt", PLACES), 0.0);
        assertEquals(1049899812.8820748, engine.convertAsDouble(AMOUNT, "dekawatt", "gram force centimeter/hour", PLACES), 0.0);
        assertEquals(1.74983302147012E7, engine.convertAsDouble(AMOUNT, "dekawatt", "gram force centimeter/minute", PLACES), 0.0);
        assertEquals(291638.8369117, engine.convertAsDouble(AMOUNT, "dekawatt", "gram force centimeter/second", PLACES), 0.0);
        assertEquals(0.286, engine.convertAsDouble(AMOUNT, "dekawatt", "hectowatt", PLACES), 0.0);
        assertEquals(0.0383532, engine.convertAsDouble(AMOUNT, "dekawatt", "horsepower", PLACES), 0.0);
        assertEquals(38675.6180979, engine.convertAsDouble(AMOUNT, "dekawatt", "inch ounce force revolution/minute", PLACES), 0.0);
        assertEquals(102960.0, engine.convertAsDouble(AMOUNT, "dekawatt", "joule/hour", PLACES), 0.0);
        assertEquals(1716.0, engine.convertAsDouble(AMOUNT, "dekawatt", "joule/minute", PLACES), 0.0);
        assertEquals(28.6, engine.convertAsDouble(AMOUNT, "dekawatt", "joule/second", PLACES), 0.0);
        assertEquals(24.5915735, engine.convertAsDouble(AMOUNT, "dekawatt", "kilocalorie/hour", PLACES), 0.0);
        assertEquals(0.4098596, engine.convertAsDouble(AMOUNT, "dekawatt", "kilocalorie/minute", PLACES), 0.0);
        assertEquals(0.006831, engine.convertAsDouble(AMOUNT, "dekawatt", "kilocalorie/second", PLACES), 0.0);
        assertEquals(10498.9981288, engine.convertAsDouble(AMOUNT, "dekawatt", "kilogram force meter/hour", PLACES), 0.0);
        assertEquals(174.9833021, engine.convertAsDouble(AMOUNT, "dekawatt", "kilogram force meter/minute", PLACES), 0.0);
        assertEquals(2.9163884, engine.convertAsDouble(AMOUNT, "dekawatt", "kilogram force meter/second", PLACES), 0.0);
        assertEquals(10498.9981288, engine.convertAsDouble(AMOUNT, "dekawatt", "kilopond meter/hour", PLACES), 0.0);
        assertEquals(174.9833021, engine.convertAsDouble(AMOUNT, "dekawatt", "kilopond meter/minute", PLACES), 0.0);
        assertEquals(2.9163884, engine.convertAsDouble(AMOUNT, "dekawatt", "kilopond meter/second", PLACES), 0.0);
        assertEquals(0.0286, engine.convertAsDouble(AMOUNT, "dekawatt", "kilowatt", PLACES), 0.0);
        assertEquals(2.86e-05, engine.convertAsDouble(AMOUNT, "dekawatt", "megawatt", PLACES), 0.0);
        assertEquals(28600000.0, engine.convertAsDouble(AMOUNT, "dekawatt", "microwatt", PLACES), 0.0);
        assertEquals(9.76e-05, engine.convertAsDouble(AMOUNT, "dekawatt", "million Btu/hour", PLACES), 0.0);
        assertEquals(28600.0, engine.convertAsDouble(AMOUNT, "dekawatt", "milliwatt", PLACES), 0.0);
        assertEquals(28599999999.999996, engine.convertAsDouble(AMOUNT, "dekawatt", "nanowatt", PLACES), 0.0);
        assertEquals(102960.0, engine.convertAsDouble(AMOUNT, "dekawatt", "newton meter/hour", PLACES), 0.0);
        assertEquals(1716.0, engine.convertAsDouble(AMOUNT, "dekawatt", "newton meter/minute", PLACES), 0.0);
        assertEquals(28.6, engine.convertAsDouble(AMOUNT, "dekawatt", "newton meter/second", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "dekawatt", "petawatt", PLACES), 0.0);
        assertEquals(0.0388852, engine.convertAsDouble(AMOUNT, "dekawatt", "pferdestarke", PLACES), 0.0);
        assertEquals(28600000000000.0, engine.convertAsDouble(AMOUNT, "dekawatt", "picowatt", PLACES), 0.0);
        assertEquals(0.0291639, engine.convertAsDouble(AMOUNT, "dekawatt", "poncelet", PLACES), 0.0);
        assertEquals(678.6883091, engine.convertAsDouble(AMOUNT, "dekawatt", "pound square foot/cubic second", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "dekawatt", "terawatt", PLACES), 0.0);
        assertEquals(0.0081323, engine.convertAsDouble(AMOUNT, "dekawatt", "ton of refrigeration", PLACES), 0.0);
        assertEquals(28.6, engine.convertAsDouble(AMOUNT, "dekawatt", "watt", PLACES), 0.0);
        assertEquals(2.8600000000000003E25, engine.convertAsDouble(AMOUNT, "dekawatt", "yoctowatt", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "dekawatt", "yottawatt", PLACES), 0.0);
        assertEquals(2.86e+22, engine.convertAsDouble(AMOUNT, "dekawatt", "zeptowatt", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "dekawatt", "zettawatt", PLACES), 0.0);
        assertEquals(79444444.4444444, engine.convertAsDouble(AMOUNT, "dyne centimeter/hour", "attowatt", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "dyne centimeter/hour", "Btu/hour", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "dyne centimeter/hour", "Btu/minute", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "dyne centimeter/hour", "Btu/second", PLACES), 0.0);
        assertEquals(1e-07, engine.convertAsDouble(AMOUNT, "dyne centimeter/hour", "calorie/hour", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "dyne centimeter/hour", "calorie/minute", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "dyne centimeter/hour", "calorie/second", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "dyne centimeter/hour", "centiwatt", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "dyne centimeter/hour", "cheval vapeur", PLACES), 0.0);
        assertEquals(5.96e-05, engine.convertAsDouble(AMOUNT, "dyne centimeter/hour", "clusec", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "dyne centimeter/hour", "deciwatt", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "dyne centimeter/hour", "dekawatt", PLACES), 0.0);
        assertEquals(2.86, engine.convertAsDouble(AMOUNT, "dyne centimeter/hour", "dyne centimeter/hour", PLACES), 0.0);
        assertEquals(0.0476667, engine.convertAsDouble(AMOUNT, "dyne centimeter/hour", "dyne centimeter/minute", PLACES), 0.0);
        assertEquals(0.0007944, engine.convertAsDouble(AMOUNT, "dyne centimeter/hour", "dyne centimeter/second", PLACES), 0.0);
        assertEquals(2.86, engine.convertAsDouble(AMOUNT, "dyne centimeter/hour", "erg/hour", PLACES), 0.0);
        assertEquals(0.0476667, engine.convertAsDouble(AMOUNT, "dyne centimeter/hour", "erg/minute", PLACES), 0.0);
        assertEquals(0.0007944, engine.convertAsDouble(AMOUNT, "dyne centimeter/hour", "erg/second", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "dyne centimeter/hour", "exawatt", PLACES), 0.0);
        assertEquals(79444.4444444, engine.convertAsDouble(AMOUNT, "dyne centimeter/hour", "femtowatt", PLACES), 0.0);
        assertEquals(2e-07, engine.convertAsDouble(AMOUNT, "dyne centimeter/hour", "foot pound force/hour", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "dyne centimeter/hour", "foot pound force/minute", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "dyne centimeter/hour", "foot pound force/second", PLACES), 0.0);
        assertEquals(6.8e-06, engine.convertAsDouble(AMOUNT, "dyne centimeter/hour", "foot poundal/hour", PLACES), 0.0);
        assertEquals(1e-07, engine.convertAsDouble(AMOUNT, "dyne centimeter/hour", "foot poundal/minute", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "dyne centimeter/hour", "foot poundal/second", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "dyne centimeter/hour", "gigawatt", PLACES), 0.0);
        assertEquals(0.0029164, engine.convertAsDouble(AMOUNT, "dyne centimeter/hour", "gram force centimeter/hour", PLACES), 0.0);
        assertEquals(4.86e-05, engine.convertAsDouble(AMOUNT, "dyne centimeter/hour", "gram force centimeter/minute", PLACES), 0.0);
        assertEquals(8e-07, engine.convertAsDouble(AMOUNT, "dyne centimeter/hour", "gram force centimeter/second", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "dyne centimeter/hour", "hectowatt", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "dyne centimeter/hour", "horsepower", PLACES), 0.0);
        assertEquals(1e-07, engine.convertAsDouble(AMOUNT, "dyne centimeter/hour", "inch ounce force revolution/minute", PLACES), 0.0);
        assertEquals(3e-07, engine.convertAsDouble(AMOUNT, "dyne centimeter/hour", "joule/hour", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "dyne centimeter/hour", "joule/minute", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "dyne centimeter/hour", "joule/second", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "dyne centimeter/hour", "kilocalorie/hour", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "dyne centimeter/hour", "kilocalorie/minute", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "dyne centimeter/hour", "kilocalorie/second", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "dyne centimeter/hour", "kilogram force meter/hour", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "dyne centimeter/hour", "kilogram force meter/minute", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "dyne centimeter/hour", "kilogram force meter/second", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "dyne centimeter/hour", "kilopond meter/hour", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "dyne centimeter/hour", "kilopond meter/minute", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "dyne centimeter/hour", "kilopond meter/second", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "dyne centimeter/hour", "kilowatt", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "dyne centimeter/hour", "megawatt", PLACES), 0.0);
        assertEquals(7.94e-05, engine.convertAsDouble(AMOUNT, "dyne centimeter/hour", "microwatt", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "dyne centimeter/hour", "million Btu/hour", PLACES), 0.0);
        assertEquals(1e-07, engine.convertAsDouble(AMOUNT, "dyne centimeter/hour", "milliwatt", PLACES), 0.0);
        assertEquals(0.0794444, engine.convertAsDouble(AMOUNT, "dyne centimeter/hour", "nanowatt", PLACES), 0.0);
        assertEquals(3e-07, engine.convertAsDouble(AMOUNT, "dyne centimeter/hour", "newton meter/hour", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "dyne centimeter/hour", "newton meter/minute", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "dyne centimeter/hour", "newton meter/second", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "dyne centimeter/hour", "petawatt", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "dyne centimeter/hour", "pferdestarke", PLACES), 0.0);
        assertEquals(79.4444444, engine.convertAsDouble(AMOUNT, "dyne centimeter/hour", "picowatt", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "dyne centimeter/hour", "poncelet", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "dyne centimeter/hour", "pound square foot/cubic second", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "dyne centimeter/hour", "terawatt", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "dyne centimeter/hour", "ton of refrigeration", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "dyne centimeter/hour", "watt", PLACES), 0.0);
        assertEquals(7.944444444444442E13, engine.convertAsDouble(AMOUNT, "dyne centimeter/hour", "yoctowatt", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "dyne centimeter/hour", "yottawatt", PLACES), 0.0);
        assertEquals(7.944444444444444E10, engine.convertAsDouble(AMOUNT, "dyne centimeter/hour", "zeptowatt", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "dyne centimeter/hour", "zettawatt", PLACES), 0.0);
        assertEquals(4.766666666666666E9, engine.convertAsDouble(AMOUNT, "dyne centimeter/minute", "attowatt", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "dyne centimeter/minute", "Btu/hour", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "dyne centimeter/minute", "Btu/minute", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "dyne centimeter/minute", "Btu/second", PLACES), 0.0);
        assertEquals(4.1e-06, engine.convertAsDouble(AMOUNT, "dyne centimeter/minute", "calorie/hour", PLACES), 0.0);
        assertEquals(1e-07, engine.convertAsDouble(AMOUNT, "dyne centimeter/minute", "calorie/minute", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "dyne centimeter/minute", "calorie/second", PLACES), 0.0);
        assertEquals(5e-07, engine.convertAsDouble(AMOUNT, "dyne centimeter/minute", "centiwatt", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "dyne centimeter/minute", "cheval vapeur", PLACES), 0.0);
        assertEquals(0.0035753, engine.convertAsDouble(AMOUNT, "dyne centimeter/minute", "clusec", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "dyne centimeter/minute", "deciwatt", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "dyne centimeter/minute", "dekawatt", PLACES), 0.0);
        assertEquals(171.6, engine.convertAsDouble(AMOUNT, "dyne centimeter/minute", "dyne centimeter/hour", PLACES), 0.0);
        assertEquals(2.86, engine.convertAsDouble(AMOUNT, "dyne centimeter/minute", "dyne centimeter/minute", PLACES), 0.0);
        assertEquals(0.0476667, engine.convertAsDouble(AMOUNT, "dyne centimeter/minute", "dyne centimeter/second", PLACES), 0.0);
        assertEquals(171.6, engine.convertAsDouble(AMOUNT, "dyne centimeter/minute", "erg/hour", PLACES), 0.0);
        assertEquals(2.86, engine.convertAsDouble(AMOUNT, "dyne centimeter/minute", "erg/minute", PLACES), 0.0);
        assertEquals(0.0476667, engine.convertAsDouble(AMOUNT, "dyne centimeter/minute", "erg/second", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "dyne centimeter/minute", "exawatt", PLACES), 0.0);
        assertEquals(4766666.6666667, engine.convertAsDouble(AMOUNT, "dyne centimeter/minute", "femtowatt", PLACES), 0.0);
        assertEquals(1.27e-05, engine.convertAsDouble(AMOUNT, "dyne centimeter/minute", "foot pound force/hour", PLACES), 0.0);
        assertEquals(2e-07, engine.convertAsDouble(AMOUNT, "dyne centimeter/minute", "foot pound force/minute", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "dyne centimeter/minute", "foot pound force/second", PLACES), 0.0);
        assertEquals(0.0004072, engine.convertAsDouble(AMOUNT, "dyne centimeter/minute", "foot poundal/hour", PLACES), 0.0);
        assertEquals(6.8e-06, engine.convertAsDouble(AMOUNT, "dyne centimeter/minute", "foot poundal/minute", PLACES), 0.0);
        assertEquals(1e-07, engine.convertAsDouble(AMOUNT, "dyne centimeter/minute", "foot poundal/second", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "dyne centimeter/minute", "gigawatt", PLACES), 0.0);
        assertEquals(0.1749833, engine.convertAsDouble(AMOUNT, "dyne centimeter/minute", "gram force centimeter/hour", PLACES), 0.0);
        assertEquals(0.0029164, engine.convertAsDouble(AMOUNT, "dyne centimeter/minute", "gram force centimeter/minute", PLACES), 0.0);
        assertEquals(4.86e-05, engine.convertAsDouble(AMOUNT, "dyne centimeter/minute", "gram force centimeter/second", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "dyne centimeter/minute", "hectowatt", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "dyne centimeter/minute", "horsepower", PLACES), 0.0);
        assertEquals(6.4e-06, engine.convertAsDouble(AMOUNT, "dyne centimeter/minute", "inch ounce force revolution/minute", PLACES), 0.0);
        assertEquals(1.72e-05, engine.convertAsDouble(AMOUNT, "dyne centimeter/minute", "joule/hour", PLACES), 0.0);
        assertEquals(3e-07, engine.convertAsDouble(AMOUNT, "dyne centimeter/minute", "joule/minute", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "dyne centimeter/minute", "joule/second", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "dyne centimeter/minute", "kilocalorie/hour", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "dyne centimeter/minute", "kilocalorie/minute", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "dyne centimeter/minute", "kilocalorie/second", PLACES), 0.0);
        assertEquals(1.7e-06, engine.convertAsDouble(AMOUNT, "dyne centimeter/minute", "kilogram force meter/hour", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "dyne centimeter/minute", "kilogram force meter/minute", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "dyne centimeter/minute", "kilogram force meter/second", PLACES), 0.0);
        assertEquals(1.7e-06, engine.convertAsDouble(AMOUNT, "dyne centimeter/minute", "kilopond meter/hour", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "dyne centimeter/minute", "kilopond meter/minute", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "dyne centimeter/minute", "kilopond meter/second", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "dyne centimeter/minute", "kilowatt", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "dyne centimeter/minute", "megawatt", PLACES), 0.0);
        assertEquals(0.0047667, engine.convertAsDouble(AMOUNT, "dyne centimeter/minute", "microwatt", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "dyne centimeter/minute", "million Btu/hour", PLACES), 0.0);
        assertEquals(4.8e-06, engine.convertAsDouble(AMOUNT, "dyne centimeter/minute", "milliwatt", PLACES), 0.0);
        assertEquals(4.7666667, engine.convertAsDouble(AMOUNT, "dyne centimeter/minute", "nanowatt", PLACES), 0.0);
        assertEquals(1.72e-05, engine.convertAsDouble(AMOUNT, "dyne centimeter/minute", "newton meter/hour", PLACES), 0.0);
        assertEquals(3e-07, engine.convertAsDouble(AMOUNT, "dyne centimeter/minute", "newton meter/minute", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "dyne centimeter/minute", "newton meter/second", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "dyne centimeter/minute", "petawatt", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "dyne centimeter/minute", "pferdestarke", PLACES), 0.0);
        assertEquals(4766.6666667, engine.convertAsDouble(AMOUNT, "dyne centimeter/minute", "picowatt", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "dyne centimeter/minute", "poncelet", PLACES), 0.0);
        assertEquals(1e-07, engine.convertAsDouble(AMOUNT, "dyne centimeter/minute", "pound square foot/cubic second", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "dyne centimeter/minute", "terawatt", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "dyne centimeter/minute", "ton of refrigeration", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "dyne centimeter/minute", "watt", PLACES), 0.0);
        assertEquals(4.766666666666667E15, engine.convertAsDouble(AMOUNT, "dyne centimeter/minute", "yoctowatt", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "dyne centimeter/minute", "yottawatt", PLACES), 0.0);
        assertEquals(4.766666666666667E12, engine.convertAsDouble(AMOUNT, "dyne centimeter/minute", "zeptowatt", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "dyne centimeter/minute", "zettawatt", PLACES), 0.0);
        assertEquals(2.86E11, engine.convertAsDouble(AMOUNT, "dyne centimeter/second", "attowatt", PLACES), 0.0);
        assertEquals(1e-06, engine.convertAsDouble(AMOUNT, "dyne centimeter/second", "Btu/hour", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "dyne centimeter/second", "Btu/minute", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "dyne centimeter/second", "Btu/second", PLACES), 0.0);
        assertEquals(0.0002459, engine.convertAsDouble(AMOUNT, "dyne centimeter/second", "calorie/hour", PLACES), 0.0);
        assertEquals(4.1e-06, engine.convertAsDouble(AMOUNT, "dyne centimeter/second", "calorie/minute", PLACES), 0.0);
        assertEquals(1e-07, engine.convertAsDouble(AMOUNT, "dyne centimeter/second", "calorie/second", PLACES), 0.0);
        assertEquals(2.86e-05, engine.convertAsDouble(AMOUNT, "dyne centimeter/second", "centiwatt", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "dyne centimeter/second", "cheval vapeur", PLACES), 0.0);
        assertEquals(0.2145176, engine.convertAsDouble(AMOUNT, "dyne centimeter/second", "clusec", PLACES), 0.0);
        assertEquals(2.9e-06, engine.convertAsDouble(AMOUNT, "dyne centimeter/second", "deciwatt", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "dyne centimeter/second", "dekawatt", PLACES), 0.0);
        assertEquals(10296.0, engine.convertAsDouble(AMOUNT, "dyne centimeter/second", "dyne centimeter/hour", PLACES), 0.0);
        assertEquals(171.6, engine.convertAsDouble(AMOUNT, "dyne centimeter/second", "dyne centimeter/minute", PLACES), 0.0);
        assertEquals(2.86, engine.convertAsDouble(AMOUNT, "dyne centimeter/second", "dyne centimeter/second", PLACES), 0.0);
        assertEquals(10296.0, engine.convertAsDouble(AMOUNT, "dyne centimeter/second", "erg/hour", PLACES), 0.0);
        assertEquals(171.6, engine.convertAsDouble(AMOUNT, "dyne centimeter/second", "erg/minute", PLACES), 0.0);
        assertEquals(2.86, engine.convertAsDouble(AMOUNT, "dyne centimeter/second", "erg/second", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "dyne centimeter/second", "exawatt", PLACES), 0.0);
        assertEquals(2.86E8, engine.convertAsDouble(AMOUNT, "dyne centimeter/second", "femtowatt", PLACES), 0.0);
        assertEquals(0.0007594, engine.convertAsDouble(AMOUNT, "dyne centimeter/second", "foot pound force/hour", PLACES), 0.0);
        assertEquals(1.27e-05, engine.convertAsDouble(AMOUNT, "dyne centimeter/second", "foot pound force/minute", PLACES), 0.0);
        assertEquals(2e-07, engine.convertAsDouble(AMOUNT, "dyne centimeter/second", "foot pound force/second", PLACES), 0.0);
        assertEquals(0.0244328, engine.convertAsDouble(AMOUNT, "dyne centimeter/second", "foot poundal/hour", PLACES), 0.0);
        assertEquals(0.0004072, engine.convertAsDouble(AMOUNT, "dyne centimeter/second", "foot poundal/minute", PLACES), 0.0);
        assertEquals(6.8e-06, engine.convertAsDouble(AMOUNT, "dyne centimeter/second", "foot poundal/second", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "dyne centimeter/second", "gigawatt", PLACES), 0.0);
        assertEquals(10.4989981, engine.convertAsDouble(AMOUNT, "dyne centimeter/second", "gram force centimeter/hour", PLACES), 0.0);
        assertEquals(0.1749833, engine.convertAsDouble(AMOUNT, "dyne centimeter/second", "gram force centimeter/minute", PLACES), 0.0);
        assertEquals(0.0029164, engine.convertAsDouble(AMOUNT, "dyne centimeter/second", "gram force centimeter/second", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "dyne centimeter/second", "hectowatt", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "dyne centimeter/second", "horsepower", PLACES), 0.0);
        assertEquals(0.0003868, engine.convertAsDouble(AMOUNT, "dyne centimeter/second", "inch ounce force revolution/minute", PLACES), 0.0);
        assertEquals(0.0010296, engine.convertAsDouble(AMOUNT, "dyne centimeter/second", "joule/hour", PLACES), 0.0);
        assertEquals(1.72e-05, engine.convertAsDouble(AMOUNT, "dyne centimeter/second", "joule/minute", PLACES), 0.0);
        assertEquals(3e-07, engine.convertAsDouble(AMOUNT, "dyne centimeter/second", "joule/second", PLACES), 0.0);
        assertEquals(2e-07, engine.convertAsDouble(AMOUNT, "dyne centimeter/second", "kilocalorie/hour", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "dyne centimeter/second", "kilocalorie/minute", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "dyne centimeter/second", "kilocalorie/second", PLACES), 0.0);
        assertEquals(0.000105, engine.convertAsDouble(AMOUNT, "dyne centimeter/second", "kilogram force meter/hour", PLACES), 0.0);
        assertEquals(1.7e-06, engine.convertAsDouble(AMOUNT, "dyne centimeter/second", "kilogram force meter/minute", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "dyne centimeter/second", "kilogram force meter/second", PLACES), 0.0);
        assertEquals(0.000105, engine.convertAsDouble(AMOUNT, "dyne centimeter/second", "kilopond meter/hour", PLACES), 0.0);
        assertEquals(1.7e-06, engine.convertAsDouble(AMOUNT, "dyne centimeter/second", "kilopond meter/minute", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "dyne centimeter/second", "kilopond meter/second", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "dyne centimeter/second", "kilowatt", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "dyne centimeter/second", "megawatt", PLACES), 0.0);
        assertEquals(0.286, engine.convertAsDouble(AMOUNT, "dyne centimeter/second", "microwatt", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "dyne centimeter/second", "million Btu/hour", PLACES), 0.0);
        assertEquals(0.000286, engine.convertAsDouble(AMOUNT, "dyne centimeter/second", "milliwatt", PLACES), 0.0);
        assertEquals(286.0, engine.convertAsDouble(AMOUNT, "dyne centimeter/second", "nanowatt", PLACES), 0.0);
        assertEquals(0.0010296, engine.convertAsDouble(AMOUNT, "dyne centimeter/second", "newton meter/hour", PLACES), 0.0);
        assertEquals(1.72e-05, engine.convertAsDouble(AMOUNT, "dyne centimeter/second", "newton meter/minute", PLACES), 0.0);
        assertEquals(3e-07, engine.convertAsDouble(AMOUNT, "dyne centimeter/second", "newton meter/second", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "dyne centimeter/second", "petawatt", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "dyne centimeter/second", "pferdestarke", PLACES), 0.0);
        assertEquals(286000.0, engine.convertAsDouble(AMOUNT, "dyne centimeter/second", "picowatt", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "dyne centimeter/second", "poncelet", PLACES), 0.0);
        assertEquals(6.8e-06, engine.convertAsDouble(AMOUNT, "dyne centimeter/second", "pound square foot/cubic second", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "dyne centimeter/second", "terawatt", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "dyne centimeter/second", "ton of refrigeration", PLACES), 0.0);
        assertEquals(3e-07, engine.convertAsDouble(AMOUNT, "dyne centimeter/second", "watt", PLACES), 0.0);
        assertEquals(2.86E17, engine.convertAsDouble(AMOUNT, "dyne centimeter/second", "yoctowatt", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "dyne centimeter/second", "yottawatt", PLACES), 0.0);
        assertEquals(286000000000000.0, engine.convertAsDouble(AMOUNT, "dyne centimeter/second", "zeptowatt", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "dyne centimeter/second", "zettawatt", PLACES), 0.0);
        assertEquals(79444444.4444444, engine.convertAsDouble(AMOUNT, "erg/hour", "attowatt", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "erg/hour", "Btu/hour", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "erg/hour", "Btu/minute", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "erg/hour", "Btu/second", PLACES), 0.0);
        assertEquals(1e-07, engine.convertAsDouble(AMOUNT, "erg/hour", "calorie/hour", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "erg/hour", "calorie/minute", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "erg/hour", "calorie/second", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "erg/hour", "centiwatt", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "erg/hour", "cheval vapeur", PLACES), 0.0);
        assertEquals(5.96e-05, engine.convertAsDouble(AMOUNT, "erg/hour", "clusec", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "erg/hour", "deciwatt", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "erg/hour", "dekawatt", PLACES), 0.0);
        assertEquals(2.86, engine.convertAsDouble(AMOUNT, "erg/hour", "dyne centimeter/hour", PLACES), 0.0);
        assertEquals(0.0476667, engine.convertAsDouble(AMOUNT, "erg/hour", "dyne centimeter/minute", PLACES), 0.0);
        assertEquals(0.0007944, engine.convertAsDouble(AMOUNT, "erg/hour", "dyne centimeter/second", PLACES), 0.0);
        assertEquals(2.86, engine.convertAsDouble(AMOUNT, "erg/hour", "erg/hour", PLACES), 0.0);
        assertEquals(0.0476667, engine.convertAsDouble(AMOUNT, "erg/hour", "erg/minute", PLACES), 0.0);
        assertEquals(0.0007944, engine.convertAsDouble(AMOUNT, "erg/hour", "erg/second", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "erg/hour", "exawatt", PLACES), 0.0);
        assertEquals(79444.4444444, engine.convertAsDouble(AMOUNT, "erg/hour", "femtowatt", PLACES), 0.0);
        assertEquals(2e-07, engine.convertAsDouble(AMOUNT, "erg/hour", "foot pound force/hour", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "erg/hour", "foot pound force/minute", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "erg/hour", "foot pound force/second", PLACES), 0.0);
        assertEquals(6.8e-06, engine.convertAsDouble(AMOUNT, "erg/hour", "foot poundal/hour", PLACES), 0.0);
        assertEquals(1e-07, engine.convertAsDouble(AMOUNT, "erg/hour", "foot poundal/minute", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "erg/hour", "foot poundal/second", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "erg/hour", "gigawatt", PLACES), 0.0);
        assertEquals(0.0029164, engine.convertAsDouble(AMOUNT, "erg/hour", "gram force centimeter/hour", PLACES), 0.0);
        assertEquals(4.86e-05, engine.convertAsDouble(AMOUNT, "erg/hour", "gram force centimeter/minute", PLACES), 0.0);
        assertEquals(8e-07, engine.convertAsDouble(AMOUNT, "erg/hour", "gram force centimeter/second", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "erg/hour", "hectowatt", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "erg/hour", "horsepower", PLACES), 0.0);
        assertEquals(1e-07, engine.convertAsDouble(AMOUNT, "erg/hour", "inch ounce force revolution/minute", PLACES), 0.0);
        assertEquals(3e-07, engine.convertAsDouble(AMOUNT, "erg/hour", "joule/hour", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "erg/hour", "joule/minute", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "erg/hour", "joule/second", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "erg/hour", "kilocalorie/hour", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "erg/hour", "kilocalorie/minute", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "erg/hour", "kilocalorie/second", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "erg/hour", "kilogram force meter/hour", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "erg/hour", "kilogram force meter/minute", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "erg/hour", "kilogram force meter/second", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "erg/hour", "kilopond meter/hour", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "erg/hour", "kilopond meter/minute", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "erg/hour", "kilopond meter/second", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "erg/hour", "kilowatt", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "erg/hour", "megawatt", PLACES), 0.0);
        assertEquals(7.94e-05, engine.convertAsDouble(AMOUNT, "erg/hour", "microwatt", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "erg/hour", "million Btu/hour", PLACES), 0.0);
        assertEquals(1e-07, engine.convertAsDouble(AMOUNT, "erg/hour", "milliwatt", PLACES), 0.0);
        assertEquals(0.0794444, engine.convertAsDouble(AMOUNT, "erg/hour", "nanowatt", PLACES), 0.0);
        assertEquals(3e-07, engine.convertAsDouble(AMOUNT, "erg/hour", "newton meter/hour", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "erg/hour", "newton meter/minute", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "erg/hour", "newton meter/second", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "erg/hour", "petawatt", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "erg/hour", "pferdestarke", PLACES), 0.0);
        assertEquals(79.4444444, engine.convertAsDouble(AMOUNT, "erg/hour", "picowatt", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "erg/hour", "poncelet", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "erg/hour", "pound square foot/cubic second", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "erg/hour", "terawatt", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "erg/hour", "ton of refrigeration", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "erg/hour", "watt", PLACES), 0.0);
        assertEquals(7.944444444444442E13, engine.convertAsDouble(AMOUNT, "erg/hour", "yoctowatt", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "erg/hour", "yottawatt", PLACES), 0.0);
        assertEquals(7.944444444444444E10, engine.convertAsDouble(AMOUNT, "erg/hour", "zeptowatt", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "erg/hour", "zettawatt", PLACES), 0.0);
        assertEquals(4.766666666666666E9, engine.convertAsDouble(AMOUNT, "erg/minute", "attowatt", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "erg/minute", "Btu/hour", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "erg/minute", "Btu/minute", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "erg/minute", "Btu/second", PLACES), 0.0);
        assertEquals(4.1e-06, engine.convertAsDouble(AMOUNT, "erg/minute", "calorie/hour", PLACES), 0.0);
        assertEquals(1e-07, engine.convertAsDouble(AMOUNT, "erg/minute", "calorie/minute", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "erg/minute", "calorie/second", PLACES), 0.0);
        assertEquals(5e-07, engine.convertAsDouble(AMOUNT, "erg/minute", "centiwatt", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "erg/minute", "cheval vapeur", PLACES), 0.0);
        assertEquals(0.0035753, engine.convertAsDouble(AMOUNT, "erg/minute", "clusec", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "erg/minute", "deciwatt", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "erg/minute", "dekawatt", PLACES), 0.0);
        assertEquals(171.6, engine.convertAsDouble(AMOUNT, "erg/minute", "dyne centimeter/hour", PLACES), 0.0);
        assertEquals(2.86, engine.convertAsDouble(AMOUNT, "erg/minute", "dyne centimeter/minute", PLACES), 0.0);
        assertEquals(0.0476667, engine.convertAsDouble(AMOUNT, "erg/minute", "dyne centimeter/second", PLACES), 0.0);
        assertEquals(171.6, engine.convertAsDouble(AMOUNT, "erg/minute", "erg/hour", PLACES), 0.0);
        assertEquals(2.86, engine.convertAsDouble(AMOUNT, "erg/minute", "erg/minute", PLACES), 0.0);
        assertEquals(0.0476667, engine.convertAsDouble(AMOUNT, "erg/minute", "erg/second", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "erg/minute", "exawatt", PLACES), 0.0);
        assertEquals(4766666.6666667, engine.convertAsDouble(AMOUNT, "erg/minute", "femtowatt", PLACES), 0.0);
        assertEquals(1.27e-05, engine.convertAsDouble(AMOUNT, "erg/minute", "foot pound force/hour", PLACES), 0.0);
        assertEquals(2e-07, engine.convertAsDouble(AMOUNT, "erg/minute", "foot pound force/minute", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "erg/minute", "foot pound force/second", PLACES), 0.0);
        assertEquals(0.0004072, engine.convertAsDouble(AMOUNT, "erg/minute", "foot poundal/hour", PLACES), 0.0);
        assertEquals(6.8e-06, engine.convertAsDouble(AMOUNT, "erg/minute", "foot poundal/minute", PLACES), 0.0);
        assertEquals(1e-07, engine.convertAsDouble(AMOUNT, "erg/minute", "foot poundal/second", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "erg/minute", "gigawatt", PLACES), 0.0);
        assertEquals(0.1749833, engine.convertAsDouble(AMOUNT, "erg/minute", "gram force centimeter/hour", PLACES), 0.0);
        assertEquals(0.0029164, engine.convertAsDouble(AMOUNT, "erg/minute", "gram force centimeter/minute", PLACES), 0.0);
        assertEquals(4.86e-05, engine.convertAsDouble(AMOUNT, "erg/minute", "gram force centimeter/second", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "erg/minute", "hectowatt", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "erg/minute", "horsepower", PLACES), 0.0);
        assertEquals(6.4e-06, engine.convertAsDouble(AMOUNT, "erg/minute", "inch ounce force revolution/minute", PLACES), 0.0);
        assertEquals(1.72e-05, engine.convertAsDouble(AMOUNT, "erg/minute", "joule/hour", PLACES), 0.0);
        assertEquals(3e-07, engine.convertAsDouble(AMOUNT, "erg/minute", "joule/minute", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "erg/minute", "joule/second", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "erg/minute", "kilocalorie/hour", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "erg/minute", "kilocalorie/minute", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "erg/minute", "kilocalorie/second", PLACES), 0.0);
        assertEquals(1.7e-06, engine.convertAsDouble(AMOUNT, "erg/minute", "kilogram force meter/hour", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "erg/minute", "kilogram force meter/minute", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "erg/minute", "kilogram force meter/second", PLACES), 0.0);
        assertEquals(1.7e-06, engine.convertAsDouble(AMOUNT, "erg/minute", "kilopond meter/hour", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "erg/minute", "kilopond meter/minute", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "erg/minute", "kilopond meter/second", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "erg/minute", "kilowatt", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "erg/minute", "megawatt", PLACES), 0.0);
        assertEquals(0.0047667, engine.convertAsDouble(AMOUNT, "erg/minute", "microwatt", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "erg/minute", "million Btu/hour", PLACES), 0.0);
        assertEquals(4.8e-06, engine.convertAsDouble(AMOUNT, "erg/minute", "milliwatt", PLACES), 0.0);
        assertEquals(4.7666667, engine.convertAsDouble(AMOUNT, "erg/minute", "nanowatt", PLACES), 0.0);
        assertEquals(1.72e-05, engine.convertAsDouble(AMOUNT, "erg/minute", "newton meter/hour", PLACES), 0.0);
        assertEquals(3e-07, engine.convertAsDouble(AMOUNT, "erg/minute", "newton meter/minute", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "erg/minute", "newton meter/second", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "erg/minute", "petawatt", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "erg/minute", "pferdestarke", PLACES), 0.0);
        assertEquals(4766.6666667, engine.convertAsDouble(AMOUNT, "erg/minute", "picowatt", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "erg/minute", "poncelet", PLACES), 0.0);
        assertEquals(1e-07, engine.convertAsDouble(AMOUNT, "erg/minute", "pound square foot/cubic second", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "erg/minute", "terawatt", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "erg/minute", "ton of refrigeration", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "erg/minute", "watt", PLACES), 0.0);
        assertEquals(4.766666666666667E15, engine.convertAsDouble(AMOUNT, "erg/minute", "yoctowatt", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "erg/minute", "yottawatt", PLACES), 0.0);
        assertEquals(4.766666666666667E12, engine.convertAsDouble(AMOUNT, "erg/minute", "zeptowatt", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "erg/minute", "zettawatt", PLACES), 0.0);
        assertEquals(2.86E11, engine.convertAsDouble(AMOUNT, "erg/second", "attowatt", PLACES), 0.0);
        assertEquals(1e-06, engine.convertAsDouble(AMOUNT, "erg/second", "Btu/hour", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "erg/second", "Btu/minute", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "erg/second", "Btu/second", PLACES), 0.0);
        assertEquals(0.0002459, engine.convertAsDouble(AMOUNT, "erg/second", "calorie/hour", PLACES), 0.0);
        assertEquals(4.1e-06, engine.convertAsDouble(AMOUNT, "erg/second", "calorie/minute", PLACES), 0.0);
        assertEquals(1e-07, engine.convertAsDouble(AMOUNT, "erg/second", "calorie/second", PLACES), 0.0);
        assertEquals(2.86e-05, engine.convertAsDouble(AMOUNT, "erg/second", "centiwatt", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "erg/second", "cheval vapeur", PLACES), 0.0);
        assertEquals(0.2145176, engine.convertAsDouble(AMOUNT, "erg/second", "clusec", PLACES), 0.0);
        assertEquals(2.9e-06, engine.convertAsDouble(AMOUNT, "erg/second", "deciwatt", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "erg/second", "dekawatt", PLACES), 0.0);
        assertEquals(10296.0, engine.convertAsDouble(AMOUNT, "erg/second", "dyne centimeter/hour", PLACES), 0.0);
        assertEquals(171.6, engine.convertAsDouble(AMOUNT, "erg/second", "dyne centimeter/minute", PLACES), 0.0);
        assertEquals(2.86, engine.convertAsDouble(AMOUNT, "erg/second", "dyne centimeter/second", PLACES), 0.0);
        assertEquals(10296.0, engine.convertAsDouble(AMOUNT, "erg/second", "erg/hour", PLACES), 0.0);
        assertEquals(171.6, engine.convertAsDouble(AMOUNT, "erg/second", "erg/minute", PLACES), 0.0);
        assertEquals(2.86, engine.convertAsDouble(AMOUNT, "erg/second", "erg/second", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "erg/second", "exawatt", PLACES), 0.0);
        assertEquals(2.86E8, engine.convertAsDouble(AMOUNT, "erg/second", "femtowatt", PLACES), 0.0);
        assertEquals(0.0007594, engine.convertAsDouble(AMOUNT, "erg/second", "foot pound force/hour", PLACES), 0.0);
        assertEquals(1.27e-05, engine.convertAsDouble(AMOUNT, "erg/second", "foot pound force/minute", PLACES), 0.0);
        assertEquals(2e-07, engine.convertAsDouble(AMOUNT, "erg/second", "foot pound force/second", PLACES), 0.0);
        assertEquals(0.0244328, engine.convertAsDouble(AMOUNT, "erg/second", "foot poundal/hour", PLACES), 0.0);
        assertEquals(0.0004072, engine.convertAsDouble(AMOUNT, "erg/second", "foot poundal/minute", PLACES), 0.0);
        assertEquals(6.8e-06, engine.convertAsDouble(AMOUNT, "erg/second", "foot poundal/second", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "erg/second", "gigawatt", PLACES), 0.0);
        assertEquals(10.4989981, engine.convertAsDouble(AMOUNT, "erg/second", "gram force centimeter/hour", PLACES), 0.0);
        assertEquals(0.1749833, engine.convertAsDouble(AMOUNT, "erg/second", "gram force centimeter/minute", PLACES), 0.0);
        assertEquals(0.0029164, engine.convertAsDouble(AMOUNT, "erg/second", "gram force centimeter/second", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "erg/second", "hectowatt", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "erg/second", "horsepower", PLACES), 0.0);
        assertEquals(0.0003868, engine.convertAsDouble(AMOUNT, "erg/second", "inch ounce force revolution/minute", PLACES), 0.0);
        assertEquals(0.0010296, engine.convertAsDouble(AMOUNT, "erg/second", "joule/hour", PLACES), 0.0);
        assertEquals(1.72e-05, engine.convertAsDouble(AMOUNT, "erg/second", "joule/minute", PLACES), 0.0);
        assertEquals(3e-07, engine.convertAsDouble(AMOUNT, "erg/second", "joule/second", PLACES), 0.0);
        assertEquals(2e-07, engine.convertAsDouble(AMOUNT, "erg/second", "kilocalorie/hour", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "erg/second", "kilocalorie/minute", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "erg/second", "kilocalorie/second", PLACES), 0.0);
        assertEquals(0.000105, engine.convertAsDouble(AMOUNT, "erg/second", "kilogram force meter/hour", PLACES), 0.0);
        assertEquals(1.7e-06, engine.convertAsDouble(AMOUNT, "erg/second", "kilogram force meter/minute", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "erg/second", "kilogram force meter/second", PLACES), 0.0);
        assertEquals(0.000105, engine.convertAsDouble(AMOUNT, "erg/second", "kilopond meter/hour", PLACES), 0.0);
        assertEquals(1.7e-06, engine.convertAsDouble(AMOUNT, "erg/second", "kilopond meter/minute", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "erg/second", "kilopond meter/second", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "erg/second", "kilowatt", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "erg/second", "megawatt", PLACES), 0.0);
        assertEquals(0.286, engine.convertAsDouble(AMOUNT, "erg/second", "microwatt", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "erg/second", "million Btu/hour", PLACES), 0.0);
        assertEquals(0.000286, engine.convertAsDouble(AMOUNT, "erg/second", "milliwatt", PLACES), 0.0);
        assertEquals(286.0, engine.convertAsDouble(AMOUNT, "erg/second", "nanowatt", PLACES), 0.0);
        assertEquals(0.0010296, engine.convertAsDouble(AMOUNT, "erg/second", "newton meter/hour", PLACES), 0.0);
        assertEquals(1.72e-05, engine.convertAsDouble(AMOUNT, "erg/second", "newton meter/minute", PLACES), 0.0);
        assertEquals(3e-07, engine.convertAsDouble(AMOUNT, "erg/second", "newton meter/second", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "erg/second", "petawatt", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "erg/second", "pferdestarke", PLACES), 0.0);
        assertEquals(286000.0, engine.convertAsDouble(AMOUNT, "erg/second", "picowatt", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "erg/second", "poncelet", PLACES), 0.0);
        assertEquals(6.8e-06, engine.convertAsDouble(AMOUNT, "erg/second", "pound square foot/cubic second", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "erg/second", "terawatt", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "erg/second", "ton of refrigeration", PLACES), 0.0);
        assertEquals(3e-07, engine.convertAsDouble(AMOUNT, "erg/second", "watt", PLACES), 0.0);
        assertEquals(2.86E17, engine.convertAsDouble(AMOUNT, "erg/second", "yoctowatt", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "erg/second", "yottawatt", PLACES), 0.0);
        assertEquals(286000000000000.0, engine.convertAsDouble(AMOUNT, "erg/second", "zeptowatt", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "erg/second", "zettawatt", PLACES), 0.0);
        assertEquals(2.86E36, engine.convertAsDouble(AMOUNT, "exawatt", "attowatt", PLACES), 0.0);
        assertEquals(9.758725076480596e+18, engine.convertAsDouble(AMOUNT, "exawatt", "Btu/hour", PLACES), 0.0);
        assertEquals(1.6264541794134326e+17, engine.convertAsDouble(AMOUNT, "exawatt", "Btu/minute", PLACES), 0.0);
        assertEquals(2710756965689054.5, engine.convertAsDouble(AMOUNT, "exawatt", "Btu/second", PLACES), 0.0);
        assertEquals(2.4591573516766984E21, engine.convertAsDouble(AMOUNT, "exawatt", "calorie/hour", PLACES), 0.0);
        assertEquals(4.09859558612783e+19, engine.convertAsDouble(AMOUNT, "exawatt", "calorie/minute", PLACES), 0.0);
        assertEquals(6.830992643546385e+17, engine.convertAsDouble(AMOUNT, "exawatt", "calorie/second", PLACES), 0.0);
        assertEquals(2.86e+20, engine.convertAsDouble(AMOUNT, "exawatt", "centiwatt", PLACES), 0.0);
        assertEquals(3888517825489166.5, engine.convertAsDouble(AMOUNT, "exawatt", "cheval vapeur", PLACES), 0.0);
        assertEquals(2.1451763871284317E24, engine.convertAsDouble(AMOUNT, "exawatt", "clusec", PLACES), 0.0);
        assertEquals(2.86E19, engine.convertAsDouble(AMOUNT, "exawatt", "deciwatt", PLACES), 0.0);
        assertEquals(2.86E17, engine.convertAsDouble(AMOUNT, "exawatt", "dekawatt", PLACES), 0.0);
        assertEquals(1.0296000000000001e+29, engine.convertAsDouble(AMOUNT, "exawatt", "dyne centimeter/hour", PLACES), 0.0);
        assertEquals(1.7160000000000002E27, engine.convertAsDouble(AMOUNT, "exawatt", "dyne centimeter/minute", PLACES), 0.0);
        assertEquals(2.8600000000000003E25, engine.convertAsDouble(AMOUNT, "exawatt", "dyne centimeter/second", PLACES), 0.0);
        assertEquals(1.0296000000000001e+29, engine.convertAsDouble(AMOUNT, "exawatt", "erg/hour", PLACES), 0.0);
        assertEquals(1.7160000000000002E27, engine.convertAsDouble(AMOUNT, "exawatt", "erg/minute", PLACES), 0.0);
        assertEquals(2.8600000000000003E25, engine.convertAsDouble(AMOUNT, "exawatt", "erg/second", PLACES), 0.0);
        assertEquals(2.86, engine.convertAsDouble(AMOUNT, "exawatt", "exawatt", PLACES), 0.0);
        assertEquals(2.86E33, engine.convertAsDouble(AMOUNT, "exawatt", "femtowatt", PLACES), 0.0);
        assertEquals(7.593940159663035E21, engine.convertAsDouble(AMOUNT, "exawatt", "foot pound force/hour", PLACES), 0.0);
        assertEquals(1.2656566932771724e+20, engine.convertAsDouble(AMOUNT, "exawatt", "foot pound force/minute", PLACES), 0.0);
        assertEquals(2.1094278221286208e+18, engine.convertAsDouble(AMOUNT, "exawatt", "foot pound force/second", PLACES), 0.0);
        assertEquals(2.44327791265851e+23, engine.convertAsDouble(AMOUNT, "exawatt", "foot poundal/hour", PLACES), 0.0);
        assertEquals(4.07212985443085e+21, engine.convertAsDouble(AMOUNT, "exawatt", "foot poundal/minute", PLACES), 0.0);
        assertEquals(6.786883090718083E19, engine.convertAsDouble(AMOUNT, "exawatt", "foot poundal/second", PLACES), 0.0);
        assertEquals(2860000000.0, engine.convertAsDouble(AMOUNT, "exawatt", "gigawatt", PLACES), 0.0);
        assertEquals(1.049899812882075E26, engine.convertAsDouble(AMOUNT, "exawatt", "gram force centimeter/hour", PLACES), 0.0);
        assertEquals(1.7498330214701248e+24, engine.convertAsDouble(AMOUNT, "exawatt", "gram force centimeter/minute", PLACES), 0.0);
        assertEquals(2.916388369116875E22, engine.convertAsDouble(AMOUNT, "exawatt", "gram force centimeter/second", PLACES), 0.0);
        assertEquals(2.86e+16, engine.convertAsDouble(AMOUNT, "exawatt", "hectowatt", PLACES), 0.0);
        assertEquals(3.835323184379796E15, engine.convertAsDouble(AMOUNT, "exawatt", "horsepower", PLACES), 0.0);
        assertEquals(3.8675618097906597e+21, engine.convertAsDouble(AMOUNT, "exawatt", "inch ounce force revolution/minute", PLACES), 0.0);
        assertEquals(1.0296e+22, engine.convertAsDouble(AMOUNT, "exawatt", "joule/hour", PLACES), 0.0);
        assertEquals(1.716e+20, engine.convertAsDouble(AMOUNT, "exawatt", "joule/minute", PLACES), 0.0);
        assertEquals(2.86e+18, engine.convertAsDouble(AMOUNT, "exawatt", "joule/second", PLACES), 0.0);
        assertEquals(2.4591573516766981E18, engine.convertAsDouble(AMOUNT, "exawatt", "kilocalorie/hour", PLACES), 0.0);
        assertEquals(4.09859558612783e+16, engine.convertAsDouble(AMOUNT, "exawatt", "kilocalorie/minute", PLACES), 0.0);
        assertEquals(6.830992643546384E14, engine.convertAsDouble(AMOUNT, "exawatt", "kilocalorie/second", PLACES), 0.0);
        assertEquals(1.049899812882075e+21, engine.convertAsDouble(AMOUNT, "exawatt", "kilogram force meter/hour", PLACES), 0.0);
        assertEquals(1.7498330214701249e+19, engine.convertAsDouble(AMOUNT, "exawatt", "kilogram force meter/minute", PLACES), 0.0);
        assertEquals(2.916388369116875e+17, engine.convertAsDouble(AMOUNT, "exawatt", "kilogram force meter/second", PLACES), 0.0);
        assertEquals(1.049899812882075e+21, engine.convertAsDouble(AMOUNT, "exawatt", "kilopond meter/hour", PLACES), 0.0);
        assertEquals(1.7498330214701249e+19, engine.convertAsDouble(AMOUNT, "exawatt", "kilopond meter/minute", PLACES), 0.0);
        assertEquals(2.916388369116875e+17, engine.convertAsDouble(AMOUNT, "exawatt", "kilopond meter/second", PLACES), 0.0);
        assertEquals(2.86E15, engine.convertAsDouble(AMOUNT, "exawatt", "kilowatt", PLACES), 0.0);
        assertEquals(2.86E12, engine.convertAsDouble(AMOUNT, "exawatt", "megawatt", PLACES), 0.0);
        assertEquals(2.86e+24, engine.convertAsDouble(AMOUNT, "exawatt", "microwatt", PLACES), 0.0);
        assertEquals(9758725076480.596, engine.convertAsDouble(AMOUNT, "exawatt", "million Btu/hour", PLACES), 0.0);
        assertEquals(2.86e+21, engine.convertAsDouble(AMOUNT, "exawatt", "milliwatt", PLACES), 0.0);
        assertEquals(2.8599999999999997e+27, engine.convertAsDouble(AMOUNT, "exawatt", "nanowatt", PLACES), 0.0);
        assertEquals(1.0296e+22, engine.convertAsDouble(AMOUNT, "exawatt", "newton meter/hour", PLACES), 0.0);
        assertEquals(1.716e+20, engine.convertAsDouble(AMOUNT, "exawatt", "newton meter/minute", PLACES), 0.0);
        assertEquals(2.86e+18, engine.convertAsDouble(AMOUNT, "exawatt", "newton meter/second", PLACES), 0.0);
        assertEquals(2860.0, engine.convertAsDouble(AMOUNT, "exawatt", "petawatt", PLACES), 0.0);
        assertEquals(3888517825489166.5, engine.convertAsDouble(AMOUNT, "exawatt", "pferdestarke", PLACES), 0.0);
        assertEquals(2.86e+30, engine.convertAsDouble(AMOUNT, "exawatt", "picowatt", PLACES), 0.0);
        assertEquals(2916388369116875.0, engine.convertAsDouble(AMOUNT, "exawatt", "poncelet", PLACES), 0.0);
        assertEquals(6.786883090718083E19, engine.convertAsDouble(AMOUNT, "exawatt", "pound square foot/cubic second", PLACES), 0.0);
        assertEquals(2860000.0, engine.convertAsDouble(AMOUNT, "exawatt", "terawatt", PLACES), 0.0);
        assertEquals(813227089706716.2, engine.convertAsDouble(AMOUNT, "exawatt", "ton of refrigeration", PLACES), 0.0);
        assertEquals(2.86e+18, engine.convertAsDouble(AMOUNT, "exawatt", "watt", PLACES), 0.0);
        assertEquals(2.86e+42, engine.convertAsDouble(AMOUNT, "exawatt", "yoctowatt", PLACES), 0.0);
        assertEquals(2.9e-06, engine.convertAsDouble(AMOUNT, "exawatt", "yottawatt", PLACES), 0.0);
        assertEquals(2.8600000000000004E39, engine.convertAsDouble(AMOUNT, "exawatt", "zeptowatt", PLACES), 0.0);
        assertEquals(0.00286, engine.convertAsDouble(AMOUNT, "exawatt", "zettawatt", PLACES), 0.0);
        assertEquals(2860.0, engine.convertAsDouble(AMOUNT, "femtowatt", "attowatt", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "femtowatt", "Btu/hour", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "femtowatt", "Btu/minute", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "femtowatt", "Btu/second", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "femtowatt", "calorie/hour", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "femtowatt", "calorie/minute", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "femtowatt", "calorie/second", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "femtowatt", "centiwatt", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "femtowatt", "cheval vapeur", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "femtowatt", "clusec", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "femtowatt", "deciwatt", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "femtowatt", "dekawatt", PLACES), 0.0);
        assertEquals(0.000103, engine.convertAsDouble(AMOUNT, "femtowatt", "dyne centimeter/hour", PLACES), 0.0);
        assertEquals(1.7e-06, engine.convertAsDouble(AMOUNT, "femtowatt", "dyne centimeter/minute", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "femtowatt", "dyne centimeter/second", PLACES), 0.0);
        assertEquals(0.000103, engine.convertAsDouble(AMOUNT, "femtowatt", "erg/hour", PLACES), 0.0);
        assertEquals(1.7e-06, engine.convertAsDouble(AMOUNT, "femtowatt", "erg/minute", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "femtowatt", "erg/second", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "femtowatt", "exawatt", PLACES), 0.0);
        assertEquals(2.86, engine.convertAsDouble(AMOUNT, "femtowatt", "femtowatt", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "femtowatt", "foot pound force/hour", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "femtowatt", "foot pound force/minute", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "femtowatt", "foot pound force/second", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "femtowatt", "foot poundal/hour", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "femtowatt", "foot poundal/minute", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "femtowatt", "foot poundal/second", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "femtowatt", "gigawatt", PLACES), 0.0);
        assertEquals(1e-07, engine.convertAsDouble(AMOUNT, "femtowatt", "gram force centimeter/hour", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "femtowatt", "gram force centimeter/minute", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "femtowatt", "gram force centimeter/second", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "femtowatt", "hectowatt", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "femtowatt", "horsepower", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "femtowatt", "inch ounce force revolution/minute", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "femtowatt", "joule/hour", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "femtowatt", "joule/minute", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "femtowatt", "joule/second", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "femtowatt", "kilocalorie/hour", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "femtowatt", "kilocalorie/minute", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "femtowatt", "kilocalorie/second", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "femtowatt", "kilogram force meter/hour", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "femtowatt", "kilogram force meter/minute", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "femtowatt", "kilogram force meter/second", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "femtowatt", "kilopond meter/hour", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "femtowatt", "kilopond meter/minute", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "femtowatt", "kilopond meter/second", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "femtowatt", "kilowatt", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "femtowatt", "megawatt", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "femtowatt", "microwatt", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "femtowatt", "million Btu/hour", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "femtowatt", "milliwatt", PLACES), 0.0);
        assertEquals(2.9e-06, engine.convertAsDouble(AMOUNT, "femtowatt", "nanowatt", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "femtowatt", "newton meter/hour", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "femtowatt", "newton meter/minute", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "femtowatt", "newton meter/second", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "femtowatt", "petawatt", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "femtowatt", "pferdestarke", PLACES), 0.0);
        assertEquals(0.00286, engine.convertAsDouble(AMOUNT, "femtowatt", "picowatt", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "femtowatt", "poncelet", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "femtowatt", "pound square foot/cubic second", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "femtowatt", "terawatt", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "femtowatt", "ton of refrigeration", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "femtowatt", "watt", PLACES), 0.0);
        assertEquals(2.8600000000000005E9, engine.convertAsDouble(AMOUNT, "femtowatt", "yoctowatt", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "femtowatt", "yottawatt", PLACES), 0.0);
        assertEquals(2860000.0, engine.convertAsDouble(AMOUNT, "femtowatt", "zeptowatt", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "femtowatt", "zettawatt", PLACES), 0.0);
        assertEquals(1077121998333333.1, engine.convertAsDouble(AMOUNT, "foot pound force/hour", "attowatt", PLACES), 0.0);
        assertEquals(0.0036753, engine.convertAsDouble(AMOUNT, "foot pound force/hour", "Btu/hour", PLACES), 0.0);
        assertEquals(6.13e-05, engine.convertAsDouble(AMOUNT, "foot pound force/hour", "Btu/minute", PLACES), 0.0);
        assertEquals(1e-06, engine.convertAsDouble(AMOUNT, "foot pound force/hour", "Btu/second", PLACES), 0.0);
        assertEquals(0.9261582, engine.convertAsDouble(AMOUNT, "foot pound force/hour", "calorie/hour", PLACES), 0.0);
        assertEquals(0.015436, engine.convertAsDouble(AMOUNT, "foot pound force/hour", "calorie/minute", PLACES), 0.0);
        assertEquals(0.0002573, engine.convertAsDouble(AMOUNT, "foot pound force/hour", "calorie/second", PLACES), 0.0);
        assertEquals(0.1077122, engine.convertAsDouble(AMOUNT, "foot pound force/hour", "centiwatt", PLACES), 0.0);
        assertEquals(1.5e-06, engine.convertAsDouble(AMOUNT, "foot pound force/hour", "cheval vapeur", PLACES), 0.0);
        assertEquals(807.907929, engine.convertAsDouble(AMOUNT, "foot pound force/hour", "clusec", PLACES), 0.0);
        assertEquals(0.0107712, engine.convertAsDouble(AMOUNT, "foot pound force/hour", "deciwatt", PLACES), 0.0);
        assertEquals(0.0001077, engine.convertAsDouble(AMOUNT, "foot pound force/hour", "dekawatt", PLACES), 0.0);
        assertEquals(38776391.94, engine.convertAsDouble(AMOUNT, "foot pound force/hour", "dyne centimeter/hour", PLACES), 0.0);
        assertEquals(646273.199, engine.convertAsDouble(AMOUNT, "foot pound force/hour", "dyne centimeter/minute", PLACES), 0.0);
        assertEquals(10771.2199833, engine.convertAsDouble(AMOUNT, "foot pound force/hour", "dyne centimeter/second", PLACES), 0.0);
        assertEquals(38776391.94, engine.convertAsDouble(AMOUNT, "foot pound force/hour", "erg/hour", PLACES), 0.0);
        assertEquals(646273.199, engine.convertAsDouble(AMOUNT, "foot pound force/hour", "erg/minute", PLACES), 0.0);
        assertEquals(10771.2199833, engine.convertAsDouble(AMOUNT, "foot pound force/hour", "erg/second", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "foot pound force/hour", "exawatt", PLACES), 0.0);
        assertEquals(1077121998333.3331, engine.convertAsDouble(AMOUNT, "foot pound force/hour", "femtowatt", PLACES), 0.0);
        assertEquals(2.86, engine.convertAsDouble(AMOUNT, "foot pound force/hour", "foot pound force/hour", PLACES), 0.0);
        assertEquals(0.0476667, engine.convertAsDouble(AMOUNT, "foot pound force/hour", "foot pound force/minute", PLACES), 0.0);
        assertEquals(0.0007944, engine.convertAsDouble(AMOUNT, "foot pound force/hour", "foot pound force/second", PLACES), 0.0);
        assertEquals(92.0177758, engine.convertAsDouble(AMOUNT, "foot pound force/hour", "foot poundal/hour", PLACES), 0.0);
        assertEquals(1.5336296, engine.convertAsDouble(AMOUNT, "foot pound force/hour", "foot poundal/minute", PLACES), 0.0);
        assertEquals(0.0255605, engine.convertAsDouble(AMOUNT, "foot pound force/hour", "foot poundal/second", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "foot pound force/hour", "gigawatt", PLACES), 0.0);
        assertEquals(39540.915542, engine.convertAsDouble(AMOUNT, "foot pound force/hour", "gram force centimeter/hour", PLACES), 0.0);
        assertEquals(659.015259, engine.convertAsDouble(AMOUNT, "foot pound force/hour", "gram force centimeter/minute", PLACES), 0.0);
        assertEquals(10.9835877, engine.convertAsDouble(AMOUNT, "foot pound force/hour", "gram force centimeter/second", PLACES), 0.0);
        assertEquals(1.08e-05, engine.convertAsDouble(AMOUNT, "foot pound force/hour", "hectowatt", PLACES), 0.0);
        assertEquals(1.4e-06, engine.convertAsDouble(AMOUNT, "foot pound force/hour", "horsepower", PLACES), 0.0);
        assertEquals(1.456586, engine.convertAsDouble(AMOUNT, "foot pound force/hour", "inch ounce force revolution/minute", PLACES), 0.0);
        assertEquals(3.8776392, engine.convertAsDouble(AMOUNT, "foot pound force/hour", "joule/hour", PLACES), 0.0);
        assertEquals(0.0646273, engine.convertAsDouble(AMOUNT, "foot pound force/hour", "joule/minute", PLACES), 0.0);
        assertEquals(0.0010771, engine.convertAsDouble(AMOUNT, "foot pound force/hour", "joule/second", PLACES), 0.0);
        assertEquals(0.0009262, engine.convertAsDouble(AMOUNT, "foot pound force/hour", "kilocalorie/hour", PLACES), 0.0);
        assertEquals(1.54e-05, engine.convertAsDouble(AMOUNT, "foot pound force/hour", "kilocalorie/minute", PLACES), 0.0);
        assertEquals(3e-07, engine.convertAsDouble(AMOUNT, "foot pound force/hour", "kilocalorie/second", PLACES), 0.0);
        assertEquals(0.3954092, engine.convertAsDouble(AMOUNT, "foot pound force/hour", "kilogram force meter/hour", PLACES), 0.0);
        assertEquals(0.0065902, engine.convertAsDouble(AMOUNT, "foot pound force/hour", "kilogram force meter/minute", PLACES), 0.0);
        assertEquals(0.0001098, engine.convertAsDouble(AMOUNT, "foot pound force/hour", "kilogram force meter/second", PLACES), 0.0);
        assertEquals(0.3954092, engine.convertAsDouble(AMOUNT, "foot pound force/hour", "kilopond meter/hour", PLACES), 0.0);
        assertEquals(0.0065902, engine.convertAsDouble(AMOUNT, "foot pound force/hour", "kilopond meter/minute", PLACES), 0.0);
        assertEquals(0.0001098, engine.convertAsDouble(AMOUNT, "foot pound force/hour", "kilopond meter/second", PLACES), 0.0);
        assertEquals(1.1e-06, engine.convertAsDouble(AMOUNT, "foot pound force/hour", "kilowatt", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "foot pound force/hour", "megawatt", PLACES), 0.0);
        assertEquals(1077.1219983, engine.convertAsDouble(AMOUNT, "foot pound force/hour", "microwatt", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "foot pound force/hour", "million Btu/hour", PLACES), 0.0);
        assertEquals(1.077122, engine.convertAsDouble(AMOUNT, "foot pound force/hour", "milliwatt", PLACES), 0.0);
        assertEquals(1077121.9983333, engine.convertAsDouble(AMOUNT, "foot pound force/hour", "nanowatt", PLACES), 0.0);
        assertEquals(3.8776392, engine.convertAsDouble(AMOUNT, "foot pound force/hour", "newton meter/hour", PLACES), 0.0);
        assertEquals(0.0646273, engine.convertAsDouble(AMOUNT, "foot pound force/hour", "newton meter/minute", PLACES), 0.0);
        assertEquals(0.0010771, engine.convertAsDouble(AMOUNT, "foot pound force/hour", "newton meter/second", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "foot pound force/hour", "petawatt", PLACES), 0.0);
        assertEquals(1.5e-06, engine.convertAsDouble(AMOUNT, "foot pound force/hour", "pferdestarke", PLACES), 0.0);
        assertEquals(1077121998.3333333, engine.convertAsDouble(AMOUNT, "foot pound force/hour", "picowatt", PLACES), 0.0);
        assertEquals(1.1e-06, engine.convertAsDouble(AMOUNT, "foot pound force/hour", "poncelet", PLACES), 0.0);
        assertEquals(0.0255605, engine.convertAsDouble(AMOUNT, "foot pound force/hour", "pound square foot/cubic second", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "foot pound force/hour", "terawatt", PLACES), 0.0);
        assertEquals(3e-07, engine.convertAsDouble(AMOUNT, "foot pound force/hour", "ton of refrigeration", PLACES), 0.0);
        assertEquals(0.0010771, engine.convertAsDouble(AMOUNT, "foot pound force/hour", "watt", PLACES), 0.0);
        assertEquals(1.0771219983333333E21, engine.convertAsDouble(AMOUNT, "foot pound force/hour", "yoctowatt", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "foot pound force/hour", "yottawatt", PLACES), 0.0);
        assertEquals(1.07712199833333338E18, engine.convertAsDouble(AMOUNT, "foot pound force/hour", "zeptowatt", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "foot pound force/hour", "zettawatt", PLACES), 0.0);
        assertEquals(6.462731989999999e+16, engine.convertAsDouble(AMOUNT, "foot pound force/minute", "attowatt", PLACES), 0.0);
        assertEquals(0.2205176, engine.convertAsDouble(AMOUNT, "foot pound force/minute", "Btu/hour", PLACES), 0.0);
        assertEquals(0.0036753, engine.convertAsDouble(AMOUNT, "foot pound force/minute", "Btu/minute", PLACES), 0.0);
        assertEquals(6.13e-05, engine.convertAsDouble(AMOUNT, "foot pound force/minute", "Btu/second", PLACES), 0.0);
        assertEquals(55.5694926, engine.convertAsDouble(AMOUNT, "foot pound force/minute", "calorie/hour", PLACES), 0.0);
        assertEquals(0.9261582, engine.convertAsDouble(AMOUNT, "foot pound force/minute", "calorie/minute", PLACES), 0.0);
        assertEquals(0.015436, engine.convertAsDouble(AMOUNT, "foot pound force/minute", "calorie/second", PLACES), 0.0);
        assertEquals(6.462732, engine.convertAsDouble(AMOUNT, "foot pound force/minute", "centiwatt", PLACES), 0.0);
        assertEquals(8.79e-05, engine.convertAsDouble(AMOUNT, "foot pound force/minute", "cheval vapeur", PLACES), 0.0);
        assertEquals(48474.4757388, engine.convertAsDouble(AMOUNT, "foot pound force/minute", "clusec", PLACES), 0.0);
        assertEquals(0.6462732, engine.convertAsDouble(AMOUNT, "foot pound force/minute", "deciwatt", PLACES), 0.0);
        assertEquals(0.0064627, engine.convertAsDouble(AMOUNT, "foot pound force/minute", "dekawatt", PLACES), 0.0);
        assertEquals(2326583516.4000006, engine.convertAsDouble(AMOUNT, "foot pound force/minute", "dyne centimeter/hour", PLACES), 0.0);
        assertEquals(38776391.94, engine.convertAsDouble(AMOUNT, "foot pound force/minute", "dyne centimeter/minute", PLACES), 0.0);
        assertEquals(646273.199, engine.convertAsDouble(AMOUNT, "foot pound force/minute", "dyne centimeter/second", PLACES), 0.0);
        assertEquals(2326583516.4000006, engine.convertAsDouble(AMOUNT, "foot pound force/minute", "erg/hour", PLACES), 0.0);
        assertEquals(38776391.94, engine.convertAsDouble(AMOUNT, "foot pound force/minute", "erg/minute", PLACES), 0.0);
        assertEquals(646273.199, engine.convertAsDouble(AMOUNT, "foot pound force/minute", "erg/second", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "foot pound force/minute", "exawatt", PLACES), 0.0);
        assertEquals(64627319899999.99, engine.convertAsDouble(AMOUNT, "foot pound force/minute", "femtowatt", PLACES), 0.0);
        assertEquals(171.6, engine.convertAsDouble(AMOUNT, "foot pound force/minute", "foot pound force/hour", PLACES), 0.0);
        assertEquals(2.86, engine.convertAsDouble(AMOUNT, "foot pound force/minute", "foot pound force/minute", PLACES), 0.0);
        assertEquals(0.0476667, engine.convertAsDouble(AMOUNT, "foot pound force/minute", "foot pound force/second", PLACES), 0.0);
        assertEquals(5521.0665478, engine.convertAsDouble(AMOUNT, "foot pound force/minute", "foot poundal/hour", PLACES), 0.0);
        assertEquals(92.0177758, engine.convertAsDouble(AMOUNT, "foot pound force/minute", "foot poundal/minute", PLACES), 0.0);
        assertEquals(1.5336296, engine.convertAsDouble(AMOUNT, "foot pound force/minute", "foot poundal/second", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "foot pound force/minute", "gigawatt", PLACES), 0.0);
        assertEquals(2372454.9325203, engine.convertAsDouble(AMOUNT, "foot pound force/minute", "gram force centimeter/hour", PLACES), 0.0);
        assertEquals(39540.915542, engine.convertAsDouble(AMOUNT, "foot pound force/minute", "gram force centimeter/minute", PLACES), 0.0);
        assertEquals(659.015259, engine.convertAsDouble(AMOUNT, "foot pound force/minute", "gram force centimeter/second", PLACES), 0.0);
        assertEquals(0.0006463, engine.convertAsDouble(AMOUNT, "foot pound force/minute", "hectowatt", PLACES), 0.0);
        assertEquals(8.67e-05, engine.convertAsDouble(AMOUNT, "foot pound force/minute", "horsepower", PLACES), 0.0);
        assertEquals(87.3951589, engine.convertAsDouble(AMOUNT, "foot pound force/minute", "inch ounce force revolution/minute", PLACES), 0.0);
        assertEquals(232.6583516, engine.convertAsDouble(AMOUNT, "foot pound force/minute", "joule/hour", PLACES), 0.0);
        assertEquals(3.8776392, engine.convertAsDouble(AMOUNT, "foot pound force/minute", "joule/minute", PLACES), 0.0);
        assertEquals(0.0646273, engine.convertAsDouble(AMOUNT, "foot pound force/minute", "joule/second", PLACES), 0.0);
        assertEquals(0.0555695, engine.convertAsDouble(AMOUNT, "foot pound force/minute", "kilocalorie/hour", PLACES), 0.0);
        assertEquals(0.0009262, engine.convertAsDouble(AMOUNT, "foot pound force/minute", "kilocalorie/minute", PLACES), 0.0);
        assertEquals(1.54e-05, engine.convertAsDouble(AMOUNT, "foot pound force/minute", "kilocalorie/second", PLACES), 0.0);
        assertEquals(23.7245493, engine.convertAsDouble(AMOUNT, "foot pound force/minute", "kilogram force meter/hour", PLACES), 0.0);
        assertEquals(0.3954092, engine.convertAsDouble(AMOUNT, "foot pound force/minute", "kilogram force meter/minute", PLACES), 0.0);
        assertEquals(0.0065902, engine.convertAsDouble(AMOUNT, "foot pound force/minute", "kilogram force meter/second", PLACES), 0.0);
        assertEquals(23.7245493, engine.convertAsDouble(AMOUNT, "foot pound force/minute", "kilopond meter/hour", PLACES), 0.0);
        assertEquals(0.3954092, engine.convertAsDouble(AMOUNT, "foot pound force/minute", "kilopond meter/minute", PLACES), 0.0);
        assertEquals(0.0065902, engine.convertAsDouble(AMOUNT, "foot pound force/minute", "kilopond meter/second", PLACES), 0.0);
        assertEquals(6.46e-05, engine.convertAsDouble(AMOUNT, "foot pound force/minute", "kilowatt", PLACES), 0.0);
        assertEquals(1e-07, engine.convertAsDouble(AMOUNT, "foot pound force/minute", "megawatt", PLACES), 0.0);
        assertEquals(64627.3199, engine.convertAsDouble(AMOUNT, "foot pound force/minute", "microwatt", PLACES), 0.0);
        assertEquals(2e-07, engine.convertAsDouble(AMOUNT, "foot pound force/minute", "million Btu/hour", PLACES), 0.0);
        assertEquals(64.6273199, engine.convertAsDouble(AMOUNT, "foot pound force/minute", "milliwatt", PLACES), 0.0);
        assertEquals(64627319.9, engine.convertAsDouble(AMOUNT, "foot pound force/minute", "nanowatt", PLACES), 0.0);
        assertEquals(232.6583516, engine.convertAsDouble(AMOUNT, "foot pound force/minute", "newton meter/hour", PLACES), 0.0);
        assertEquals(3.8776392, engine.convertAsDouble(AMOUNT, "foot pound force/minute", "newton meter/minute", PLACES), 0.0);
        assertEquals(0.0646273, engine.convertAsDouble(AMOUNT, "foot pound force/minute", "newton meter/second", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "foot pound force/minute", "petawatt", PLACES), 0.0);
        assertEquals(8.79e-05, engine.convertAsDouble(AMOUNT, "foot pound force/minute", "pferdestarke", PLACES), 0.0);
        assertEquals(6.462731989999999E10, engine.convertAsDouble(AMOUNT, "foot pound force/minute", "picowatt", PLACES), 0.0);
        assertEquals(6.59e-05, engine.convertAsDouble(AMOUNT, "foot pound force/minute", "poncelet", PLACES), 0.0);
        assertEquals(1.5336296, engine.convertAsDouble(AMOUNT, "foot pound force/minute", "pound square foot/cubic second", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "foot pound force/minute", "terawatt", PLACES), 0.0);
        assertEquals(1.84e-05, engine.convertAsDouble(AMOUNT, "foot pound force/minute", "ton of refrigeration", PLACES), 0.0);
        assertEquals(0.0646273, engine.convertAsDouble(AMOUNT, "foot pound force/minute", "watt", PLACES), 0.0);
        assertEquals(6.46273199e+22, engine.convertAsDouble(AMOUNT, "foot pound force/minute", "yoctowatt", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "foot pound force/minute", "yottawatt", PLACES), 0.0);
        assertEquals(6.46273199e+19, engine.convertAsDouble(AMOUNT, "foot pound force/minute", "zeptowatt", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "foot pound force/minute", "zettawatt", PLACES), 0.0);
        assertEquals(3.877639193999999e+18, engine.convertAsDouble(AMOUNT, "foot pound force/second", "attowatt", PLACES), 0.0);
        assertEquals(13.2310541, engine.convertAsDouble(AMOUNT, "foot pound force/second", "Btu/hour", PLACES), 0.0);
        assertEquals(0.2205176, engine.convertAsDouble(AMOUNT, "foot pound force/second", "Btu/minute", PLACES), 0.0);
        assertEquals(0.0036753, engine.convertAsDouble(AMOUNT, "foot pound force/second", "Btu/second", PLACES), 0.0);
        assertEquals(3334.1695563, engine.convertAsDouble(AMOUNT, "foot pound force/second", "calorie/hour", PLACES), 0.0);
        assertEquals(55.5694926, engine.convertAsDouble(AMOUNT, "foot pound force/second", "calorie/minute", PLACES), 0.0);
        assertEquals(0.9261582, engine.convertAsDouble(AMOUNT, "foot pound force/second", "calorie/second", PLACES), 0.0);
        assertEquals(387.7639194, engine.convertAsDouble(AMOUNT, "foot pound force/second", "centiwatt", PLACES), 0.0);
        assertEquals(0.0052721, engine.convertAsDouble(AMOUNT, "foot pound force/second", "cheval vapeur", PLACES), 0.0);
        assertEquals(2908468.5443261, engine.convertAsDouble(AMOUNT, "foot pound force/second", "clusec", PLACES), 0.0);
        assertEquals(38.7763919, engine.convertAsDouble(AMOUNT, "foot pound force/second", "deciwatt", PLACES), 0.0);
        assertEquals(0.3877639, engine.convertAsDouble(AMOUNT, "foot pound force/second", "dekawatt", PLACES), 0.0);
        assertEquals(139595010984.0, engine.convertAsDouble(AMOUNT, "foot pound force/second", "dyne centimeter/hour", PLACES), 0.0);
        assertEquals(2.3265835164E9, engine.convertAsDouble(AMOUNT, "foot pound force/second", "dyne centimeter/minute", PLACES), 0.0);
        assertEquals(38776391.94, engine.convertAsDouble(AMOUNT, "foot pound force/second", "dyne centimeter/second", PLACES), 0.0);
        assertEquals(139595010984.0, engine.convertAsDouble(AMOUNT, "foot pound force/second", "erg/hour", PLACES), 0.0);
        assertEquals(2.3265835164E9, engine.convertAsDouble(AMOUNT, "foot pound force/second", "erg/minute", PLACES), 0.0);
        assertEquals(38776391.94, engine.convertAsDouble(AMOUNT, "foot pound force/second", "erg/second", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "foot pound force/second", "exawatt", PLACES), 0.0);
        assertEquals(3877639193999999.0, engine.convertAsDouble(AMOUNT, "foot pound force/second", "femtowatt", PLACES), 0.0);
        assertEquals(10296.0, engine.convertAsDouble(AMOUNT, "foot pound force/second", "foot pound force/hour", PLACES), 0.0);
        assertEquals(171.6, engine.convertAsDouble(AMOUNT, "foot pound force/second", "foot pound force/minute", PLACES), 0.0);
        assertEquals(2.86, engine.convertAsDouble(AMOUNT, "foot pound force/second", "foot pound force/second", PLACES), 0.0);
        assertEquals(331263.9928657, engine.convertAsDouble(AMOUNT, "foot pound force/second", "foot poundal/hour", PLACES), 0.0);
        assertEquals(5521.0665478, engine.convertAsDouble(AMOUNT, "foot pound force/second", "foot poundal/minute", PLACES), 0.0);
        assertEquals(92.0177758, engine.convertAsDouble(AMOUNT, "foot pound force/second", "foot poundal/second", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "foot pound force/second", "gigawatt", PLACES), 0.0);
        assertEquals(142347295.9512168, engine.convertAsDouble(AMOUNT, "foot pound force/second", "gram force centimeter/hour", PLACES), 0.0);
        assertEquals(2372454.9325203, engine.convertAsDouble(AMOUNT, "foot pound force/second", "gram force centimeter/minute", PLACES), 0.0);
        assertEquals(39540.915542, engine.convertAsDouble(AMOUNT, "foot pound force/second", "gram force centimeter/second", PLACES), 0.0);
        assertEquals(0.0387764, engine.convertAsDouble(AMOUNT, "foot pound force/second", "hectowatt", PLACES), 0.0);
        assertEquals(0.0052, engine.convertAsDouble(AMOUNT, "foot pound force/second", "horsepower", PLACES), 0.0);
        assertEquals(5243.7095311, engine.convertAsDouble(AMOUNT, "foot pound force/second", "inch ounce force revolution/minute", PLACES), 0.0);
        assertEquals(13959.5010984, engine.convertAsDouble(AMOUNT, "foot pound force/second", "joule/hour", PLACES), 0.0);
        assertEquals(232.6583516, engine.convertAsDouble(AMOUNT, "foot pound force/second", "joule/minute", PLACES), 0.0);
        assertEquals(3.8776392, engine.convertAsDouble(AMOUNT, "foot pound force/second", "joule/second", PLACES), 0.0);
        assertEquals(3.3341696, engine.convertAsDouble(AMOUNT, "foot pound force/second", "kilocalorie/hour", PLACES), 0.0);
        assertEquals(0.0555695, engine.convertAsDouble(AMOUNT, "foot pound force/second", "kilocalorie/minute", PLACES), 0.0);
        assertEquals(0.0009262, engine.convertAsDouble(AMOUNT, "foot pound force/second", "kilocalorie/second", PLACES), 0.0);
        assertEquals(1423.4729595, engine.convertAsDouble(AMOUNT, "foot pound force/second", "kilogram force meter/hour", PLACES), 0.0);
        assertEquals(23.7245493, engine.convertAsDouble(AMOUNT, "foot pound force/second", "kilogram force meter/minute", PLACES), 0.0);
        assertEquals(0.3954092, engine.convertAsDouble(AMOUNT, "foot pound force/second", "kilogram force meter/second", PLACES), 0.0);
        assertEquals(1423.4729595, engine.convertAsDouble(AMOUNT, "foot pound force/second", "kilopond meter/hour", PLACES), 0.0);
        assertEquals(23.7245493, engine.convertAsDouble(AMOUNT, "foot pound force/second", "kilopond meter/minute", PLACES), 0.0);
        assertEquals(0.3954092, engine.convertAsDouble(AMOUNT, "foot pound force/second", "kilopond meter/second", PLACES), 0.0);
        assertEquals(0.0038776, engine.convertAsDouble(AMOUNT, "foot pound force/second", "kilowatt", PLACES), 0.0);
        assertEquals(3.9e-06, engine.convertAsDouble(AMOUNT, "foot pound force/second", "megawatt", PLACES), 0.0);
        assertEquals(3877639.194, engine.convertAsDouble(AMOUNT, "foot pound force/second", "microwatt", PLACES), 0.0);
        assertEquals(1.32e-05, engine.convertAsDouble(AMOUNT, "foot pound force/second", "million Btu/hour", PLACES), 0.0);
        assertEquals(3877.639194, engine.convertAsDouble(AMOUNT, "foot pound force/second", "milliwatt", PLACES), 0.0);
        assertEquals(3877639193.999999, engine.convertAsDouble(AMOUNT, "foot pound force/second", "nanowatt", PLACES), 0.0);
        assertEquals(13959.5010984, engine.convertAsDouble(AMOUNT, "foot pound force/second", "newton meter/hour", PLACES), 0.0);
        assertEquals(232.6583516, engine.convertAsDouble(AMOUNT, "foot pound force/second", "newton meter/minute", PLACES), 0.0);
        assertEquals(3.8776392, engine.convertAsDouble(AMOUNT, "foot pound force/second", "newton meter/second", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "foot pound force/second", "petawatt", PLACES), 0.0);
        assertEquals(0.0052721, engine.convertAsDouble(AMOUNT, "foot pound force/second", "pferdestarke", PLACES), 0.0);
        assertEquals(3877639193999.9995, engine.convertAsDouble(AMOUNT, "foot pound force/second", "picowatt", PLACES), 0.0);
        assertEquals(0.0039541, engine.convertAsDouble(AMOUNT, "foot pound force/second", "poncelet", PLACES), 0.0);
        assertEquals(92.0177758, engine.convertAsDouble(AMOUNT, "foot pound force/second", "pound square foot/cubic second", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "foot pound force/second", "terawatt", PLACES), 0.0);
        assertEquals(0.0011026, engine.convertAsDouble(AMOUNT, "foot pound force/second", "ton of refrigeration", PLACES), 0.0);
        assertEquals(3.8776392, engine.convertAsDouble(AMOUNT, "foot pound force/second", "watt", PLACES), 0.0);
        assertEquals(3.8776391939999995e+24, engine.convertAsDouble(AMOUNT, "foot pound force/second", "yoctowatt", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "foot pound force/second", "yottawatt", PLACES), 0.0);
        assertEquals(3.877639194e+21, engine.convertAsDouble(AMOUNT, "foot pound force/second", "zeptowatt", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "foot pound force/second", "zettawatt", PLACES), 0.0);
        assertEquals(3.3477976277777773E13, engine.convertAsDouble(AMOUNT, "foot poundal/hour", "attowatt", PLACES), 0.0);
        assertEquals(0.0001142, engine.convertAsDouble(AMOUNT, "foot poundal/hour", "Btu/hour", PLACES), 0.0);
        assertEquals(1.9e-06, engine.convertAsDouble(AMOUNT, "foot poundal/hour", "Btu/minute", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "foot poundal/hour", "Btu/second", PLACES), 0.0);
        assertEquals(0.0287859, engine.convertAsDouble(AMOUNT, "foot poundal/hour", "calorie/hour", PLACES), 0.0);
        assertEquals(0.0004798, engine.convertAsDouble(AMOUNT, "foot poundal/hour", "calorie/minute", PLACES), 0.0);
        assertEquals(8e-06, engine.convertAsDouble(AMOUNT, "foot poundal/hour", "calorie/second", PLACES), 0.0);
        assertEquals(0.0033478, engine.convertAsDouble(AMOUNT, "foot poundal/hour", "centiwatt", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "foot poundal/hour", "cheval vapeur", PLACES), 0.0);
        assertEquals(25.1105469, engine.convertAsDouble(AMOUNT, "foot poundal/hour", "clusec", PLACES), 0.0);
        assertEquals(0.0003348, engine.convertAsDouble(AMOUNT, "foot poundal/hour", "deciwatt", PLACES), 0.0);
        assertEquals(3.3e-06, engine.convertAsDouble(AMOUNT, "foot poundal/hour", "dekawatt", PLACES), 0.0);
        assertEquals(1205207.146, engine.convertAsDouble(AMOUNT, "foot poundal/hour", "dyne centimeter/hour", PLACES), 0.0);
        assertEquals(20086.7857667, engine.convertAsDouble(AMOUNT, "foot poundal/hour", "dyne centimeter/minute", PLACES), 0.0);
        assertEquals(334.7797628, engine.convertAsDouble(AMOUNT, "foot poundal/hour", "dyne centimeter/second", PLACES), 0.0);
        assertEquals(1205207.146, engine.convertAsDouble(AMOUNT, "foot poundal/hour", "erg/hour", PLACES), 0.0);
        assertEquals(20086.7857667, engine.convertAsDouble(AMOUNT, "foot poundal/hour", "erg/minute", PLACES), 0.0);
        assertEquals(334.7797628, engine.convertAsDouble(AMOUNT, "foot poundal/hour", "erg/second", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "foot poundal/hour", "exawatt", PLACES), 0.0);
        assertEquals(33477976277.77777, engine.convertAsDouble(AMOUNT, "foot poundal/hour", "femtowatt", PLACES), 0.0);
        assertEquals(0.0888915, engine.convertAsDouble(AMOUNT, "foot poundal/hour", "foot pound force/hour", PLACES), 0.0);
        assertEquals(0.0014815, engine.convertAsDouble(AMOUNT, "foot poundal/hour", "foot pound force/minute", PLACES), 0.0);
        assertEquals(2.47e-05, engine.convertAsDouble(AMOUNT, "foot poundal/hour", "foot pound force/second", PLACES), 0.0);
        assertEquals(2.86, engine.convertAsDouble(AMOUNT, "foot poundal/hour", "foot poundal/hour", PLACES), 0.0);
        assertEquals(0.0476667, engine.convertAsDouble(AMOUNT, "foot poundal/hour", "foot poundal/minute", PLACES), 0.0);
        assertEquals(0.0007944, engine.convertAsDouble(AMOUNT, "foot poundal/hour", "foot poundal/second", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "foot poundal/hour", "gigawatt", PLACES), 0.0);
        assertEquals(1228.9692668, engine.convertAsDouble(AMOUNT, "foot poundal/hour", "gram force centimeter/hour", PLACES), 0.0);
        assertEquals(20.4828211, engine.convertAsDouble(AMOUNT, "foot poundal/hour", "gram force centimeter/minute", PLACES), 0.0);
        assertEquals(0.3413804, engine.convertAsDouble(AMOUNT, "foot poundal/hour", "gram force centimeter/second", PLACES), 0.0);
        assertEquals(3e-07, engine.convertAsDouble(AMOUNT, "foot poundal/hour", "hectowatt", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "foot poundal/hour", "horsepower", PLACES), 0.0);
        assertEquals(0.0452721, engine.convertAsDouble(AMOUNT, "foot poundal/hour", "inch ounce force revolution/minute", PLACES), 0.0);
        assertEquals(0.1205207, engine.convertAsDouble(AMOUNT, "foot poundal/hour", "joule/hour", PLACES), 0.0);
        assertEquals(0.0020087, engine.convertAsDouble(AMOUNT, "foot poundal/hour", "joule/minute", PLACES), 0.0);
        assertEquals(3.35e-05, engine.convertAsDouble(AMOUNT, "foot poundal/hour", "joule/second", PLACES), 0.0);
        assertEquals(2.88e-05, engine.convertAsDouble(AMOUNT, "foot poundal/hour", "kilocalorie/hour", PLACES), 0.0);
        assertEquals(5e-07, engine.convertAsDouble(AMOUNT, "foot poundal/hour", "kilocalorie/minute", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "foot poundal/hour", "kilocalorie/second", PLACES), 0.0);
        assertEquals(0.0122897, engine.convertAsDouble(AMOUNT, "foot poundal/hour", "kilogram force meter/hour", PLACES), 0.0);
        assertEquals(0.0002048, engine.convertAsDouble(AMOUNT, "foot poundal/hour", "kilogram force meter/minute", PLACES), 0.0);
        assertEquals(3.4e-06, engine.convertAsDouble(AMOUNT, "foot poundal/hour", "kilogram force meter/second", PLACES), 0.0);
        assertEquals(0.0122897, engine.convertAsDouble(AMOUNT, "foot poundal/hour", "kilopond meter/hour", PLACES), 0.0);
        assertEquals(0.0002048, engine.convertAsDouble(AMOUNT, "foot poundal/hour", "kilopond meter/minute", PLACES), 0.0);
        assertEquals(3.4e-06, engine.convertAsDouble(AMOUNT, "foot poundal/hour", "kilopond meter/second", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "foot poundal/hour", "kilowatt", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "foot poundal/hour", "megawatt", PLACES), 0.0);
        assertEquals(33.4779763, engine.convertAsDouble(AMOUNT, "foot poundal/hour", "microwatt", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "foot poundal/hour", "million Btu/hour", PLACES), 0.0);
        assertEquals(0.033478, engine.convertAsDouble(AMOUNT, "foot poundal/hour", "milliwatt", PLACES), 0.0);
        assertEquals(33477.9762778, engine.convertAsDouble(AMOUNT, "foot poundal/hour", "nanowatt", PLACES), 0.0);
        assertEquals(0.1205207, engine.convertAsDouble(AMOUNT, "foot poundal/hour", "newton meter/hour", PLACES), 0.0);
        assertEquals(0.0020087, engine.convertAsDouble(AMOUNT, "foot poundal/hour", "newton meter/minute", PLACES), 0.0);
        assertEquals(3.35e-05, engine.convertAsDouble(AMOUNT, "foot poundal/hour", "newton meter/second", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "foot poundal/hour", "petawatt", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "foot poundal/hour", "pferdestarke", PLACES), 0.0);
        assertEquals(33477976.2777778, engine.convertAsDouble(AMOUNT, "foot poundal/hour", "picowatt", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "foot poundal/hour", "poncelet", PLACES), 0.0);
        assertEquals(0.0007944, engine.convertAsDouble(AMOUNT, "foot poundal/hour", "pound square foot/cubic second", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "foot poundal/hour", "terawatt", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "foot poundal/hour", "ton of refrigeration", PLACES), 0.0);
        assertEquals(3.35e-05, engine.convertAsDouble(AMOUNT, "foot poundal/hour", "watt", PLACES), 0.0);
        assertEquals(3.3477976277777777e+19, engine.convertAsDouble(AMOUNT, "foot poundal/hour", "yoctowatt", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "foot poundal/hour", "yottawatt", PLACES), 0.0);
        assertEquals(3.347797627777778E16, engine.convertAsDouble(AMOUNT, "foot poundal/hour", "zeptowatt", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "foot poundal/hour", "zettawatt", PLACES), 0.0);
        assertEquals(2008678576666666.5, engine.convertAsDouble(AMOUNT, "foot poundal/minute", "attowatt", PLACES), 0.0);
        assertEquals(0.0068539, engine.convertAsDouble(AMOUNT, "foot poundal/minute", "Btu/hour", PLACES), 0.0);
        assertEquals(0.0001142, engine.convertAsDouble(AMOUNT, "foot poundal/minute", "Btu/minute", PLACES), 0.0);
        assertEquals(1.9e-06, engine.convertAsDouble(AMOUNT, "foot poundal/minute", "Btu/second", PLACES), 0.0);
        assertEquals(1.7271527, engine.convertAsDouble(AMOUNT, "foot poundal/minute", "calorie/hour", PLACES), 0.0);
        assertEquals(0.0287859, engine.convertAsDouble(AMOUNT, "foot poundal/minute", "calorie/minute", PLACES), 0.0);
        assertEquals(0.0004798, engine.convertAsDouble(AMOUNT, "foot poundal/minute", "calorie/second", PLACES), 0.0);
        assertEquals(0.2008679, engine.convertAsDouble(AMOUNT, "foot poundal/minute", "centiwatt", PLACES), 0.0);
        assertEquals(2.7e-06, engine.convertAsDouble(AMOUNT, "foot poundal/minute", "cheval vapeur", PLACES), 0.0);
        assertEquals(1506.6328154, engine.convertAsDouble(AMOUNT, "foot poundal/minute", "clusec", PLACES), 0.0);
        assertEquals(0.0200868, engine.convertAsDouble(AMOUNT, "foot poundal/minute", "deciwatt", PLACES), 0.0);
        assertEquals(0.0002009, engine.convertAsDouble(AMOUNT, "foot poundal/minute", "dekawatt", PLACES), 0.0);
        assertEquals(72312428.76, engine.convertAsDouble(AMOUNT, "foot poundal/minute", "dyne centimeter/hour", PLACES), 0.0);
        assertEquals(1205207.146, engine.convertAsDouble(AMOUNT, "foot poundal/minute", "dyne centimeter/minute", PLACES), 0.0);
        assertEquals(20086.7857667, engine.convertAsDouble(AMOUNT, "foot poundal/minute", "dyne centimeter/second", PLACES), 0.0);
        assertEquals(72312428.76, engine.convertAsDouble(AMOUNT, "foot poundal/minute", "erg/hour", PLACES), 0.0);
        assertEquals(1205207.146, engine.convertAsDouble(AMOUNT, "foot poundal/minute", "erg/minute", PLACES), 0.0);
        assertEquals(20086.7857667, engine.convertAsDouble(AMOUNT, "foot poundal/minute", "erg/second", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "foot poundal/minute", "exawatt", PLACES), 0.0);
        assertEquals(2.0086785766666663E12, engine.convertAsDouble(AMOUNT, "foot poundal/minute", "femtowatt", PLACES), 0.0);
        assertEquals(5.3334912, engine.convertAsDouble(AMOUNT, "foot poundal/minute", "foot pound force/hour", PLACES), 0.0);
        assertEquals(0.0888915, engine.convertAsDouble(AMOUNT, "foot poundal/minute", "foot pound force/minute", PLACES), 0.0);
        assertEquals(0.0014815, engine.convertAsDouble(AMOUNT, "foot poundal/minute", "foot pound force/second", PLACES), 0.0);
        assertEquals(171.6, engine.convertAsDouble(AMOUNT, "foot poundal/minute", "foot poundal/hour", PLACES), 0.0);
        assertEquals(2.86, engine.convertAsDouble(AMOUNT, "foot poundal/minute", "foot poundal/minute", PLACES), 0.0);
        assertEquals(0.0476667, engine.convertAsDouble(AMOUNT, "foot poundal/minute", "foot poundal/second", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "foot poundal/minute", "gigawatt", PLACES), 0.0);
        assertEquals(73738.1560064, engine.convertAsDouble(AMOUNT, "foot poundal/minute", "gram force centimeter/hour", PLACES), 0.0);
        assertEquals(1228.9692668, engine.convertAsDouble(AMOUNT, "foot poundal/minute", "gram force centimeter/minute", PLACES), 0.0);
        assertEquals(20.4828211, engine.convertAsDouble(AMOUNT, "foot poundal/minute", "gram force centimeter/second", PLACES), 0.0);
        assertEquals(2.01e-05, engine.convertAsDouble(AMOUNT, "foot poundal/minute", "hectowatt", PLACES), 0.0);
        assertEquals(2.7e-06, engine.convertAsDouble(AMOUNT, "foot poundal/minute", "horsepower", PLACES), 0.0);
        assertEquals(2.7163247, engine.convertAsDouble(AMOUNT, "foot poundal/minute", "inch ounce force revolution/minute", PLACES), 0.0);
        assertEquals(7.2312429, engine.convertAsDouble(AMOUNT, "foot poundal/minute", "joule/hour", PLACES), 0.0);
        assertEquals(0.1205207, engine.convertAsDouble(AMOUNT, "foot poundal/minute", "joule/minute", PLACES), 0.0);
        assertEquals(0.0020087, engine.convertAsDouble(AMOUNT, "foot poundal/minute", "joule/second", PLACES), 0.0);
        assertEquals(0.0017272, engine.convertAsDouble(AMOUNT, "foot poundal/minute", "kilocalorie/hour", PLACES), 0.0);
        assertEquals(2.88e-05, engine.convertAsDouble(AMOUNT, "foot poundal/minute", "kilocalorie/minute", PLACES), 0.0);
        assertEquals(5e-07, engine.convertAsDouble(AMOUNT, "foot poundal/minute", "kilocalorie/second", PLACES), 0.0);
        assertEquals(0.7373816, engine.convertAsDouble(AMOUNT, "foot poundal/minute", "kilogram force meter/hour", PLACES), 0.0);
        assertEquals(0.0122897, engine.convertAsDouble(AMOUNT, "foot poundal/minute", "kilogram force meter/minute", PLACES), 0.0);
        assertEquals(0.0002048, engine.convertAsDouble(AMOUNT, "foot poundal/minute", "kilogram force meter/second", PLACES), 0.0);
        assertEquals(0.7373816, engine.convertAsDouble(AMOUNT, "foot poundal/minute", "kilopond meter/hour", PLACES), 0.0);
        assertEquals(0.0122897, engine.convertAsDouble(AMOUNT, "foot poundal/minute", "kilopond meter/minute", PLACES), 0.0);
        assertEquals(0.0002048, engine.convertAsDouble(AMOUNT, "foot poundal/minute", "kilopond meter/second", PLACES), 0.0);
        assertEquals(2e-06, engine.convertAsDouble(AMOUNT, "foot poundal/minute", "kilowatt", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "foot poundal/minute", "megawatt", PLACES), 0.0);
        assertEquals(2008.6785767, engine.convertAsDouble(AMOUNT, "foot poundal/minute", "microwatt", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "foot poundal/minute", "million Btu/hour", PLACES), 0.0);
        assertEquals(2.0086786, engine.convertAsDouble(AMOUNT, "foot poundal/minute", "milliwatt", PLACES), 0.0);
        assertEquals(2008678.5766667, engine.convertAsDouble(AMOUNT, "foot poundal/minute", "nanowatt", PLACES), 0.0);
        assertEquals(7.2312429, engine.convertAsDouble(AMOUNT, "foot poundal/minute", "newton meter/hour", PLACES), 0.0);
        assertEquals(0.1205207, engine.convertAsDouble(AMOUNT, "foot poundal/minute", "newton meter/minute", PLACES), 0.0);
        assertEquals(0.0020087, engine.convertAsDouble(AMOUNT, "foot poundal/minute", "newton meter/second", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "foot poundal/minute", "petawatt", PLACES), 0.0);
        assertEquals(2.7e-06, engine.convertAsDouble(AMOUNT, "foot poundal/minute", "pferdestarke", PLACES), 0.0);
        assertEquals(2.0086785766666665E9, engine.convertAsDouble(AMOUNT, "foot poundal/minute", "picowatt", PLACES), 0.0);
        assertEquals(2e-06, engine.convertAsDouble(AMOUNT, "foot poundal/minute", "poncelet", PLACES), 0.0);
        assertEquals(0.0476667, engine.convertAsDouble(AMOUNT, "foot poundal/minute", "pound square foot/cubic second", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "foot poundal/minute", "terawatt", PLACES), 0.0);
        assertEquals(6e-07, engine.convertAsDouble(AMOUNT, "foot poundal/minute", "ton of refrigeration", PLACES), 0.0);
        assertEquals(0.0020087, engine.convertAsDouble(AMOUNT, "foot poundal/minute", "watt", PLACES), 0.0);
        assertEquals(2.0086785766666666e+21, engine.convertAsDouble(AMOUNT, "foot poundal/minute", "yoctowatt", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "foot poundal/minute", "yottawatt", PLACES), 0.0);
        assertEquals(2.0086785766666668e+18, engine.convertAsDouble(AMOUNT, "foot poundal/minute", "zeptowatt", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "foot poundal/minute", "zettawatt", PLACES), 0.0);
        assertEquals(1.2052071459999998e+17, engine.convertAsDouble(AMOUNT, "foot poundal/second", "attowatt", PLACES), 0.0);
        assertEquals(0.4112337, engine.convertAsDouble(AMOUNT, "foot poundal/second", "Btu/hour", PLACES), 0.0);
        assertEquals(0.0068539, engine.convertAsDouble(AMOUNT, "foot poundal/second", "Btu/minute", PLACES), 0.0);
        assertEquals(0.0001142, engine.convertAsDouble(AMOUNT, "foot poundal/second", "Btu/second", PLACES), 0.0);
        assertEquals(103.6291613, engine.convertAsDouble(AMOUNT, "foot poundal/second", "calorie/hour", PLACES), 0.0);
        assertEquals(1.7271527, engine.convertAsDouble(AMOUNT, "foot poundal/second", "calorie/minute", PLACES), 0.0);
        assertEquals(0.0287859, engine.convertAsDouble(AMOUNT, "foot poundal/second", "calorie/second", PLACES), 0.0);
        assertEquals(12.0520715, engine.convertAsDouble(AMOUNT, "foot poundal/second", "centiwatt", PLACES), 0.0);
        assertEquals(0.0001639, engine.convertAsDouble(AMOUNT, "foot poundal/second", "cheval vapeur", PLACES), 0.0);
        assertEquals(90397.968923, engine.convertAsDouble(AMOUNT, "foot poundal/second", "clusec", PLACES), 0.0);
        assertEquals(1.2052071, engine.convertAsDouble(AMOUNT, "foot poundal/second", "deciwatt", PLACES), 0.0);
        assertEquals(0.0120521, engine.convertAsDouble(AMOUNT, "foot poundal/second", "dekawatt", PLACES), 0.0);
        assertEquals(4338745725.6, engine.convertAsDouble(AMOUNT, "foot poundal/second", "dyne centimeter/hour", PLACES), 0.0);
        assertEquals(72312428.76, engine.convertAsDouble(AMOUNT, "foot poundal/second", "dyne centimeter/minute", PLACES), 0.0);
        assertEquals(1205207.146, engine.convertAsDouble(AMOUNT, "foot poundal/second", "dyne centimeter/second", PLACES), 0.0);
        assertEquals(4338745725.6, engine.convertAsDouble(AMOUNT, "foot poundal/second", "erg/hour", PLACES), 0.0);
        assertEquals(72312428.76, engine.convertAsDouble(AMOUNT, "foot poundal/second", "erg/minute", PLACES), 0.0);
        assertEquals(1205207.146, engine.convertAsDouble(AMOUNT, "foot poundal/second", "erg/second", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "foot poundal/second", "exawatt", PLACES), 0.0);
        assertEquals(1.205207146E14, engine.convertAsDouble(AMOUNT, "foot poundal/second", "femtowatt", PLACES), 0.0);
        assertEquals(320.0094737, engine.convertAsDouble(AMOUNT, "foot poundal/second", "foot pound force/hour", PLACES), 0.0);
        assertEquals(5.3334912, engine.convertAsDouble(AMOUNT, "foot poundal/second", "foot pound force/minute", PLACES), 0.0);
        assertEquals(0.0888915, engine.convertAsDouble(AMOUNT, "foot poundal/second", "foot pound force/second", PLACES), 0.0);
        assertEquals(10296.0, engine.convertAsDouble(AMOUNT, "foot poundal/second", "foot poundal/hour", PLACES), 0.0);
        assertEquals(171.6, engine.convertAsDouble(AMOUNT, "foot poundal/second", "foot poundal/minute", PLACES), 0.0);
        assertEquals(2.86, engine.convertAsDouble(AMOUNT, "foot poundal/second", "foot poundal/second", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "foot poundal/second", "gigawatt", PLACES), 0.0);
        assertEquals(4424289.360383, engine.convertAsDouble(AMOUNT, "foot poundal/second", "gram force centimeter/hour", PLACES), 0.0);
        assertEquals(73738.1560064, engine.convertAsDouble(AMOUNT, "foot poundal/second", "gram force centimeter/minute", PLACES), 0.0);
        assertEquals(1228.9692668, engine.convertAsDouble(AMOUNT, "foot poundal/second", "gram force centimeter/second", PLACES), 0.0);
        assertEquals(0.0012052, engine.convertAsDouble(AMOUNT, "foot poundal/second", "hectowatt", PLACES), 0.0);
        assertEquals(0.0001616, engine.convertAsDouble(AMOUNT, "foot poundal/second", "horsepower", PLACES), 0.0);
        assertEquals(162.9794801, engine.convertAsDouble(AMOUNT, "foot poundal/second", "inch ounce force revolution/minute", PLACES), 0.0);
        assertEquals(433.8745726, engine.convertAsDouble(AMOUNT, "foot poundal/second", "joule/hour", PLACES), 0.0);
        assertEquals(7.2312429, engine.convertAsDouble(AMOUNT, "foot poundal/second", "joule/minute", PLACES), 0.0);
        assertEquals(0.1205207, engine.convertAsDouble(AMOUNT, "foot poundal/second", "joule/second", PLACES), 0.0);
        assertEquals(0.1036292, engine.convertAsDouble(AMOUNT, "foot poundal/second", "kilocalorie/hour", PLACES), 0.0);
        assertEquals(0.0017272, engine.convertAsDouble(AMOUNT, "foot poundal/second", "kilocalorie/minute", PLACES), 0.0);
        assertEquals(2.88e-05, engine.convertAsDouble(AMOUNT, "foot poundal/second", "kilocalorie/second", PLACES), 0.0);
        assertEquals(44.2428936, engine.convertAsDouble(AMOUNT, "foot poundal/second", "kilogram force meter/hour", PLACES), 0.0);
        assertEquals(0.7373816, engine.convertAsDouble(AMOUNT, "foot poundal/second", "kilogram force meter/minute", PLACES), 0.0);
        assertEquals(0.0122897, engine.convertAsDouble(AMOUNT, "foot poundal/second", "kilogram force meter/second", PLACES), 0.0);
        assertEquals(44.2428936, engine.convertAsDouble(AMOUNT, "foot poundal/second", "kilopond meter/hour", PLACES), 0.0);
        assertEquals(0.7373816, engine.convertAsDouble(AMOUNT, "foot poundal/second", "kilopond meter/minute", PLACES), 0.0);
        assertEquals(0.0122897, engine.convertAsDouble(AMOUNT, "foot poundal/second", "kilopond meter/second", PLACES), 0.0);
        assertEquals(0.0001205, engine.convertAsDouble(AMOUNT, "foot poundal/second", "kilowatt", PLACES), 0.0);
        assertEquals(1e-07, engine.convertAsDouble(AMOUNT, "foot poundal/second", "megawatt", PLACES), 0.0);
        assertEquals(120520.7146, engine.convertAsDouble(AMOUNT, "foot poundal/second", "microwatt", PLACES), 0.0);
        assertEquals(4e-07, engine.convertAsDouble(AMOUNT, "foot poundal/second", "million Btu/hour", PLACES), 0.0);
        assertEquals(120.5207146, engine.convertAsDouble(AMOUNT, "foot poundal/second", "milliwatt", PLACES), 0.0);
        assertEquals(120520714.6, engine.convertAsDouble(AMOUNT, "foot poundal/second", "nanowatt", PLACES), 0.0);
        assertEquals(433.8745726, engine.convertAsDouble(AMOUNT, "foot poundal/second", "newton meter/hour", PLACES), 0.0);
        assertEquals(7.2312429, engine.convertAsDouble(AMOUNT, "foot poundal/second", "newton meter/minute", PLACES), 0.0);
        assertEquals(0.1205207, engine.convertAsDouble(AMOUNT, "foot poundal/second", "newton meter/second", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "foot poundal/second", "petawatt", PLACES), 0.0);
        assertEquals(0.0001639, engine.convertAsDouble(AMOUNT, "foot poundal/second", "pferdestarke", PLACES), 0.0);
        assertEquals(120520714600.0, engine.convertAsDouble(AMOUNT, "foot poundal/second", "picowatt", PLACES), 0.0);
        assertEquals(0.0001229, engine.convertAsDouble(AMOUNT, "foot poundal/second", "poncelet", PLACES), 0.0);
        assertEquals(2.86, engine.convertAsDouble(AMOUNT, "foot poundal/second", "pound square foot/cubic second", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "foot poundal/second", "terawatt", PLACES), 0.0);
        assertEquals(3.43e-05, engine.convertAsDouble(AMOUNT, "foot poundal/second", "ton of refrigeration", PLACES), 0.0);
        assertEquals(0.1205207, engine.convertAsDouble(AMOUNT, "foot poundal/second", "watt", PLACES), 0.0);
        assertEquals(1.205207146e+23, engine.convertAsDouble(AMOUNT, "foot poundal/second", "yoctowatt", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "foot poundal/second", "yottawatt", PLACES), 0.0);
        assertEquals(1.2052071460000001e+20, engine.convertAsDouble(AMOUNT, "foot poundal/second", "zeptowatt", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "foot poundal/second", "zettawatt", PLACES), 0.0);
        assertEquals(2.8599999999999997e+27, engine.convertAsDouble(AMOUNT, "gigawatt", "attowatt", PLACES), 0.0);
        assertEquals(9758725076.480597, engine.convertAsDouble(AMOUNT, "gigawatt", "Btu/hour", PLACES), 0.0);
        assertEquals(162645417.9413433, engine.convertAsDouble(AMOUNT, "gigawatt", "Btu/minute", PLACES), 0.0);
        assertEquals(2710756.9656891, engine.convertAsDouble(AMOUNT, "gigawatt", "Btu/second", PLACES), 0.0);
        assertEquals(2459157351676.698, engine.convertAsDouble(AMOUNT, "gigawatt", "calorie/hour", PLACES), 0.0);
        assertEquals(40985955861.278305, engine.convertAsDouble(AMOUNT, "gigawatt", "calorie/minute", PLACES), 0.0);
        assertEquals(683099264.3546385, engine.convertAsDouble(AMOUNT, "gigawatt", "calorie/second", PLACES), 0.0);
        assertEquals(286000000000.0, engine.convertAsDouble(AMOUNT, "gigawatt", "centiwatt", PLACES), 0.0);
        assertEquals(3888517.8254892, engine.convertAsDouble(AMOUNT, "gigawatt", "cheval vapeur", PLACES), 0.0);
        assertEquals(2.1451763871284318E15, engine.convertAsDouble(AMOUNT, "gigawatt", "clusec", PLACES), 0.0);
        assertEquals(2.86E10, engine.convertAsDouble(AMOUNT, "gigawatt", "deciwatt", PLACES), 0.0);
        assertEquals(286000000.0, engine.convertAsDouble(AMOUNT, "gigawatt", "dekawatt", PLACES), 0.0);
        assertEquals(1.0296000000000002e+20, engine.convertAsDouble(AMOUNT, "gigawatt", "dyne centimeter/hour", PLACES), 0.0);
        assertEquals(1.71600000000000026E18, engine.convertAsDouble(AMOUNT, "gigawatt", "dyne centimeter/minute", PLACES), 0.0);
        assertEquals(2.86e+16, engine.convertAsDouble(AMOUNT, "gigawatt", "dyne centimeter/second", PLACES), 0.0);
        assertEquals(1.0296000000000002e+20, engine.convertAsDouble(AMOUNT, "gigawatt", "erg/hour", PLACES), 0.0);
        assertEquals(1.71600000000000026E18, engine.convertAsDouble(AMOUNT, "gigawatt", "erg/minute", PLACES), 0.0);
        assertEquals(2.86e+16, engine.convertAsDouble(AMOUNT, "gigawatt", "erg/second", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "gigawatt", "exawatt", PLACES), 0.0);
        assertEquals(2.86E24, engine.convertAsDouble(AMOUNT, "gigawatt", "femtowatt", PLACES), 0.0);
        assertEquals(7.593940159663035E12, engine.convertAsDouble(AMOUNT, "gigawatt", "foot pound force/hour", PLACES), 0.0);
        assertEquals(1.2656566932771724E11, engine.convertAsDouble(AMOUNT, "gigawatt", "foot pound force/minute", PLACES), 0.0);
        assertEquals(2109427822.1286209, engine.convertAsDouble(AMOUNT, "gigawatt", "foot pound force/second", PLACES), 0.0);
        assertEquals(2.44327791265851E14, engine.convertAsDouble(AMOUNT, "gigawatt", "foot poundal/hour", PLACES), 0.0);
        assertEquals(4072129854430.8496, engine.convertAsDouble(AMOUNT, "gigawatt", "foot poundal/minute", PLACES), 0.0);
        assertEquals(6.786883090718083E10, engine.convertAsDouble(AMOUNT, "gigawatt", "foot poundal/second", PLACES), 0.0);
        assertEquals(2.86, engine.convertAsDouble(AMOUNT, "gigawatt", "gigawatt", PLACES), 0.0);
        assertEquals(1.0498998128820749e+17, engine.convertAsDouble(AMOUNT, "gigawatt", "gram force centimeter/hour", PLACES), 0.0);
        assertEquals(1749833021470124.8, engine.convertAsDouble(AMOUNT, "gigawatt", "gram force centimeter/minute", PLACES), 0.0);
        assertEquals(29163883691168.746, engine.convertAsDouble(AMOUNT, "gigawatt", "gram force centimeter/second", PLACES), 0.0);
        assertEquals(28600000.0, engine.convertAsDouble(AMOUNT, "gigawatt", "hectowatt", PLACES), 0.0);
        assertEquals(3835323.1843798, engine.convertAsDouble(AMOUNT, "gigawatt", "horsepower", PLACES), 0.0);
        assertEquals(3867561809790.6597, engine.convertAsDouble(AMOUNT, "gigawatt", "inch ounce force revolution/minute", PLACES), 0.0);
        assertEquals(10296000000000.0, engine.convertAsDouble(AMOUNT, "gigawatt", "joule/hour", PLACES), 0.0);
        assertEquals(171600000000.0, engine.convertAsDouble(AMOUNT, "gigawatt", "joule/minute", PLACES), 0.0);
        assertEquals(2860000000.0, engine.convertAsDouble(AMOUNT, "gigawatt", "joule/second", PLACES), 0.0);
        assertEquals(2.459157351676698E9, engine.convertAsDouble(AMOUNT, "gigawatt", "kilocalorie/hour", PLACES), 0.0);
        assertEquals(40985955.8612783, engine.convertAsDouble(AMOUNT, "gigawatt", "kilocalorie/minute", PLACES), 0.0);
        assertEquals(683099.2643546, engine.convertAsDouble(AMOUNT, "gigawatt", "kilocalorie/second", PLACES), 0.0);
        assertEquals(1049899812882.075, engine.convertAsDouble(AMOUNT, "gigawatt", "kilogram force meter/hour", PLACES), 0.0);
        assertEquals(17498330214.70125, engine.convertAsDouble(AMOUNT, "gigawatt", "kilogram force meter/minute", PLACES), 0.0);
        assertEquals(2.916388369116875E8, engine.convertAsDouble(AMOUNT, "gigawatt", "kilogram force meter/second", PLACES), 0.0);
        assertEquals(1049899812882.075, engine.convertAsDouble(AMOUNT, "gigawatt", "kilopond meter/hour", PLACES), 0.0);
        assertEquals(17498330214.70125, engine.convertAsDouble(AMOUNT, "gigawatt", "kilopond meter/minute", PLACES), 0.0);
        assertEquals(2.916388369116875E8, engine.convertAsDouble(AMOUNT, "gigawatt", "kilopond meter/second", PLACES), 0.0);
        assertEquals(2860000.0, engine.convertAsDouble(AMOUNT, "gigawatt", "kilowatt", PLACES), 0.0);
        assertEquals(2860.0, engine.convertAsDouble(AMOUNT, "gigawatt", "megawatt", PLACES), 0.0);
        assertEquals(2860000000000000.0, engine.convertAsDouble(AMOUNT, "gigawatt", "microwatt", PLACES), 0.0);
        assertEquals(9758.7250765, engine.convertAsDouble(AMOUNT, "gigawatt", "million Btu/hour", PLACES), 0.0);
        assertEquals(2860000000000.0, engine.convertAsDouble(AMOUNT, "gigawatt", "milliwatt", PLACES), 0.0);
        assertEquals(2.86E18, engine.convertAsDouble(AMOUNT, "gigawatt", "nanowatt", PLACES), 0.0);
        assertEquals(10296000000000.0, engine.convertAsDouble(AMOUNT, "gigawatt", "newton meter/hour", PLACES), 0.0);
        assertEquals(171600000000.0, engine.convertAsDouble(AMOUNT, "gigawatt", "newton meter/minute", PLACES), 0.0);
        assertEquals(2860000000.0, engine.convertAsDouble(AMOUNT, "gigawatt", "newton meter/second", PLACES), 0.0);
        assertEquals(2.9e-06, engine.convertAsDouble(AMOUNT, "gigawatt", "petawatt", PLACES), 0.0);
        assertEquals(3888517.8254892, engine.convertAsDouble(AMOUNT, "gigawatt", "pferdestarke", PLACES), 0.0);
        assertEquals(2.86e+21, engine.convertAsDouble(AMOUNT, "gigawatt", "picowatt", PLACES), 0.0);
        assertEquals(2916388.3691169, engine.convertAsDouble(AMOUNT, "gigawatt", "poncelet", PLACES), 0.0);
        assertEquals(6.786883090718083E10, engine.convertAsDouble(AMOUNT, "gigawatt", "pound square foot/cubic second", PLACES), 0.0);
        assertEquals(0.00286, engine.convertAsDouble(AMOUNT, "gigawatt", "terawatt", PLACES), 0.0);
        assertEquals(813227.0897067, engine.convertAsDouble(AMOUNT, "gigawatt", "ton of refrigeration", PLACES), 0.0);
        assertEquals(2860000000.0, engine.convertAsDouble(AMOUNT, "gigawatt", "watt", PLACES), 0.0);
        assertEquals(2.8600000000000004E33, engine.convertAsDouble(AMOUNT, "gigawatt", "yoctowatt", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "gigawatt", "yottawatt", PLACES), 0.0);
        assertEquals(2.8600000000000004E30, engine.convertAsDouble(AMOUNT, "gigawatt", "zeptowatt", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "gigawatt", "zettawatt", PLACES), 0.0);
        assertEquals(77908386111.1111, engine.convertAsDouble(AMOUNT, "gram force centimeter/hour", "attowatt", PLACES), 0.0);
        assertEquals(3e-07, engine.convertAsDouble(AMOUNT, "gram force centimeter/hour", "Btu/hour", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "gram force centimeter/hour", "Btu/minute", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "gram force centimeter/hour", "Btu/second", PLACES), 0.0);
        assertEquals(6.7e-05, engine.convertAsDouble(AMOUNT, "gram force centimeter/hour", "calorie/hour", PLACES), 0.0);
        assertEquals(1.1e-06, engine.convertAsDouble(AMOUNT, "gram force centimeter/hour", "calorie/minute", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "gram force centimeter/hour", "calorie/second", PLACES), 0.0);
        assertEquals(7.8e-06, engine.convertAsDouble(AMOUNT, "gram force centimeter/hour", "centiwatt", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "gram force centimeter/hour", "cheval vapeur", PLACES), 0.0);
        assertEquals(0.0584361, engine.convertAsDouble(AMOUNT, "gram force centimeter/hour", "clusec", PLACES), 0.0);
        assertEquals(8e-07, engine.convertAsDouble(AMOUNT, "gram force centimeter/hour", "deciwatt", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "gram force centimeter/hour", "dekawatt", PLACES), 0.0);
        assertEquals(2804.7019, engine.convertAsDouble(AMOUNT, "gram force centimeter/hour", "dyne centimeter/hour", PLACES), 0.0);
        assertEquals(46.7450317, engine.convertAsDouble(AMOUNT, "gram force centimeter/hour", "dyne centimeter/minute", PLACES), 0.0);
        assertEquals(0.7790839, engine.convertAsDouble(AMOUNT, "gram force centimeter/hour", "dyne centimeter/second", PLACES), 0.0);
        assertEquals(2804.7019, engine.convertAsDouble(AMOUNT, "gram force centimeter/hour", "erg/hour", PLACES), 0.0);
        assertEquals(46.7450317, engine.convertAsDouble(AMOUNT, "gram force centimeter/hour", "erg/minute", PLACES), 0.0);
        assertEquals(0.7790839, engine.convertAsDouble(AMOUNT, "gram force centimeter/hour", "erg/second", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "gram force centimeter/hour", "exawatt", PLACES), 0.0);
        assertEquals(77908386.1111111, engine.convertAsDouble(AMOUNT, "gram force centimeter/hour", "femtowatt", PLACES), 0.0);
        assertEquals(0.0002069, engine.convertAsDouble(AMOUNT, "gram force centimeter/hour", "foot pound force/hour", PLACES), 0.0);
        assertEquals(3.4e-06, engine.convertAsDouble(AMOUNT, "gram force centimeter/hour", "foot pound force/minute", PLACES), 0.0);
        assertEquals(1e-07, engine.convertAsDouble(AMOUNT, "gram force centimeter/hour", "foot pound force/second", PLACES), 0.0);
        assertEquals(0.0066557, engine.convertAsDouble(AMOUNT, "gram force centimeter/hour", "foot poundal/hour", PLACES), 0.0);
        assertEquals(0.0001109, engine.convertAsDouble(AMOUNT, "gram force centimeter/hour", "foot poundal/minute", PLACES), 0.0);
        assertEquals(1.8e-06, engine.convertAsDouble(AMOUNT, "gram force centimeter/hour", "foot poundal/second", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "gram force centimeter/hour", "gigawatt", PLACES), 0.0);
        assertEquals(2.86, engine.convertAsDouble(AMOUNT, "gram force centimeter/hour", "gram force centimeter/hour", PLACES), 0.0);
        assertEquals(0.0476667, engine.convertAsDouble(AMOUNT, "gram force centimeter/hour", "gram force centimeter/minute", PLACES), 0.0);
        assertEquals(0.0007944, engine.convertAsDouble(AMOUNT, "gram force centimeter/hour", "gram force centimeter/second", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "gram force centimeter/hour", "hectowatt", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "gram force centimeter/hour", "horsepower", PLACES), 0.0);
        assertEquals(0.0001054, engine.convertAsDouble(AMOUNT, "gram force centimeter/hour", "inch ounce force revolution/minute", PLACES), 0.0);
        assertEquals(0.0002805, engine.convertAsDouble(AMOUNT, "gram force centimeter/hour", "joule/hour", PLACES), 0.0);
        assertEquals(4.7e-06, engine.convertAsDouble(AMOUNT, "gram force centimeter/hour", "joule/minute", PLACES), 0.0);
        assertEquals(1e-07, engine.convertAsDouble(AMOUNT, "gram force centimeter/hour", "joule/second", PLACES), 0.0);
        assertEquals(1e-07, engine.convertAsDouble(AMOUNT, "gram force centimeter/hour", "kilocalorie/hour", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "gram force centimeter/hour", "kilocalorie/minute", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "gram force centimeter/hour", "kilocalorie/second", PLACES), 0.0);
        assertEquals(2.86e-05, engine.convertAsDouble(AMOUNT, "gram force centimeter/hour", "kilogram force meter/hour", PLACES), 0.0);
        assertEquals(5e-07, engine.convertAsDouble(AMOUNT, "gram force centimeter/hour", "kilogram force meter/minute", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "gram force centimeter/hour", "kilogram force meter/second", PLACES), 0.0);
        assertEquals(2.86e-05, engine.convertAsDouble(AMOUNT, "gram force centimeter/hour", "kilopond meter/hour", PLACES), 0.0);
        assertEquals(5e-07, engine.convertAsDouble(AMOUNT, "gram force centimeter/hour", "kilopond meter/minute", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "gram force centimeter/hour", "kilopond meter/second", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "gram force centimeter/hour", "kilowatt", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "gram force centimeter/hour", "megawatt", PLACES), 0.0);
        assertEquals(0.0779084, engine.convertAsDouble(AMOUNT, "gram force centimeter/hour", "microwatt", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "gram force centimeter/hour", "million Btu/hour", PLACES), 0.0);
        assertEquals(7.79e-05, engine.convertAsDouble(AMOUNT, "gram force centimeter/hour", "milliwatt", PLACES), 0.0);
        assertEquals(77.9083861, engine.convertAsDouble(AMOUNT, "gram force centimeter/hour", "nanowatt", PLACES), 0.0);
        assertEquals(0.0002805, engine.convertAsDouble(AMOUNT, "gram force centimeter/hour", "newton meter/hour", PLACES), 0.0);
        assertEquals(4.7e-06, engine.convertAsDouble(AMOUNT, "gram force centimeter/hour", "newton meter/minute", PLACES), 0.0);
        assertEquals(1e-07, engine.convertAsDouble(AMOUNT, "gram force centimeter/hour", "newton meter/second", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "gram force centimeter/hour", "petawatt", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "gram force centimeter/hour", "pferdestarke", PLACES), 0.0);
        assertEquals(77908.3861111, engine.convertAsDouble(AMOUNT, "gram force centimeter/hour", "picowatt", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "gram force centimeter/hour", "poncelet", PLACES), 0.0);
        assertEquals(1.8e-06, engine.convertAsDouble(AMOUNT, "gram force centimeter/hour", "pound square foot/cubic second", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "gram force centimeter/hour", "terawatt", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "gram force centimeter/hour", "ton of refrigeration", PLACES), 0.0);
        assertEquals(1e-07, engine.convertAsDouble(AMOUNT, "gram force centimeter/hour", "watt", PLACES), 0.0);
        assertEquals(7.79083861111111e+16, engine.convertAsDouble(AMOUNT, "gram force centimeter/hour", "yoctowatt", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "gram force centimeter/hour", "yottawatt", PLACES), 0.0);
        assertEquals(77908386111111.11, engine.convertAsDouble(AMOUNT, "gram force centimeter/hour", "zeptowatt", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "gram force centimeter/hour", "zettawatt", PLACES), 0.0);
        assertEquals(4674503166666.666, engine.convertAsDouble(AMOUNT, "gram force centimeter/minute", "attowatt", PLACES), 0.0);
        assertEquals(1.6e-05, engine.convertAsDouble(AMOUNT, "gram force centimeter/minute", "Btu/hour", PLACES), 0.0);
        assertEquals(3e-07, engine.convertAsDouble(AMOUNT, "gram force centimeter/minute", "Btu/minute", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "gram force centimeter/minute", "Btu/second", PLACES), 0.0);
        assertEquals(0.0040193, engine.convertAsDouble(AMOUNT, "gram force centimeter/minute", "calorie/hour", PLACES), 0.0);
        assertEquals(6.7e-05, engine.convertAsDouble(AMOUNT, "gram force centimeter/minute", "calorie/minute", PLACES), 0.0);
        assertEquals(1.1e-06, engine.convertAsDouble(AMOUNT, "gram force centimeter/minute", "calorie/second", PLACES), 0.0);
        assertEquals(0.0004675, engine.convertAsDouble(AMOUNT, "gram force centimeter/minute", "centiwatt", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "gram force centimeter/minute", "cheval vapeur", PLACES), 0.0);
        assertEquals(3.5061657, engine.convertAsDouble(AMOUNT, "gram force centimeter/minute", "clusec", PLACES), 0.0);
        assertEquals(4.67e-05, engine.convertAsDouble(AMOUNT, "gram force centimeter/minute", "deciwatt", PLACES), 0.0);
        assertEquals(5e-07, engine.convertAsDouble(AMOUNT, "gram force centimeter/minute", "dekawatt", PLACES), 0.0);
        assertEquals(168282.114, engine.convertAsDouble(AMOUNT, "gram force centimeter/minute", "dyne centimeter/hour", PLACES), 0.0);
        assertEquals(2804.7019, engine.convertAsDouble(AMOUNT, "gram force centimeter/minute", "dyne centimeter/minute", PLACES), 0.0);
        assertEquals(46.7450317, engine.convertAsDouble(AMOUNT, "gram force centimeter/minute", "dyne centimeter/second", PLACES), 0.0);
        assertEquals(168282.114, engine.convertAsDouble(AMOUNT, "gram force centimeter/minute", "erg/hour", PLACES), 0.0);
        assertEquals(2804.7019, engine.convertAsDouble(AMOUNT, "gram force centimeter/minute", "erg/minute", PLACES), 0.0);
        assertEquals(46.7450317, engine.convertAsDouble(AMOUNT, "gram force centimeter/minute", "erg/second", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "gram force centimeter/minute", "exawatt", PLACES), 0.0);
        assertEquals(4674503166.666666, engine.convertAsDouble(AMOUNT, "gram force centimeter/minute", "femtowatt", PLACES), 0.0);
        assertEquals(0.0124119, engine.convertAsDouble(AMOUNT, "gram force centimeter/minute", "foot pound force/hour", PLACES), 0.0);
        assertEquals(0.0002069, engine.convertAsDouble(AMOUNT, "gram force centimeter/minute", "foot pound force/minute", PLACES), 0.0);
        assertEquals(3.4e-06, engine.convertAsDouble(AMOUNT, "gram force centimeter/minute", "foot pound force/second", PLACES), 0.0);
        assertEquals(0.3993395, engine.convertAsDouble(AMOUNT, "gram force centimeter/minute", "foot poundal/hour", PLACES), 0.0);
        assertEquals(0.0066557, engine.convertAsDouble(AMOUNT, "gram force centimeter/minute", "foot poundal/minute", PLACES), 0.0);
        assertEquals(0.0001109, engine.convertAsDouble(AMOUNT, "gram force centimeter/minute", "foot poundal/second", PLACES), 0.0);
    }

    @Test
    public void testAliases() {
        assertEquals(1749833.0214701, engine.convertAsDouble(AMOUNT, "w", "g force cm/min", PLACES), 0.0);
        assertEquals(1.2E-5, engine.convertAsDouble(AMOUNT, "cals per sec", "mw", PLACES), 0.0);
        assertEquals(2.9E-6, engine.convertAsDouble(AMOUNT, "nw", "mlw", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "newton m/min", "gw", PLACES), 0.0);
        assertEquals(2132.7016282, engine.convertAsDouble(AMOUNT, "hp", "j/sec", PLACES), 0.0);
    }

    @Test
    public void testUnitGroup() {
        Conversion conversion = engine.convert(AMOUNT, "watt", "clusec");
        assertEquals("power", conversion.getUnitGroup().getName());
    }

    @Test
    public void testInvalidConversion() {
        assertThrows(IllegalArgumentException.class, () -> {
            engine.convertAsDouble(AMOUNT, "watts", "mins");
        });
    }
}