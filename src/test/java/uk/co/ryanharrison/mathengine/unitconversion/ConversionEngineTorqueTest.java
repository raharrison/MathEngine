package uk.co.ryanharrison.mathengine.unitconversion;

import org.junit.jupiter.api.Test;
import uk.co.ryanharrison.mathengine.unitconversion.units.Conversion;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertThrows;

public class ConversionEngineTorqueTest extends ConversionEngineTest {

    @Test
    public void testTorque() {
        assertEquals(2.86, engine.convertAsDouble(AMOUNT, "dyne centimeter", "dyne centimeter", PLACES), 0.0);
        assertEquals(0.0029164, engine.convertAsDouble(AMOUNT, "dyne centimeter", "gram centimeter", PLACES), 0.0);
        assertEquals(2.9e-06, engine.convertAsDouble(AMOUNT, "dyne centimeter", "kilogram centimeter", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "dyne centimeter", "kilogram meter", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "dyne centimeter", "kilonewton meter", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "dyne centimeter", "kilopond meter", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "dyne centimeter", "meganewton meter", PLACES), 0.0);
        assertEquals(0.286, engine.convertAsDouble(AMOUNT, "dyne centimeter", "micronewton meter", PLACES), 0.0);
        assertEquals(0.000286, engine.convertAsDouble(AMOUNT, "dyne centimeter", "millinewton meter", PLACES), 0.0);
        assertEquals(2.86e-05, engine.convertAsDouble(AMOUNT, "dyne centimeter", "newton centimeter", PLACES), 0.0);
        assertEquals(3e-07, engine.convertAsDouble(AMOUNT, "dyne centimeter", "newton meter", PLACES), 0.0);
        assertEquals(3.4e-06, engine.convertAsDouble(AMOUNT, "dyne centimeter", "ounce foot", PLACES), 0.0);
        assertEquals(4.05e-05, engine.convertAsDouble(AMOUNT, "dyne centimeter", "ounce inch", PLACES), 0.0);
        assertEquals(2e-07, engine.convertAsDouble(AMOUNT, "dyne centimeter", "pound foot", PLACES), 0.0);
        assertEquals(6.8e-06, engine.convertAsDouble(AMOUNT, "dyne centimeter", "poundal foot", PLACES), 0.0);
        assertEquals(2.5e-06, engine.convertAsDouble(AMOUNT, "dyne centimeter", "pound inch", PLACES), 0.0);
        assertEquals(2804.7019, engine.convertAsDouble(AMOUNT, "gram centimeter", "dyne centimeter", PLACES), 0.0);
        assertEquals(2.86, engine.convertAsDouble(AMOUNT, "gram centimeter", "gram centimeter", PLACES), 0.0);
        assertEquals(0.00286, engine.convertAsDouble(AMOUNT, "gram centimeter", "kilogram centimeter", PLACES), 0.0);
        assertEquals(2.86e-05, engine.convertAsDouble(AMOUNT, "gram centimeter", "kilogram meter", PLACES), 0.0);
        assertEquals(3e-07, engine.convertAsDouble(AMOUNT, "gram centimeter", "kilonewton meter", PLACES), 0.0);
        assertEquals(2.86e-05, engine.convertAsDouble(AMOUNT, "gram centimeter", "kilopond meter", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "gram centimeter", "meganewton meter", PLACES), 0.0);
        assertEquals(280.47019, engine.convertAsDouble(AMOUNT, "gram centimeter", "micronewton meter", PLACES), 0.0);
        assertEquals(0.2804702, engine.convertAsDouble(AMOUNT, "gram centimeter", "millinewton meter", PLACES), 0.0);
        assertEquals(0.028047, engine.convertAsDouble(AMOUNT, "gram centimeter", "newton centimeter", PLACES), 0.0);
        assertEquals(0.0002805, engine.convertAsDouble(AMOUNT, "gram centimeter", "newton meter", PLACES), 0.0);
        assertEquals(0.0033098, engine.convertAsDouble(AMOUNT, "gram centimeter", "ounce foot", PLACES), 0.0);
        assertEquals(0.0397179, engine.convertAsDouble(AMOUNT, "gram centimeter", "ounce inch", PLACES), 0.0);
        assertEquals(0.0002069, engine.convertAsDouble(AMOUNT, "gram centimeter", "pound foot", PLACES), 0.0);
        assertEquals(0.0066557, engine.convertAsDouble(AMOUNT, "gram centimeter", "poundal foot", PLACES), 0.0);
        assertEquals(0.0024824, engine.convertAsDouble(AMOUNT, "gram centimeter", "pound inch", PLACES), 0.0);
        assertEquals(2804701.9, engine.convertAsDouble(AMOUNT, "kilogram centimeter", "dyne centimeter", PLACES), 0.0);
        assertEquals(2860.0, engine.convertAsDouble(AMOUNT, "kilogram centimeter", "gram centimeter", PLACES), 0.0);
        assertEquals(2.86, engine.convertAsDouble(AMOUNT, "kilogram centimeter", "kilogram centimeter", PLACES), 0.0);
        assertEquals(0.0286, engine.convertAsDouble(AMOUNT, "kilogram centimeter", "kilogram meter", PLACES), 0.0);
        assertEquals(0.0002805, engine.convertAsDouble(AMOUNT, "kilogram centimeter", "kilonewton meter", PLACES), 0.0);
        assertEquals(0.0286, engine.convertAsDouble(AMOUNT, "kilogram centimeter", "kilopond meter", PLACES), 0.0);
        assertEquals(3e-07, engine.convertAsDouble(AMOUNT, "kilogram centimeter", "meganewton meter", PLACES), 0.0);
        assertEquals(280470.19, engine.convertAsDouble(AMOUNT, "kilogram centimeter", "micronewton meter", PLACES), 0.0);
        assertEquals(280.47019, engine.convertAsDouble(AMOUNT, "kilogram centimeter", "millinewton meter", PLACES), 0.0);
        assertEquals(28.047019, engine.convertAsDouble(AMOUNT, "kilogram centimeter", "newton centimeter", PLACES), 0.0);
        assertEquals(0.2804702, engine.convertAsDouble(AMOUNT, "kilogram centimeter", "newton meter", PLACES), 0.0);
        assertEquals(3.3098271, engine.convertAsDouble(AMOUNT, "kilogram centimeter", "ounce foot", PLACES), 0.0);
        assertEquals(39.7179256, engine.convertAsDouble(AMOUNT, "kilogram centimeter", "ounce inch", PLACES), 0.0);
        assertEquals(0.2068642, engine.convertAsDouble(AMOUNT, "kilogram centimeter", "pound foot", PLACES), 0.0);
        assertEquals(6.6556587, engine.convertAsDouble(AMOUNT, "kilogram centimeter", "poundal foot", PLACES), 0.0);
        assertEquals(2.4823703, engine.convertAsDouble(AMOUNT, "kilogram centimeter", "pound inch", PLACES), 0.0);
        assertEquals(280470190.0, engine.convertAsDouble(AMOUNT, "kilogram meter", "dyne centimeter", PLACES), 0.0);
        assertEquals(286000.0, engine.convertAsDouble(AMOUNT, "kilogram meter", "gram centimeter", PLACES), 0.0);
        assertEquals(286.0, engine.convertAsDouble(AMOUNT, "kilogram meter", "kilogram centimeter", PLACES), 0.0);
        assertEquals(2.86, engine.convertAsDouble(AMOUNT, "kilogram meter", "kilogram meter", PLACES), 0.0);
        assertEquals(0.028047, engine.convertAsDouble(AMOUNT, "kilogram meter", "kilonewton meter", PLACES), 0.0);
        assertEquals(2.86, engine.convertAsDouble(AMOUNT, "kilogram meter", "kilopond meter", PLACES), 0.0);
        assertEquals(2.8e-05, engine.convertAsDouble(AMOUNT, "kilogram meter", "meganewton meter", PLACES), 0.0);
        assertEquals(28047019.0, engine.convertAsDouble(AMOUNT, "kilogram meter", "micronewton meter", PLACES), 0.0);
        assertEquals(28047.019, engine.convertAsDouble(AMOUNT, "kilogram meter", "millinewton meter", PLACES), 0.0);
        assertEquals(2804.7019, engine.convertAsDouble(AMOUNT, "kilogram meter", "newton centimeter", PLACES), 0.0);
        assertEquals(28.047019, engine.convertAsDouble(AMOUNT, "kilogram meter", "newton meter", PLACES), 0.0);
        assertEquals(330.9827129, engine.convertAsDouble(AMOUNT, "kilogram meter", "ounce foot", PLACES), 0.0);
        assertEquals(3971.7925552, engine.convertAsDouble(AMOUNT, "kilogram meter", "ounce inch", PLACES), 0.0);
        assertEquals(20.6864196, engine.convertAsDouble(AMOUNT, "kilogram meter", "pound foot", PLACES), 0.0);
        assertEquals(665.565871, engine.convertAsDouble(AMOUNT, "kilogram meter", "poundal foot", PLACES), 0.0);
        assertEquals(248.2370347, engine.convertAsDouble(AMOUNT, "kilogram meter", "pound inch", PLACES), 0.0);
        assertEquals(28600000000.0, engine.convertAsDouble(AMOUNT, "kilonewton meter", "dyne centimeter", PLACES), 0.0);
        assertEquals(29163883.6911687, engine.convertAsDouble(AMOUNT, "kilonewton meter", "gram centimeter", PLACES), 0.0);
        assertEquals(29163.8836912, engine.convertAsDouble(AMOUNT, "kilonewton meter", "kilogram centimeter", PLACES), 0.0);
        assertEquals(291.6388369, engine.convertAsDouble(AMOUNT, "kilonewton meter", "kilogram meter", PLACES), 0.0);
        assertEquals(2.86, engine.convertAsDouble(AMOUNT, "kilonewton meter", "kilonewton meter", PLACES), 0.0);
        assertEquals(291.6388369, engine.convertAsDouble(AMOUNT, "kilonewton meter", "kilopond meter", PLACES), 0.0);
        assertEquals(0.00286, engine.convertAsDouble(AMOUNT, "kilonewton meter", "meganewton meter", PLACES), 0.0);
        assertEquals(2860000000.0, engine.convertAsDouble(AMOUNT, "kilonewton meter", "micronewton meter", PLACES), 0.0);
        assertEquals(2860000.0, engine.convertAsDouble(AMOUNT, "kilonewton meter", "millinewton meter", PLACES), 0.0);
        assertEquals(286000.0, engine.convertAsDouble(AMOUNT, "kilonewton meter", "newton centimeter", PLACES), 0.0);
        assertEquals(2860.0, engine.convertAsDouble(AMOUNT, "kilonewton meter", "newton meter", PLACES), 0.0);
        assertEquals(33750.8438596, engine.convertAsDouble(AMOUNT, "kilonewton meter", "ounce foot", PLACES), 0.0);
        assertEquals(405010.1263152, engine.convertAsDouble(AMOUNT, "kilonewton meter", "ounce inch", PLACES), 0.0);
        assertEquals(2109.4277412, engine.convertAsDouble(AMOUNT, "kilonewton meter", "pound foot", PLACES), 0.0);
        assertEquals(67868.8309471, engine.convertAsDouble(AMOUNT, "kilonewton meter", "poundal foot", PLACES), 0.0);
        assertEquals(25313.1328947, engine.convertAsDouble(AMOUNT, "kilonewton meter", "pound inch", PLACES), 0.0);
        assertEquals(280470190.0, engine.convertAsDouble(AMOUNT, "kilopond meter", "dyne centimeter", PLACES), 0.0);
        assertEquals(286000.0, engine.convertAsDouble(AMOUNT, "kilopond meter", "gram centimeter", PLACES), 0.0);
        assertEquals(286.0, engine.convertAsDouble(AMOUNT, "kilopond meter", "kilogram centimeter", PLACES), 0.0);
        assertEquals(2.86, engine.convertAsDouble(AMOUNT, "kilopond meter", "kilogram meter", PLACES), 0.0);
        assertEquals(0.028047, engine.convertAsDouble(AMOUNT, "kilopond meter", "kilonewton meter", PLACES), 0.0);
        assertEquals(2.86, engine.convertAsDouble(AMOUNT, "kilopond meter", "kilopond meter", PLACES), 0.0);
        assertEquals(2.8e-05, engine.convertAsDouble(AMOUNT, "kilopond meter", "meganewton meter", PLACES), 0.0);
        assertEquals(28047019.0, engine.convertAsDouble(AMOUNT, "kilopond meter", "micronewton meter", PLACES), 0.0);
        assertEquals(28047.019, engine.convertAsDouble(AMOUNT, "kilopond meter", "millinewton meter", PLACES), 0.0);
        assertEquals(2804.7019, engine.convertAsDouble(AMOUNT, "kilopond meter", "newton centimeter", PLACES), 0.0);
        assertEquals(28.047019, engine.convertAsDouble(AMOUNT, "kilopond meter", "newton meter", PLACES), 0.0);
        assertEquals(330.9827129, engine.convertAsDouble(AMOUNT, "kilopond meter", "ounce foot", PLACES), 0.0);
        assertEquals(3971.7925552, engine.convertAsDouble(AMOUNT, "kilopond meter", "ounce inch", PLACES), 0.0);
        assertEquals(20.6864196, engine.convertAsDouble(AMOUNT, "kilopond meter", "pound foot", PLACES), 0.0);
        assertEquals(665.565871, engine.convertAsDouble(AMOUNT, "kilopond meter", "poundal foot", PLACES), 0.0);
        assertEquals(248.2370347, engine.convertAsDouble(AMOUNT, "kilopond meter", "pound inch", PLACES), 0.0);
        assertEquals(28600000000000.0, engine.convertAsDouble(AMOUNT, "meganewton meter", "dyne centimeter", PLACES), 0.0);
        assertEquals(29163883691.168747, engine.convertAsDouble(AMOUNT, "meganewton meter", "gram centimeter", PLACES), 0.0);
        assertEquals(29163883.6911687, engine.convertAsDouble(AMOUNT, "meganewton meter", "kilogram centimeter", PLACES), 0.0);
        assertEquals(291638.8369117, engine.convertAsDouble(AMOUNT, "meganewton meter", "kilogram meter", PLACES), 0.0);
        assertEquals(2860.0, engine.convertAsDouble(AMOUNT, "meganewton meter", "kilonewton meter", PLACES), 0.0);
        assertEquals(291638.8369117, engine.convertAsDouble(AMOUNT, "meganewton meter", "kilopond meter", PLACES), 0.0);
        assertEquals(2.86, engine.convertAsDouble(AMOUNT, "meganewton meter", "meganewton meter", PLACES), 0.0);
        assertEquals(2860000000000.0, engine.convertAsDouble(AMOUNT, "meganewton meter", "micronewton meter", PLACES), 0.0);
        assertEquals(2860000000.0, engine.convertAsDouble(AMOUNT, "meganewton meter", "millinewton meter", PLACES), 0.0);
        assertEquals(286000000.0, engine.convertAsDouble(AMOUNT, "meganewton meter", "newton centimeter", PLACES), 0.0);
        assertEquals(2860000.0, engine.convertAsDouble(AMOUNT, "meganewton meter", "newton meter", PLACES), 0.0);
        assertEquals(3.3750843859604E7, engine.convertAsDouble(AMOUNT, "meganewton meter", "ounce foot", PLACES), 0.0);
        assertEquals(405010126.3152474, engine.convertAsDouble(AMOUNT, "meganewton meter", "ounce inch", PLACES), 0.0);
        assertEquals(2109427.7412252, engine.convertAsDouble(AMOUNT, "meganewton meter", "pound foot", PLACES), 0.0);
        assertEquals(67868830.9470993, engine.convertAsDouble(AMOUNT, "meganewton meter", "poundal foot", PLACES), 0.0);
        assertEquals(25313132.894703, engine.convertAsDouble(AMOUNT, "meganewton meter", "pound inch", PLACES), 0.0);
        assertEquals(28.6, engine.convertAsDouble(AMOUNT, "micronewton meter", "dyne centimeter", PLACES), 0.0);
        assertEquals(0.0291639, engine.convertAsDouble(AMOUNT, "micronewton meter", "gram centimeter", PLACES), 0.0);
        assertEquals(2.92e-05, engine.convertAsDouble(AMOUNT, "micronewton meter", "kilogram centimeter", PLACES), 0.0);
        assertEquals(3e-07, engine.convertAsDouble(AMOUNT, "micronewton meter", "kilogram meter", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "micronewton meter", "kilonewton meter", PLACES), 0.0);
        assertEquals(3e-07, engine.convertAsDouble(AMOUNT, "micronewton meter", "kilopond meter", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "micronewton meter", "meganewton meter", PLACES), 0.0);
        assertEquals(2.86, engine.convertAsDouble(AMOUNT, "micronewton meter", "micronewton meter", PLACES), 0.0);
        assertEquals(0.00286, engine.convertAsDouble(AMOUNT, "micronewton meter", "millinewton meter", PLACES), 0.0);
        assertEquals(0.000286, engine.convertAsDouble(AMOUNT, "micronewton meter", "newton centimeter", PLACES), 0.0);
        assertEquals(2.9e-06, engine.convertAsDouble(AMOUNT, "micronewton meter", "newton meter", PLACES), 0.0);
        assertEquals(3.38e-05, engine.convertAsDouble(AMOUNT, "micronewton meter", "ounce foot", PLACES), 0.0);
        assertEquals(0.000405, engine.convertAsDouble(AMOUNT, "micronewton meter", "ounce inch", PLACES), 0.0);
        assertEquals(2.1e-06, engine.convertAsDouble(AMOUNT, "micronewton meter", "pound foot", PLACES), 0.0);
        assertEquals(6.79e-05, engine.convertAsDouble(AMOUNT, "micronewton meter", "poundal foot", PLACES), 0.0);
        assertEquals(2.53e-05, engine.convertAsDouble(AMOUNT, "micronewton meter", "pound inch", PLACES), 0.0);
        assertEquals(28600.0, engine.convertAsDouble(AMOUNT, "millinewton meter", "dyne centimeter", PLACES), 0.0);
        assertEquals(29.1638837, engine.convertAsDouble(AMOUNT, "millinewton meter", "gram centimeter", PLACES), 0.0);
        assertEquals(0.0291639, engine.convertAsDouble(AMOUNT, "millinewton meter", "kilogram centimeter", PLACES), 0.0);
        assertEquals(0.0002916, engine.convertAsDouble(AMOUNT, "millinewton meter", "kilogram meter", PLACES), 0.0);
        assertEquals(2.9e-06, engine.convertAsDouble(AMOUNT, "millinewton meter", "kilonewton meter", PLACES), 0.0);
        assertEquals(0.0002916, engine.convertAsDouble(AMOUNT, "millinewton meter", "kilopond meter", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "millinewton meter", "meganewton meter", PLACES), 0.0);
        assertEquals(2860.0, engine.convertAsDouble(AMOUNT, "millinewton meter", "micronewton meter", PLACES), 0.0);
        assertEquals(2.86, engine.convertAsDouble(AMOUNT, "millinewton meter", "millinewton meter", PLACES), 0.0);
        assertEquals(0.286, engine.convertAsDouble(AMOUNT, "millinewton meter", "newton centimeter", PLACES), 0.0);
        assertEquals(0.00286, engine.convertAsDouble(AMOUNT, "millinewton meter", "newton meter", PLACES), 0.0);
        assertEquals(0.0337508, engine.convertAsDouble(AMOUNT, "millinewton meter", "ounce foot", PLACES), 0.0);
        assertEquals(0.4050101, engine.convertAsDouble(AMOUNT, "millinewton meter", "ounce inch", PLACES), 0.0);
        assertEquals(0.0021094, engine.convertAsDouble(AMOUNT, "millinewton meter", "pound foot", PLACES), 0.0);
        assertEquals(0.0678688, engine.convertAsDouble(AMOUNT, "millinewton meter", "poundal foot", PLACES), 0.0);
        assertEquals(0.0253131, engine.convertAsDouble(AMOUNT, "millinewton meter", "pound inch", PLACES), 0.0);
        assertEquals(286000.0, engine.convertAsDouble(AMOUNT, "newton centimeter", "dyne centimeter", PLACES), 0.0);
        assertEquals(291.6388369, engine.convertAsDouble(AMOUNT, "newton centimeter", "gram centimeter", PLACES), 0.0);
        assertEquals(0.2916388, engine.convertAsDouble(AMOUNT, "newton centimeter", "kilogram centimeter", PLACES), 0.0);
        assertEquals(0.0029164, engine.convertAsDouble(AMOUNT, "newton centimeter", "kilogram meter", PLACES), 0.0);
        assertEquals(2.86e-05, engine.convertAsDouble(AMOUNT, "newton centimeter", "kilonewton meter", PLACES), 0.0);
        assertEquals(0.0029164, engine.convertAsDouble(AMOUNT, "newton centimeter", "kilopond meter", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "newton centimeter", "meganewton meter", PLACES), 0.0);
        assertEquals(28600.0, engine.convertAsDouble(AMOUNT, "newton centimeter", "micronewton meter", PLACES), 0.0);
        assertEquals(28.6, engine.convertAsDouble(AMOUNT, "newton centimeter", "millinewton meter", PLACES), 0.0);
        assertEquals(2.86, engine.convertAsDouble(AMOUNT, "newton centimeter", "newton centimeter", PLACES), 0.0);
        assertEquals(0.0286, engine.convertAsDouble(AMOUNT, "newton centimeter", "newton meter", PLACES), 0.0);
        assertEquals(0.3375084, engine.convertAsDouble(AMOUNT, "newton centimeter", "ounce foot", PLACES), 0.0);
        assertEquals(4.0501013, engine.convertAsDouble(AMOUNT, "newton centimeter", "ounce inch", PLACES), 0.0);
        assertEquals(0.0210943, engine.convertAsDouble(AMOUNT, "newton centimeter", "pound foot", PLACES), 0.0);
        assertEquals(0.6786883, engine.convertAsDouble(AMOUNT, "newton centimeter", "poundal foot", PLACES), 0.0);
        assertEquals(0.2531313, engine.convertAsDouble(AMOUNT, "newton centimeter", "pound inch", PLACES), 0.0);
        assertEquals(28600000.0, engine.convertAsDouble(AMOUNT, "newton meter", "dyne centimeter", PLACES), 0.0);
        assertEquals(29163.8836912, engine.convertAsDouble(AMOUNT, "newton meter", "gram centimeter", PLACES), 0.0);
        assertEquals(29.1638837, engine.convertAsDouble(AMOUNT, "newton meter", "kilogram centimeter", PLACES), 0.0);
        assertEquals(0.2916388, engine.convertAsDouble(AMOUNT, "newton meter", "kilogram meter", PLACES), 0.0);
        assertEquals(0.00286, engine.convertAsDouble(AMOUNT, "newton meter", "kilonewton meter", PLACES), 0.0);
        assertEquals(0.2916388, engine.convertAsDouble(AMOUNT, "newton meter", "kilopond meter", PLACES), 0.0);
        assertEquals(2.9e-06, engine.convertAsDouble(AMOUNT, "newton meter", "meganewton meter", PLACES), 0.0);
        assertEquals(2860000.0, engine.convertAsDouble(AMOUNT, "newton meter", "micronewton meter", PLACES), 0.0);
        assertEquals(2860.0, engine.convertAsDouble(AMOUNT, "newton meter", "millinewton meter", PLACES), 0.0);
        assertEquals(286.0, engine.convertAsDouble(AMOUNT, "newton meter", "newton centimeter", PLACES), 0.0);
        assertEquals(2.86, engine.convertAsDouble(AMOUNT, "newton meter", "newton meter", PLACES), 0.0);
        assertEquals(33.7508439, engine.convertAsDouble(AMOUNT, "newton meter", "ounce foot", PLACES), 0.0);
        assertEquals(405.0101263, engine.convertAsDouble(AMOUNT, "newton meter", "ounce inch", PLACES), 0.0);
        assertEquals(2.1094277, engine.convertAsDouble(AMOUNT, "newton meter", "pound foot", PLACES), 0.0);
        assertEquals(67.8688309, engine.convertAsDouble(AMOUNT, "newton meter", "poundal foot", PLACES), 0.0);
        assertEquals(25.3131329, engine.convertAsDouble(AMOUNT, "newton meter", "pound inch", PLACES), 0.0);
        assertEquals(2423524.5892, engine.convertAsDouble(AMOUNT, "ounce foot", "dyne centimeter", PLACES), 0.0);
        assertEquals(2471.3073162, engine.convertAsDouble(AMOUNT, "ounce foot", "gram centimeter", PLACES), 0.0);
        assertEquals(2.4713073, engine.convertAsDouble(AMOUNT, "ounce foot", "kilogram centimeter", PLACES), 0.0);
        assertEquals(0.0247131, engine.convertAsDouble(AMOUNT, "ounce foot", "kilogram meter", PLACES), 0.0);
        assertEquals(0.0002424, engine.convertAsDouble(AMOUNT, "ounce foot", "kilonewton meter", PLACES), 0.0);
        assertEquals(0.0247131, engine.convertAsDouble(AMOUNT, "ounce foot", "kilopond meter", PLACES), 0.0);
        assertEquals(2e-07, engine.convertAsDouble(AMOUNT, "ounce foot", "meganewton meter", PLACES), 0.0);
        assertEquals(242352.45892, engine.convertAsDouble(AMOUNT, "ounce foot", "micronewton meter", PLACES), 0.0);
        assertEquals(242.3524589, engine.convertAsDouble(AMOUNT, "ounce foot", "millinewton meter", PLACES), 0.0);
        assertEquals(24.2352459, engine.convertAsDouble(AMOUNT, "ounce foot", "newton centimeter", PLACES), 0.0);
        assertEquals(0.2423525, engine.convertAsDouble(AMOUNT, "ounce foot", "newton meter", PLACES), 0.0);
        assertEquals(2.86, engine.convertAsDouble(AMOUNT, "ounce foot", "ounce foot", PLACES), 0.0);
        assertEquals(34.32, engine.convertAsDouble(AMOUNT, "ounce foot", "ounce inch", PLACES), 0.0);
        assertEquals(0.17875, engine.convertAsDouble(AMOUNT, "ounce foot", "pound foot", PLACES), 0.0);
        assertEquals(5.7511112, engine.convertAsDouble(AMOUNT, "ounce foot", "poundal foot", PLACES), 0.0);
        assertEquals(2.145, engine.convertAsDouble(AMOUNT, "ounce foot", "pound inch", PLACES), 0.0);
        assertEquals(201960.3824333, engine.convertAsDouble(AMOUNT, "ounce inch", "dyne centimeter", PLACES), 0.0);
        assertEquals(205.9422763, engine.convertAsDouble(AMOUNT, "ounce inch", "gram centimeter", PLACES), 0.0);
        assertEquals(0.2059423, engine.convertAsDouble(AMOUNT, "ounce inch", "kilogram centimeter", PLACES), 0.0);
        assertEquals(0.0020594, engine.convertAsDouble(AMOUNT, "ounce inch", "kilogram meter", PLACES), 0.0);
        assertEquals(2.02e-05, engine.convertAsDouble(AMOUNT, "ounce inch", "kilonewton meter", PLACES), 0.0);
        assertEquals(0.0020594, engine.convertAsDouble(AMOUNT, "ounce inch", "kilopond meter", PLACES), 0.0);
        assertEquals(0.0, engine.convertAsDouble(AMOUNT, "ounce inch", "meganewton meter", PLACES), 0.0);
        assertEquals(20196.0382433, engine.convertAsDouble(AMOUNT, "ounce inch", "micronewton meter", PLACES), 0.0);
        assertEquals(20.1960382, engine.convertAsDouble(AMOUNT, "ounce inch", "millinewton meter", PLACES), 0.0);
        assertEquals(2.0196038, engine.convertAsDouble(AMOUNT, "ounce inch", "newton centimeter", PLACES), 0.0);
        assertEquals(0.020196, engine.convertAsDouble(AMOUNT, "ounce inch", "newton meter", PLACES), 0.0);
        assertEquals(0.2383333, engine.convertAsDouble(AMOUNT, "ounce inch", "ounce foot", PLACES), 0.0);
        assertEquals(2.86, engine.convertAsDouble(AMOUNT, "ounce inch", "ounce inch", PLACES), 0.0);
        assertEquals(0.0148958, engine.convertAsDouble(AMOUNT, "ounce inch", "pound foot", PLACES), 0.0);
        assertEquals(0.4792593, engine.convertAsDouble(AMOUNT, "ounce inch", "poundal foot", PLACES), 0.0);
        assertEquals(0.17875, engine.convertAsDouble(AMOUNT, "ounce inch", "pound inch", PLACES), 0.0);
        assertEquals(38776393.4272, engine.convertAsDouble(AMOUNT, "pound foot", "dyne centimeter", PLACES), 0.0);
        assertEquals(39540.9170585, engine.convertAsDouble(AMOUNT, "pound foot", "gram centimeter", PLACES), 0.0);
        assertEquals(39.5409171, engine.convertAsDouble(AMOUNT, "pound foot", "kilogram centimeter", PLACES), 0.0);
        assertEquals(0.3954092, engine.convertAsDouble(AMOUNT, "pound foot", "kilogram meter", PLACES), 0.0);
        assertEquals(0.0038776, engine.convertAsDouble(AMOUNT, "pound foot", "kilonewton meter", PLACES), 0.0);
        assertEquals(0.3954092, engine.convertAsDouble(AMOUNT, "pound foot", "kilopond meter", PLACES), 0.0);
        assertEquals(3.9e-06, engine.convertAsDouble(AMOUNT, "pound foot", "meganewton meter", PLACES), 0.0);
        assertEquals(3877639.34272, engine.convertAsDouble(AMOUNT, "pound foot", "micronewton meter", PLACES), 0.0);
        assertEquals(3877.6393427, engine.convertAsDouble(AMOUNT, "pound foot", "millinewton meter", PLACES), 0.0);
        assertEquals(387.7639343, engine.convertAsDouble(AMOUNT, "pound foot", "newton centimeter", PLACES), 0.0);
        assertEquals(3.8776393, engine.convertAsDouble(AMOUNT, "pound foot", "newton meter", PLACES), 0.0);
        assertEquals(45.76, engine.convertAsDouble(AMOUNT, "pound foot", "ounce foot", PLACES), 0.0);
        assertEquals(549.12, engine.convertAsDouble(AMOUNT, "pound foot", "ounce inch", PLACES), 0.0);
        assertEquals(2.86, engine.convertAsDouble(AMOUNT, "pound foot", "pound foot", PLACES), 0.0);
        assertEquals(92.0177794, engine.convertAsDouble(AMOUNT, "pound foot", "poundal foot", PLACES), 0.0);
        assertEquals(34.32, engine.convertAsDouble(AMOUNT, "pound foot", "pound inch", PLACES), 0.0);
        assertEquals(1205207.1452911, engine.convertAsDouble(AMOUNT, "poundal foot", "dyne centimeter", PLACES), 0.0);
        assertEquals(1228.9692661, engine.convertAsDouble(AMOUNT, "poundal foot", "gram centimeter", PLACES), 0.0);
        assertEquals(1.2289693, engine.convertAsDouble(AMOUNT, "poundal foot", "kilogram centimeter", PLACES), 0.0);
        assertEquals(0.0122897, engine.convertAsDouble(AMOUNT, "poundal foot", "kilogram meter", PLACES), 0.0);
        assertEquals(0.0001205, engine.convertAsDouble(AMOUNT, "poundal foot", "kilonewton meter", PLACES), 0.0);
        assertEquals(0.0122897, engine.convertAsDouble(AMOUNT, "poundal foot", "kilopond meter", PLACES), 0.0);
        assertEquals(1e-07, engine.convertAsDouble(AMOUNT, "poundal foot", "meganewton meter", PLACES), 0.0);
        assertEquals(120520.7145291, engine.convertAsDouble(AMOUNT, "poundal foot", "micronewton meter", PLACES), 0.0);
        assertEquals(120.5207145, engine.convertAsDouble(AMOUNT, "poundal foot", "millinewton meter", PLACES), 0.0);
        assertEquals(12.0520715, engine.convertAsDouble(AMOUNT, "poundal foot", "newton centimeter", PLACES), 0.0);
        assertEquals(0.1205207, engine.convertAsDouble(AMOUNT, "poundal foot", "newton meter", PLACES), 0.0);
        assertEquals(1.4222643, engine.convertAsDouble(AMOUNT, "poundal foot", "ounce foot", PLACES), 0.0);
        assertEquals(17.0671713, engine.convertAsDouble(AMOUNT, "poundal foot", "ounce inch", PLACES), 0.0);
        assertEquals(0.0888915, engine.convertAsDouble(AMOUNT, "poundal foot", "pound foot", PLACES), 0.0);
        assertEquals(2.86, engine.convertAsDouble(AMOUNT, "poundal foot", "poundal foot", PLACES), 0.0);
        assertEquals(1.0666982, engine.convertAsDouble(AMOUNT, "poundal foot", "pound inch", PLACES), 0.0);
        assertEquals(3231366.1189333, engine.convertAsDouble(AMOUNT, "pound inch", "dyne centimeter", PLACES), 0.0);
        assertEquals(3295.0764215, engine.convertAsDouble(AMOUNT, "pound inch", "gram centimeter", PLACES), 0.0);
        assertEquals(3.2950764, engine.convertAsDouble(AMOUNT, "pound inch", "kilogram centimeter", PLACES), 0.0);
        assertEquals(0.0329508, engine.convertAsDouble(AMOUNT, "pound inch", "kilogram meter", PLACES), 0.0);
        assertEquals(0.0003231, engine.convertAsDouble(AMOUNT, "pound inch", "kilonewton meter", PLACES), 0.0);
        assertEquals(0.0329508, engine.convertAsDouble(AMOUNT, "pound inch", "kilopond meter", PLACES), 0.0);
        assertEquals(3e-07, engine.convertAsDouble(AMOUNT, "pound inch", "meganewton meter", PLACES), 0.0);
        assertEquals(323136.6118933, engine.convertAsDouble(AMOUNT, "pound inch", "micronewton meter", PLACES), 0.0);
        assertEquals(323.1366119, engine.convertAsDouble(AMOUNT, "pound inch", "millinewton meter", PLACES), 0.0);
        assertEquals(32.3136612, engine.convertAsDouble(AMOUNT, "pound inch", "newton centimeter", PLACES), 0.0);
        assertEquals(0.3231366, engine.convertAsDouble(AMOUNT, "pound inch", "newton meter", PLACES), 0.0);
        assertEquals(3.8133333, engine.convertAsDouble(AMOUNT, "pound inch", "ounce foot", PLACES), 0.0);
        assertEquals(45.76, engine.convertAsDouble(AMOUNT, "pound inch", "ounce inch", PLACES), 0.0);
        assertEquals(0.2383333, engine.convertAsDouble(AMOUNT, "pound inch", "pound foot", PLACES), 0.0);
        assertEquals(7.6681483, engine.convertAsDouble(AMOUNT, "pound inch", "poundal foot", PLACES), 0.0);
        assertEquals(2.86, engine.convertAsDouble(AMOUNT, "pound inch", "pound inch", PLACES), 0.0);
    }

    @Test
    public void testAliases() {
        assertEquals(0.00286, engine.convertAsDouble(AMOUNT, "newton m", "kn meters", PLACES), 0.0);
        assertEquals(2.1094277, engine.convertAsDouble(AMOUNT, "n m", "lb ft", PLACES), 0.0);
        assertEquals(28.047019, engine.convertAsDouble(AMOUNT, "kg cm", "n cm", PLACES), 0.0);
        assertEquals(280.47019, engine.convertAsDouble(AMOUNT, "gram cm", "mcn meter", PLACES), 0.0);
    }

    @Test
    public void testUnitGroup() {
        Conversion conversion = engine.convert(AMOUNT, "newton m", "kg m");
        assertEquals("torque", conversion.getUnitGroup().getName());
    }

    @Test
    public void testInvalidConversion() {
        assertThrows(IllegalArgumentException.class, () -> {
            engine.convertAsDouble(AMOUNT, "newton meters", "inches");
        });
    }
}